<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Line on Korolev Blog</title>
    <link>http://localhost:1313/tags/line/</link>
    <description>Recent content in Line on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Sep 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/line/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simplicity is achieved through reduction</title>
      <link>http://localhost:1313/posts/simplicity-is-achieved-through-reduction/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/simplicity-is-achieved-through-reduction/</guid>
      <description>&amp;ldquo;Do it again&amp;hellip;&amp;rdquo; my boss said, firmly holding down the Delete key with his finger. With familiar sorrow, I watched the screen where my code was irrevocably disappearing, line by line.&#xA;My boss Stefan wasn&amp;rsquo;t particularly eloquent, but he could spot bad code at first glance. And he knew exactly what to do with it. I took that job as someone learning programming – full of energy and enthusiasm, but with no idea how to write code.&#xA;I was under the terrible delusion that any problems could be solved by adding another variable in the appropriate place or by adding another line of code. On bad days, my code would degrade—its logic wouldn&amp;rsquo;t improve, and moreover, it would become bulkier, more complex, and more unstable.</description>
    </item>
    <item>
      <title>Know how to use command line utilities</title>
      <link>http://localhost:1313/posts/know-how-to-use-command-line-utilities/</link>
      <pubDate>Sun, 21 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/know-how-to-use-command-line-utilities/</guid>
      <description>Today, many software development tools are delivered as integrated development environments (IDEs). Besides the two popular examples – Visual Studio from Microsoft and Eclipse from the open-source community – there are many others. A lot can be said in favor of IDEs. They are easy to use and they free the programmer from the need to delve into many minor details, including the build process.&#xA;However, ease of use has its downside. A tool is usually easy to use when it makes decisions for the programmer and automatically does a large amount of work behind the scenes. Therefore, if you only use an IDE as your programming environment, it is quite possible that you will never fully understand what your tools are actually doing.</description>
    </item>
    <item>
      <title>The importance of code formatting</title>
      <link>http://localhost:1313/posts/the-importance-of-code-formatting/</link>
      <pubDate>Tue, 09 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/the-importance-of-code-formatting/</guid>
      <description>In ancient times, I worked on a COBOL project where all participants were forbidden to change the indentation size unless it was necessary to modify the code. All because one day someone broke something – a line of code crept onto the next one and ended up in special columns at the beginning of the line. The ban was in effect even if the code formatting was misleading—which happened—so one had to read the code very carefully, as it couldn&amp;rsquo;t be trusted. I&amp;rsquo;m sure the losses from this policy were enormous because it slowed down the work of programmers.&#xA;Researchers have shown that a programmer spends more time navigating and reading code (to find the part that needs to be changed) than actually writing code, so it is advisable to optimize these operations.</description>
    </item>
  </channel>
</rss>
