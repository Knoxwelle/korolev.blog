<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/system/</link>
    <description>Recent content in System on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Aug 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DevOps, SRE</title>
      <link>http://localhost:1313/posts/devops-sre/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/devops-sre/</guid>
      <description>I&amp;rsquo;ve been going to interviews again, and I&amp;rsquo;d like to share some observations. This time we are talking about DevOps and SRE in enterprise companies and their recruitment processes.&#xA;DevOps/SRE I was unemployed and full of time, so I decided to interview DevOps. In vain that the course on Linux was held on Udemy (a joke, sarcasm, still passed, but to write about it is embarrassing)?! And then I liked the process much more. It consisted of only two steps: general knowledge and troubleshooting.&#xA;In general, the interviewer had a list of questions, but he allowed himself to deviate a little from it, which gave some liveliness to the conversation. We&amp;rsquo;ve had time to discuss Linux loading, networking, container operation, and databases. In general, what happens in the universe one way or another?</description>
    </item>
    <item>
      <title>Сделать наспех и сбежать это преступление</title>
      <link>http://localhost:1313/posts/%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C-%D0%BD%D0%B0%D1%81%D0%BF%D0%B5%D1%85-%D0%B8-%D1%81%D0%B1%D0%B5%D0%B6%D0%B0%D1%82%D1%8C-%D1%8D%D1%82%D0%BE-%D0%BF%D1%80%D0%B5%D1%81%D1%82%D1%83%D0%BF%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C-%D0%BD%D0%B0%D1%81%D0%BF%D0%B5%D1%85-%D0%B8-%D1%81%D0%B1%D0%B5%D0%B6%D0%B0%D1%82%D1%8C-%D1%8D%D1%82%D0%BE-%D0%BF%D1%80%D0%B5%D1%81%D1%82%D1%83%D0%BF%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5/</guid>
      <description>Time is approaching evening.The command is friendly about the new functionality scheduled for the current iteration; it seems that even the air in the room is pulsing at a working pace.However, John is a little in a hurry: he is waiting for a date.However, he has time to rewrite his part of the code, compiles it, registers in the source code management system – and rushes away.A few minutes later, the &amp;ldquo;red light&amp;rdquo; is lit: the assembly of the app is disrupted.John didn&amp;rsquo;t have time for automated tests, so he acted on the rush and run principle, causing the entire team to stall.&#xA;The situation has changed – the working rhythm has failed. Now everyone knows that when you update the code from the version control system, the code will not work on their local computers, and because the team will have to integrate a lot of code to prepare for the upcoming demonstration, this becomes a serious obstacle.</description>
    </item>
    <item>
      <title>Сбои неизбежны</title>
      <link>http://localhost:1313/posts/%D1%81%D0%B1%D0%BE%D0%B8-%D0%BD%D0%B5%D0%B8%D0%B7%D0%B1%D0%B5%D0%B6%D0%BD%D1%8B/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%81%D0%B1%D0%BE%D0%B8-%D0%BD%D0%B5%D0%B8%D0%B7%D0%B1%D0%B5%D0%B6%D0%BD%D1%8B/</guid>
      <description>Equipment is vulnerable to damage, so we&amp;rsquo;re introducing excess in our systems.It allows you to survive individual hardware failures, but increases the likelihood that at any time at least one malfunction will be present in the system.&#xA;The software code is also vulnerable. Our applications are based on software code, which means they are vulnerable too.We implement monitoring tools that report application failures, but these tools are also based on software code, which means that they are vulnerable to failure themselves.&#xA;So people make mistakes, so we try to automate our actions, diagnostics and workflows.Automation reduces the likelihood of errors caused by breaches of rules, but increases the likeliness of mistakes resulting from lack of rules.No automated system is capable of responding to such a range of situations as a human being.</description>
    </item>
    <item>
      <title>Вы ведете переговоры чаще, чем вам кажется</title>
      <link>http://localhost:1313/posts/%D0%B2%D1%8B-%D0%B2%D0%B5%D0%B4%D0%B5%D1%82%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%D1%8B-%D1%87%D0%B0%D1%89%D0%B5-%D1%87%D0%B5%D0%BC-%D0%B2%D0%B0%D0%BC-%D0%BA%D0%B0%D0%B6%D0%B5%D1%82%D1%81%D1%8F/</link>
      <pubDate>Tue, 30 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%B2%D1%8B-%D0%B2%D0%B5%D0%B4%D0%B5%D1%82%D0%B5-%D0%BF%D0%B5%D1%80%D0%B5%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%D1%8B-%D1%87%D0%B0%D1%89%D0%B5-%D1%87%D0%B5%D0%BC-%D0%B2%D0%B0%D0%BC-%D0%BA%D0%B0%D0%B6%D0%B5%D1%82%D1%81%D1%8F/</guid>
      <description>We have all fallen into “budget” refinements, when smart technological solutions are “buried” for savings.The conversation goes like this:&#xA;“Do we really need X?” the project sponsor asks.&#xA;In place of X you can replace virtually everything vital to the system: software licenses, surplus servers, external backups or power sources. The question is always asked in a native tone, as if you are dropping all your pocket money on comics and chewing, while serious adults need to think about buying new shells, in which they will drag their future profits.&#xA;The correct answer to this question is, &amp;ldquo;Yes. Absolutely necessary.&amp;rdquo; But for some reason, almost no one answers.&#xA;After all, we have technical education, and any technical discipline is the art of compromise.It is clear that no one will need exotic power sources if you put several white wheels in the data center and start interns in them.</description>
    </item>
    <item>
      <title>System Design</title>
      <link>http://localhost:1313/posts/system-design/</link>
      <pubDate>Tue, 16 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/system-design/</guid>
      <description>I&amp;rsquo;ve been going to interviews again, and I&amp;rsquo;d like to share some observations. This time we talk about system design enterprise companies and how the recruitment process should be constructed.&#xA;System Design In senior grades, another type of interview appears—system design. In one hour you have to design systems, thinking about the architecture of which in a real project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN—forget these scary words; there&amp;rsquo;s no time for them. Figac-figac and Proudakshen. Requirements collection -&amp;gt; usage options -&amp;gt; system requirements -&amp;gt; processing -&amp;gt; presentation of the solution, time has passed. The main thing here is more basic words: to build a smart face and somewhere to put kafka. Then they&amp;rsquo;ll be behind you in 40 minutes.</description>
    </item>
    <item>
      <title>Руководствуйтесь неопределённостью</title>
      <link>http://localhost:1313/posts/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E/</guid>
      <description>When faced with alternatives, people tend to believe that the most important thing is to make the right choice.In design (software products or anything else) this is not the case.The presence of an alternative is a sign that uncertainty in the design of the system needs to be analysed. Use uncertainty as a determining factor to identify places where you can postpone the transition to details or apply breakdown and abstraction to reduce the importance of design decisions.If you strictly “sew” in the system the first decision that came to your mind, it is likely to tie your hands in the future.As a result, random decisions will begin to play an important role, and the flexibility of the software product will decrease.&#xA;One of the simplest and most constructive definitions of architecture was given by Grady Booch: &amp;ldquo;Any architecture is the result of design, but not every design is aimed at creating architecture.</description>
    </item>
    <item>
      <title>Думать о производительности никогда не рано</title>
      <link>http://localhost:1313/posts/%D0%B4%D1%83%D0%BC%D0%B0%D1%82%D1%8C-%D0%BE-%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BD%D0%B8%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D0%BD%D0%B5-%D1%80%D0%B0%D0%BD%D0%BE/</link>
      <pubDate>Sun, 30 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%B4%D1%83%D0%BC%D0%B0%D1%82%D1%8C-%D0%BE-%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BD%D0%B8%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D0%BD%D0%B5-%D1%80%D0%B0%D0%BD%D0%BE/</guid>
      <description>The needs of users of business applications manifest primarily in functional requirements. Non-functional aspects of the system (such as performance, flexibility, downtime, support needs, etc.) are in the architect’s hands. At the same time, preliminary testing of non-functional requirements is often postponed to a very late stage of the development cycle and sometimes fully delegated to the system maintenance team.&#xA;This mistake is much more common than it should be. It can be based on various reasons.Worrying about the speed and flexibility of the program, which is not yet exactly performing the required function, may seem pointless. Test environments and tests themselves are quite complex.Early working versions of the system may not be exposed to a realistic load due to insufficient intensity of use.</description>
    </item>
    <item>
      <title>Используйте количественные критерии</title>
      <link>http://localhost:1313/posts/%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B9%D1%82%D0%B5-%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BA%D1%80%D0%B8%D1%82%D0%B5%D1%80%D0%B8%D0%B8/</link>
      <pubDate>Fri, 21 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B9%D1%82%D0%B5-%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BA%D1%80%D0%B8%D1%82%D0%B5%D1%80%D0%B8%D0%B8/</guid>
      <description>&amp;ldquo;Fast&amp;rdquo; can&amp;rsquo;t be a requirement.As well as having a good response time.Or, say, &amp;ldquo;expandable.&amp;ldquo;The main reason is the lack of objective criteria for meeting such requirements.But users still need these features. The task of the architect is to ensure that the system has the necessary qualities, as well as to balance the inevitable contradictions that arise between them.Without objective criteria, the architect depends on the customer’s caprices (“No, I can’t accept the program – it doesn’t work fast enough”) and on the developers obsessed with obsessive ideas (“no, the program is not ready – it isn’t working fast enough”).&#xA;Usually we try to write down all such wishes, as well as any other requirements. But this entry very often looks like a set of foggy epithetics: “flexible”, “friendly to accompany” and so on.</description>
    </item>
    <item>
      <title>Решений может быть несколько</title>
      <link>http://localhost:1313/posts/%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B9-%D0%BC%D0%BE%D0%B6%D0%B5%D1%82-%D0%B1%D1%8B%D1%82%D1%8C-%D0%BD%D0%B5%D1%81%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B9-%D0%BC%D0%BE%D0%B6%D0%B5%D1%82-%D0%B1%D1%8B%D1%82%D1%8C-%D0%BD%D0%B5%D1%81%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%BE/</guid>
      <description>One data model, one message format, one transport mechanism (and generally exactly one basic architectural component, policy, principle, etc.) cannot serve all aspects of a business organization equally well.It seems that this fact is an endless source of surprise and sadness for the developers of the systems.At the same time, it is quite natural: since the organization (the word “organization” is highlighted here with the fat red line) is large enough to worry about how several different tables of accounts will affect the system in the next decade, it must be too large and heterogeneous to be able to handle a single table.&#xA;In the technical field, uniformity can be enforced.And it&amp;rsquo;s very convenient for us.However, in the field of business, a controversial, multifaceted, informal, troubling real world comes into play.</description>
    </item>
  </channel>
</rss>
