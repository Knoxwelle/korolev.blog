<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Korolev Blog</title>
    <link>http://localhost:1313/tags/programming/</link>
    <description>Recent content in Programming on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Nov 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Program in pairs and get into the flow</title>
      <link>http://localhost:1313/posts/program-in-pairs-and-get-into-the-flow/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/program-in-pairs-and-get-into-the-flow/</guid>
      <description>Imagine that you are completely absorbed in your work: focused, passionate, and busy. You have lost track of time. You are happy. You are in a state of flow. On a larger scale, it is difficult for an entire team of developers to achieve and maintain a state of flow due to numerous interruptions, distractions, and other obstacles that can easily disrupt it.&#xA;If you have already participated in pair programming, you probably know how it contributes to achieving a state of flow. If not, we want to share our experience to encourage you to start pair programming immediately! For pair programming to be successful, some effort is required from individual team members and the entire team as a whole.&#xA;Being part of a team, show patience towards less experienced developers.</description>
    </item>
    <item>
      <title>Programming paradigms</title>
      <link>http://localhost:1313/posts/programming-paradigms/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/programming-paradigms/</guid>
      <description>Psychology of Programming: It has long been known that a programmer&amp;rsquo;s professionalism directly depends on the number of different programming paradigms they master—not just having heard of them and knowing about them, but being able to actually use them in their work.&#xA;Every programmer starts with some one language. This language has an the predominant influence on how a programmer sees software. But no matter how long a programmer has worked with this language, if they only work with it, they will only know this language. The thinking of a programmer who knows only one language is limited to the capabilities of that language.&#xA;A programmer learning a second language will encounter difficulties, especially if the computational model of the second language differs from the first.</description>
    </item>
    <item>
      <title>Apply the principles of functional programming</title>
      <link>http://localhost:1313/posts/apply-the-principles-of-functional-programming/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/apply-the-principles-of-functional-programming/</guid>
      <description>Functional programming has recently regained the attention of the majority in the programming community, partly because the emergent properties of the functional paradigm resonate with solving the challenges arising in our industry due to the increasing importance of multi-core architectures. And although this application is undoubtedly important, it is not the main reason for my urging to learn functional programming.&#xA;By mastering the functional programming paradigm, a programmer can significantly improve the quality of code produced in other contexts. A deep understanding of the functional programming paradigm and its practical application will help you design systems with a much higher degree of referential transparency.&#xA;Referential transparency is a highly desirable quality: it implies that functions consistently produce the same results for the same input data regardless of the place and time of calling these functions.</description>
    </item>
    <item>
      <title>You need to take care of the code</title>
      <link>http://localhost:1313/posts/you-need-to-take-care-of-the-code/</link>
      <pubDate>Tue, 14 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/you-need-to-take-care-of-the-code/</guid>
      <description>You don&amp;rsquo;t need to be Sherlock Holmes to understand that good programmers write good code. Well, the bad ones don&amp;rsquo;t. They create ugly things that everyone else has to clean up. But you want to write good code, right? Then you need to strive to become a good programmer.&#xA;Good code doesn&amp;rsquo;t just appear out of nowhere. Its emergence is not caused by the favorable alignment of the planets. To make the code good, you need to work on it, and quite a bit. You will create good code only when you truly strive for it. Good programming is not the result of mere technical competence. I have encountered very smart programmers who are capable of creating strong and impressive algorithms, know the standards of their language perfectly, and yet write completely terrible code.</description>
    </item>
    <item>
      <title>Commentary on comments</title>
      <link>http://localhost:1313/posts/commentary-on-comments/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/commentary-on-comments/</guid>
      <description>At my first programming class at the university, the instructor handed out two sheets for us to write the program text in BASIC. On the board, he wrote the assignment: &amp;ldquo;Create a program to input and calculate the average of 10 bowling scores.&amp;rdquo; Then the teacher left the room. Is this task difficult? I don&amp;rsquo;t remember my solution, but it seems there was a FOR/NEXT loop and no more than 15 lines of code.&#xA;In each form for the program code, we would write the code by hand before entering it into the computer – it was about 70 lines. I had no idea why the teacher gave us two forms each. Since my handwriting has always been terrible, I used the second form to neatly rewrite my code, hoping to earn a couple of points for style.</description>
    </item>
  </channel>
</rss>
