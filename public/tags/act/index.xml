<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Act on Korolev Blog</title>
    <link>http://localhost:1313/tags/act/</link>
    <description>Recent content in Act on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/act/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Communication is the king, clarity and leadership are its loyal servants</title>
      <link>http://localhost:1313/posts/communication-is-the-king-clarity-and-leadership-are-its-loyal-servants/</link>
      <pubDate>Wed, 31 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/communication-is-the-king-clarity-and-leadership-are-its-loyal-servants/</guid>
      <description>Psychology in IT manifests in everything. Every person has their own base tendencies to dominate. Remember that famous experiment where a group of people was divided into prisoners and guards? Or India with its castes? Well, IT is just like India.&#xA;Too often, software architects dwell in ivory towers, sending down specifications to developers and imposing technologies and directions on them. This often leads to conflicts, which are quickly followed by a &amp;ldquo;popular uprising.&amp;rdquo; As a result, a software product emerges that has nothing to do with the original requirements. Every software architect should be able to explain the goals and objectives of the software project to their colleagues. The keys to effective communication are clarity and leadership.&#xA;Clarity characterizes the communication process. No one in your group will become read a 100-page document justifying your architectural decisions.</description>
    </item>
    <item>
      <title>Hard work does not justify itself</title>
      <link>http://localhost:1313/posts/hard-work-does-not-justify-itself/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/hard-work-does-not-justify-itself/</guid>
      <description>Every programmer needs to be convinced that intense work is often unjustified. You can deceive yourself or your colleagues into thinking that by staying late at the office, you are making a significant contribution to the project. But in reality, by working less, you can achieve moreâ€”sometimes significantly more. If you are trying to work &amp;ldquo;productively&amp;rdquo; and with focus for more than 30 hours a week, you are likely overworking. It might be worth considering reducing your workload, which will allow you to work more efficiently and accomplish more.&#xA;It may seem that my statement contradicts common sense and is generally debatable. However, it is a direct consequence of the fact that programming and software development, in general, require continuous knowledge expansion. As you work on a project, you will come to better understand the subject area and, hopefully, find more efficient ways to achieve your goals.</description>
    </item>
  </channel>
</rss>
