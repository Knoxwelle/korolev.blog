<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leads on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/leads/</link>
    <description>Recent content in Leads on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 May 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/leads/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simplicity is better than versatility</title>
      <link>http://localhost:1313/posts/simplicity-is-better-than-versatility/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/simplicity-is-better-than-versatility/</guid>
      <description>The fact that many frameworks, class libraries, basic services, and other infrastructure code are made to be used universally and aren&amp;rsquo;t tied to any particular application is a common issue with them. The majority of developers specialize in particular systems; therefore, trying to be as versatile as possible is rarely beneficial to them. The greatest approach to reaching universality is not by universality based on supposition but rather by a thorough comprehension of known concrete cases and a study of their essence to uncover a fundamental common solution. Simplicity is the outcome of practical experience.&#xA;Simplifying an architectural design over adding more features makes it easier to choose between two options that are equivalent in every other way. Choose a more straightforward and needs-based solution over a more complex and adaptable one when there are two options.</description>
    </item>
  </channel>
</rss>
