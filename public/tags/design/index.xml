<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/design/</link>
    <description>Recent content in Design on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design</title>
      <link>http://localhost:1313/posts/system-design/</link>
      <pubDate>Tue, 16 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/system-design/</guid>
      <description>I&amp;rsquo;ve been going to interviews again, and I&amp;rsquo;d like to share some observations. This time we talk about system design enterprise companies and how the recruitment process should be constructed.&#xA;System Design In senior grades, another type of interview appears—system design. In one hour you have to design systems, thinking about the architecture of which in a real project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN—forget these scary words; there&amp;rsquo;s no time for them. Figac-figac and Proudakshen. Requirements collection -&amp;gt; usage options -&amp;gt; system requirements -&amp;gt; processing -&amp;gt; presentation of the solution, time has passed. The main thing here is more basic words: to build a smart face and somewhere to put kafka. Then they&amp;rsquo;ll be behind you in 40 minutes.</description>
    </item>
    <item>
      <title>Руководствуйтесь неопределённостью</title>
      <link>http://localhost:1313/posts/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D1%83%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8C%D1%8E/</guid>
      <description>When faced with alternatives, people tend to believe that the most important thing is to make the right choice.In design (software products or anything else) this is not the case.The presence of an alternative is a sign that uncertainty in the design of the system needs to be analysed. Use uncertainty as a determining factor to identify places where you can postpone the transition to details or apply breakdown and abstraction to reduce the importance of design decisions.If you strictly “sew” in the system the first decision that came to your mind, it is likely to tie your hands in the future.As a result, random decisions will begin to play an important role, and the flexibility of the software product will decrease.&#xA;One of the simplest and most constructive definitions of architecture was given by Grady Booch: &amp;ldquo;Any architecture is the result of design, but not every design is aimed at creating architecture.</description>
    </item>
    <item>
      <title>Одна строка рабочего кода стоит 500 строк спецификации</title>
      <link>http://localhost:1313/posts/%D0%BE%D0%B4%D0%BD%D0%B0-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B0-%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE-%D0%BA%D0%BE%D0%B4%D0%B0-%D1%81%D1%82%D0%BE%D0%B8%D1%82-500-%D1%81%D1%82%D1%80%D0%BE%D0%BA-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%B8/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%BE%D0%B4%D0%BD%D0%B0-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B0-%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE-%D0%BA%D0%BE%D0%B4%D0%B0-%D1%81%D1%82%D0%BE%D0%B8%D1%82-500-%D1%81%D1%82%D1%80%D0%BE%D0%BA-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%B8/</guid>
      <description>Proecting is a beautiful thing. A systematic, detailed presentation of the space of the problem and its solution reveals mistakes and reveals opportunities for improvement, sometimes in a very radical way.Specifications play an important role in this, as they define the pattern for building the system.It is very important to think about the entire architecture—both at the macro level, considering the interaction between the components, and at the micro level, penetrating the behavior of components themselves.&#xA;Unfortunately, architects are often fascinated by the design process, falling under the charm of architectural abstractions. However, the specifications themselves have no value. The ultimate objective of the software project is a really functioning system.The architect should always keep this goal in mind and remember that design is only a means, not the end result.</description>
    </item>
  </channel>
</rss>
