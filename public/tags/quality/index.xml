<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quality on Korolev Blog</title>
    <link>http://localhost:1313/tags/quality/</link>
    <description>Recent content in Quality on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Dec 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/quality/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Perspective as seen from 300 meters</title>
      <link>http://localhost:1313/posts/perspective-as-seen-from-300-meters/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/perspective-as-seen-from-300-meters/</guid>
      <description>We architects are interested in learning how good the software we are developing is.There is a more subtle internal component to program quality that has to do with the design&amp;rsquo;s clarity, or how simple it is for us to comprehend, support, and grow the software product. The exterior component of program quality is evident: the program must be valuable to the user. Whenever we push for a definition of quality, we ultimately say, &amp;ldquo;I&amp;rsquo;ll know when I see it.&amp;rdquo; So, what do you think quality is?&#xA;Architectural charts use small squares to represent entire systems, and the lines that connect them can indicate any number of things, including shared resources (like a train) or dependencies. These diagrams show the system at a 10-kilometer altitude, which is roughly equivalent to how an airplane views the terrain.</description>
    </item>
    <item>
      <title>Try not to alter the timetable</title>
      <link>http://localhost:1313/posts/try-not-to-alter-the-timetable/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/try-not-to-alter-the-timetable/</guid>
      <description>There are several reasons why a software project might not succeed. One of the most common reasons projects fail is modifying the work schedule in the middle of the project without adequate planning. These kinds of failures can be avoided, but it will require a large team effort to do so. Changes to a project&amp;rsquo;s schedule or resource allocation usually don&amp;rsquo;t result in any problems. Problems occur when you have to work longer hours in the same amount of time or shorten the schedule without reducing the task.&#xA;The myth that you may shorten the schedule to save costs or speed product delivery is one that is widely held. More hours are typically put in, or &amp;ldquo;less important tasks&amp;rdquo; (such as modular testing) are abandoned in order to produce a product faster or with better functionality that doesn&amp;rsquo;t delay delivery.</description>
    </item>
  </channel>
</rss>
