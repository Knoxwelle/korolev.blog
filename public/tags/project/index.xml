<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/project/</link>
    <description>Recent content in Project on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Never prioritize your resume over the needs of the client</title>
      <link>http://localhost:1313/posts/never-prioritize-your-resume-over-the-needs-of-the-client/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/never-prioritize-your-resume-over-the-needs-of-the-client/</guid>
      <description>We, technicians, choose to use certain technologies, methodologies and approaches to solve problems not because they provide the optimal solution, but only because in the depths of our heart we want to mention them in our summary. Such a choice very rarely leads to a positive result.&#xA;The most powerful catalyst for your career will be grateful customers who are in a long queue to recommend you to others – because you have worked so well for them. The kindness of the customers will serve you better than any new-fashioned object of the new language and any newly invented paradigm. While it is very important (and even vital) for an architect to be up to date with the latest trends and technologies, never try to expand your horizons at the expense of the client.</description>
    </item>
    <item>
      <title>Архитектор должен быть практиком</title>
      <link>http://localhost:1313/posts/%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D0%BE%D1%80-%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD-%D0%B1%D1%8B%D1%82%D1%8C-%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%BE%D0%BC/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D0%BE%D1%80-%D0%B4%D0%BE%D0%BB%D0%B6%D0%B5%D0%BD-%D0%B1%D1%8B%D1%82%D1%8C-%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%BE%D0%BC/</guid>
      <description>A good architect should set an example to others. He should be able to replace any member of his team and do anything from networking and configuring the assembly process to writing modular tests and performing performance tests. Without a good understanding of the entire range of technologies, an architect is little different from an ordinary project manager.Team members may have deeper knowledge in their narrow fields – this is perfectly normal – but they are unlikely to be able to trust their architect unless he is familiar with the technologies used.As has already been said, an architect is an interface between the technical team and the business, which means that he must understand all the technical aspects in order to play the role of the team representative before the business management, without constantly seeking help.</description>
    </item>
    <item>
      <title>Communication is the king, clarity and leadership are his true companions</title>
      <link>http://localhost:1313/posts/communication-is-the-king-clarity-and-leadership-are-his-true-companions-1/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/communication-is-the-king-clarity-and-leadership-are-his-true-companions-1/</guid>
      <description>Too often, software architects live in ivory towers, leaving specifications to the developers and imposing technologies and directions on them. At the same time, this leads to strife, which is quickly followed by a “popular uprising.&amp;quot; The result is a software product that has nothing to do with the original requirements. Every software architect must be able to explain to his colleagues the goals and objectives of the software project. The keys to effective communication are clarity and leadership.&#xA;Clearness characterizes the process of communication. No one in your group will read a 100-page document justifying your architectural decisions. The ability to express your thoughts clearly is vital to the success of any program or project. From the very beginning of work on the project, adhere to simple explanations and, in no case, start making long descriptions in Word.</description>
    </item>
    <item>
      <title>Одна строка рабочего кода стоит 500 строк спецификации</title>
      <link>http://localhost:1313/posts/%D0%BE%D0%B4%D0%BD%D0%B0-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B0-%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE-%D0%BA%D0%BE%D0%B4%D0%B0-%D1%81%D1%82%D0%BE%D0%B8%D1%82-500-%D1%81%D1%82%D1%80%D0%BE%D0%BA-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%B8/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%BE%D0%B4%D0%BD%D0%B0-%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B0-%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B5%D0%B3%D0%BE-%D0%BA%D0%BE%D0%B4%D0%B0-%D1%81%D1%82%D0%BE%D0%B8%D1%82-500-%D1%81%D1%82%D1%80%D0%BE%D0%BA-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%B8/</guid>
      <description>Proecting is a beautiful thing. A systematic, detailed presentation of the space of the problem and its solution reveals mistakes and reveals opportunities for improvement, sometimes in a very radical way.Specifications play an important role in this, as they define the pattern for building the system.It is very important to think about the entire architecture—both at the macro level, considering the interaction between the components, and at the micro level, penetrating the behavior of components themselves.&#xA;Unfortunately, architects are often fascinated by the design process, falling under the charm of architectural abstractions. However, the specifications themselves have no value. The ultimate objective of the software project is a really functioning system.The architect should always keep this goal in mind and remember that design is only a means, not the end result.</description>
    </item>
    <item>
      <title>Старайтесь не нарушать график</title>
      <link>http://localhost:1313/posts/%D1%81%D1%82%D0%B0%D1%80%D0%B0%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5-%D0%BD%D0%B0%D1%80%D1%83%D1%88%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA/</link>
      <pubDate>Fri, 31 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%81%D1%82%D0%B0%D1%80%D0%B0%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5-%D0%BD%D0%B0%D1%80%D1%83%D1%88%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA/</guid>
      <description>A software project can fail for many reasons.One of the most common sources of project failure is changing the schedule of work during the project execution without proper planning.Such failures can be avoided, but it requires considerable effort on the part of many people.Adjusting the timescale or adding resources to a project usually does not create any problems.Problems start when you are required to do more work in the same timeframe or shorten the schedule without reducing the load.&#xA;The idea that by shortening the schedule you can reduce costs or speed up the delivery of a product is a very common misconception.Typically, overtime is used or &amp;ldquo;less important tasks&amp;rdquo; (such as modular testing) are sacrificed for faster delivery of the product or for enhanced functionality without changing the delivery time.</description>
    </item>
    <item>
      <title>Perhaps your main problem is not technology</title>
      <link>http://localhost:1313/posts/perhaps-your-main-problem-is-not-technology/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/perhaps-your-main-problem-is-not-technology/</guid>
      <description>Right now, somewhere is suffering the disaster of another project of a wage calculation system&amp;hellip; And probably not alone.&#xA;Why did that happen? Because the developers chose Ruby instead of Java or Python instead of Smalltalk? Because you decided to use Postgres instead of Oracle? or because, although you ought to have selected Linux, you liked the Windows platform better? As you know, all project failures are usually blamed on technology. But was your task really so complex that the Java capabilities were not enough for it?&#xA;Projects are usually created by people, and it is these people that determine the success or failure of the whole project. And once that&amp;rsquo;s the case, we need to think a little bit about how to help them succeed.</description>
    </item>
    <item>
      <title>Обеспечьте непрерывную интеграцию</title>
      <link>http://localhost:1313/posts/%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D1%8C%D1%82%D0%B5-%D0%BD%D0%B5%D0%BF%D1%80%D0%B5%D1%80%D1%8B%D0%B2%D0%BD%D1%83%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8E/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%BE%D0%B1%D0%B5%D1%81%D0%BF%D0%B5%D1%87%D1%8C%D1%82%D0%B5-%D0%BD%D0%B5%D0%BF%D1%80%D0%B5%D1%80%D1%8B%D0%B2%D0%BD%D1%83%D1%8E-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8E/</guid>
      <description>The collection has long ceased to play the role of the &amp;ldquo;Big Bang&amp;rdquo; in the design of projects.Both architects (both at the application level and at the corporate level) should encourage the use of continuous integration methods and tools in each project.&#xA;The term continuous integration (CI, Continuous Integration) was first proposed by Martin Fowler as a design template. It means a set of methods and tools that ensure regular automatic assembly and testing of applications over short intervals of time (usually on an integration server specially designed to perform these operations).For any modern software project, the practice of continuous integration, combining modular testing methods and tools with automated assembly tools, becomes mandatory.&#xA;Continuous integration affects an integral element of the software development process – the point of converting the source code into a working application.</description>
    </item>
  </channel>
</rss>
