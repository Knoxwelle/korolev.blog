<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Product on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/product/</link>
    <description>Recent content in Product on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Aug 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/product/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Создание архитектуры как искусство баланса</title>
      <link>http://localhost:1313/posts/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D1%8B-%D0%BA%D0%B0%D0%BA-%D0%B8%D1%81%D0%BA%D1%83%D1%81%D1%81%D1%82%D0%B2%D0%BE-%D0%B1%D0%B0%D0%BB%D0%B0%D0%BD%D1%81%D0%B0/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D1%8B-%D0%BA%D0%B0%D0%BA-%D0%B8%D1%81%D0%BA%D1%83%D1%81%D1%81%D1%82%D0%B2%D0%BE-%D0%B1%D0%B0%D0%BB%D0%B0%D0%BD%D1%81%D0%B0/</guid>
      <description>When it comes to developing a software architecture, we first imagine the classic technical operations: system breakdown into modules, defining interfaces, allocating responsibilities, applying templates, and optimizing performance.In addition, the architect must take into account a number of other aspects, including safety, ease of use, easy maintenance, output management, choice of deployment settings, etc.However, all of these technical and procedural aspects must be relevant to the needs of the stakeholders.Taking these interests into account in the analysis of requirements is a great way to ensure that the requirements specifications for the product being developed are complete.&#xA;All parties involved in the project have interests affecting both the software development process adopted in the organization and the organization as a whole. It is the analysis of these interests that forms the resulting set of priorities for the architect.</description>
    </item>
    <item>
      <title>Application performance determined by architecture</title>
      <link>http://localhost:1313/posts/application-performance-determined-by-architecture/</link>
      <pubDate>Sat, 10 Aug 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/application-performance-determined-by-architecture/</guid>
      <description>The performance of an application is determined by its architecture. At first glance, this assertion seems obvious, but real-life experience shows the opposite. For example, software architects often believe that application performance problems can be solved by simply switching to the software infrastructure from another manufacturer. The source of this belief may be a river of noise around the test results; for example, it is stated that the product of the leading company is 25% superior in performance to the nearest competitor. However, if the leader product performs the operation in 3 milliseconds and the competitor product in 4 milliseconds, the stated 25% (one millisection) means very little against the background of the overall low performance, which is rooted in architecture inefficiency. In addition to IT managers and performance testing teams, there are other groups of people, such as the developer&amp;rsquo;s support service and the authors of the app performance management books, who recommend that you do the subtle configuration of the application&amp;rsquo;s infrastructure: play with memory allocation operations, connectivity pool sizes, flow pool size, and so on.</description>
    </item>
  </channel>
</rss>
