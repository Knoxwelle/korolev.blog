<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fine-Tuning on Korolev Blog</title>
    <link>http://localhost:1313/tags/fine-tuning/</link>
    <description>Recent content in Fine-Tuning on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/fine-tuning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The performance of an application is determined by its architecture</title>
      <link>http://localhost:1313/posts/the-performance-of-an-application-is-determined-by-its-architecture/</link>
      <pubDate>Mon, 01 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/the-performance-of-an-application-is-determined-by-its-architecture/</guid>
      <description>The performance of an application is determined by its architecture. At first glance, it seems that this statement should be obvious, but real-world experience shows otherwise. For example, software architects often believe that application performance issues can be resolved simply by switching to software infrastructure from another vendor. The source of this belief may be the advertising hype surrounding testing results â€“ for example, it is claimed that the leading company&amp;rsquo;s product outperforms the nearest competitor by a certain percentage. However, if the leading product performs an operation in 3 milliseconds, while the competing product does it in 4 milliseconds, the claimed percentage (one millisecond) means very little against the backdrop of overall low performance rooted in architectural inefficiency.&#xA;Besides IT managers and performance testing teams, there are and other groups of people, such as the support service of the development company and authors of books on application performance management, which they recommend fine-tuning the application infrastructure: play with memory allocation operations, connection pool sizes, the sizes of thread pools and so on.</description>
    </item>
  </channel>
</rss>
