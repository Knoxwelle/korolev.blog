<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Team on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/team/</link>
    <description>Recent content in Team on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jun 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/team/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The architect must be a practitioner</title>
      <link>http://localhost:1313/posts/the-architect-must-be-a-practitioner/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/the-architect-must-be-a-practitioner/</guid>
      <description>A competent architect ought to lead by example. He should be able to take the position of any team member and handle any task, including creating modular tests, conducting performance tests, and setting up networking and the assembly process. In the absence of a thorough comprehension of all available technologies, an architect is really no different from a regular project manager.Although it is rather typical for team members to be more knowledgeable in their specialized professions, they are unlikely to be able to trust their architect unless he is conversant with the technology being employed.Since an architect serves as a liaison between the technical team and the company, as has already been mentioned, he must be well-versed in all technical facets in order to represent the team to the business management without continuously seeking assistance.</description>
    </item>
    <item>
      <title>Problems can be more than their reflection in the mirror</title>
      <link>http://localhost:1313/posts/problems-can-be-more-than-their-reflection-in-the-mirror/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/problems-can-be-more-than-their-reflection-in-the-mirror/</guid>
      <description>I have several programming projects that I have been working on.They all ran into issues that proved to be more problematic than the development team had anticipated.This frequently happened in the following ways: while some team members identified these issues early on, the majority of employees rejected or disregarded any indications because they didn&amp;rsquo;t recognize their significance until it was too late.&#xA;There are several reasons why this occurs:&#xA;Issues that appear unimportant early in the project grow important when it is too late to address them.Although the tale of the welded frog is undoubtedly exaggerated, it well captures what goes wrong in many undertakings.&#xA;Some workers frequently run into opposition when other team members lack comparable expertise or experience.Even highly compensated seasoned consultants recruited expressly to avoid such issues rarely possess the guts, confidence, and perseverance needed to overcome this opposition.</description>
    </item>
  </channel>
</rss>
