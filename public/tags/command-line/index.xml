<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Command-Line on Korolev Blog</title>
    <link>http://localhost:1313/tags/command-line/</link>
    <description>Recent content in Command-Line on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/command-line/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Know how to use command line utilities</title>
      <link>http://localhost:1313/posts/know-how-to-use-command-line-utilities/</link>
      <pubDate>Sun, 21 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/know-how-to-use-command-line-utilities/</guid>
      <description>Today, many software development tools are delivered as integrated development environments (IDEs). Besides the two popular examples – Visual Studio from Microsoft and Eclipse from the open-source community – there are many others. A lot can be said in favor of IDEs. They are easy to use and they free the programmer from the need to delve into many minor details, including the build process.&#xA;However, ease of use has its downside. A tool is usually easy to use when it makes decisions for the programmer and automatically does a large amount of work behind the scenes. Therefore, if you only use an IDE as your programming environment, it is quite possible that you will never fully understand what your tools are actually doing.</description>
    </item>
  </channel>
</rss>
