<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors on Korolev Blog</title>
    <link>http://localhost:1313/tags/errors/</link>
    <description>Recent content in Errors on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Feb 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/errors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prevent the occurrence of errors</title>
      <link>http://localhost:1313/posts/prevent-the-occurrence-of-errors/</link>
      <pubDate>Sat, 01 Feb 2025 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/prevent-the-occurrence-of-errors/</guid>
      <description>Error messages are the most critical form of interaction between the user and the system. They arise when the user&amp;rsquo;s communication with the system is on the verge of breaking down.&#xA;It is easiest to assume that errors occur due to user fault from entering incorrect data. However, the mistakes people make are predictable and happen systematically. Therefore, you can &amp;ldquo;debug&amp;rdquo; the interaction between the user and the system just as you debug the interaction between other components of the system.&#xA;Let&amp;rsquo;s say the user needs to enter a date within a specific range. Instead of allowing them to enter any date, wouldn&amp;rsquo;t it be better to provide a tool like a list or calendar that shows only the permissible dates? This would eliminate any possibility of entering a date outside the allowed range.</description>
    </item>
    <item>
      <title>Before blaming others, check your own code</title>
      <link>http://localhost:1313/posts/before-blaming-others-check-your-own-code/</link>
      <pubDate>Mon, 08 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/before-blaming-others-check-your-own-code/</guid>
      <description>A developer – any of us! – often finds it difficult to admit that their code doesn&amp;rsquo;t work. It seems so implausible that we are more likely to assume there is a bug in the compiler.&#xA;In reality, it is very, very rare for code to be non-functional due to a bug in the compiler, interpreter, operating system, application server, database, memory manager, or any other element of system software. Yes, there are bugs, but they are much less frequent than we would like to think.&#xA;Once, I actually encountered a bug in the compiler (removing the loop variable during optimization), but in all other cases, my complaints about the compiler or operating system turned out to be unfounded. I wasted a lot of my time, support staff time, and management time, only to end up in an awkward position when it turned out that the mistake was my own.</description>
    </item>
  </channel>
</rss>
