<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ram on Korolev Blog</title>
    <link>http://localhost:1313/tags/ram/</link>
    <description>Recent content in Ram on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Sep 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ram/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enterprise interview</title>
      <link>http://localhost:1313/posts/enterprise-interview/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/enterprise-interview/</guid>
      <description>I would want to share some insights from my recent return to interviewing. This episode covers employment process design and screening in large organizations.&#xA;Examining Tech-screening then takes off like wildfire. The recruiter checks in with Sparkling and asks a ton of questions during the first call. As an example:&#xA;-How is it possible to halt the container? The original data types in Python? What is the PID of the Linux kernel? How are PACELC and CAP understood?&#xA;-&amp;hellip; Some even go so far as to use tiny executable pieces of code to create an entire platform. Twenty queries in twenty minutes. &amp;ldquo;How do I send a message to the generator?&amp;rdquo; Or even &amp;ldquo;What does this code do?&amp;rdquo; He knows that the code is so strange that I wouldn&amp;rsquo;t just ignore it in a review.</description>
    </item>
    <item>
      <title>Relational Database Management Systems</title>
      <link>http://localhost:1313/posts/relational-database-management-systems/</link>
      <pubDate>Sun, 09 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/relational-database-management-systems/</guid>
      <description>If your application needs to handle a large, long-lived set of interrelated data elements, you can confidently place it in a relational database. In the past, there were few relational DBMSs; they were complex, expensive to maintain, and clunky beasts. Those times are gone. Today, finding a relational DBMS is not difficult: it is quite possible that a relational DBMS or even two are already installed on your machine. Some very advanced relational DBMSs, such like MySQL and PostgreSQL, are available in source code, so the question of costs it is no longer worth buying them. Moreover, the so-called &amp;ldquo;embedded database systems&amp;rdquo; can be integrated into your application as libraries, almost requiring no configuration and administration; two such examples are interesting open-source DBMS, SQLite and HSQLDB.</description>
    </item>
  </channel>
</rss>
