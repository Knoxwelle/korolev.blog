<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problems on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/problems/</link>
    <description>Recent content in Problems on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jun 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/problems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Думать о производительности никогда не рано</title>
      <link>http://localhost:1313/posts/%D0%B4%D1%83%D0%BC%D0%B0%D1%82%D1%8C-%D0%BE-%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BD%D0%B8%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D0%BD%D0%B5-%D1%80%D0%B0%D0%BD%D0%BE/</link>
      <pubDate>Sun, 30 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%B4%D1%83%D0%BC%D0%B0%D1%82%D1%8C-%D0%BE-%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D0%BD%D0%B8%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D0%BD%D0%B5-%D1%80%D0%B0%D0%BD%D0%BE/</guid>
      <description>The needs of users of business applications manifest primarily in functional requirements. Non-functional aspects of the system (such as performance, flexibility, downtime, support needs, etc.) are in the architect’s hands. At the same time, preliminary testing of non-functional requirements is often postponed to a very late stage of the development cycle and sometimes fully delegated to the system maintenance team.&#xA;This mistake is much more common than it should be. It can be based on various reasons.Worrying about the speed and flexibility of the program, which is not yet exactly performing the required function, may seem pointless. Test environments and tests themselves are quite complex.Early working versions of the system may not be exposed to a realistic load due to insufficient intensity of use.</description>
    </item>
    <item>
      <title>Старайтесь не нарушать график</title>
      <link>http://localhost:1313/posts/%D1%81%D1%82%D0%B0%D1%80%D0%B0%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5-%D0%BD%D0%B0%D1%80%D1%83%D1%88%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA/</link>
      <pubDate>Fri, 31 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D1%81%D1%82%D0%B0%D1%80%D0%B0%D0%B9%D1%82%D0%B5%D1%81%D1%8C-%D0%BD%D0%B5-%D0%BD%D0%B0%D1%80%D1%83%D1%88%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA/</guid>
      <description>A software project can fail for many reasons.One of the most common sources of project failure is changing the schedule of work during the project execution without proper planning.Such failures can be avoided, but it requires considerable effort on the part of many people.Adjusting the timescale or adding resources to a project usually does not create any problems.Problems start when you are required to do more work in the same timeframe or shorten the schedule without reducing the load.&#xA;The idea that by shortening the schedule you can reduce costs or speed up the delivery of a product is a very common misconception.Typically, overtime is used or &amp;ldquo;less important tasks&amp;rdquo; (such as modular testing) are sacrificed for faster delivery of the product or for enhanced functionality without changing the delivery time.</description>
    </item>
    <item>
      <title>Проблемы могут быть больше чем их отражение в зеркале</title>
      <link>http://localhost:1313/posts/%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D1%8B-%D0%BC%D0%BE%D0%B3%D1%83%D1%82-%D0%B1%D1%8B%D1%82%D1%8C-%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B5-%D1%87%D0%B5%D0%BC-%D0%B8%D1%85-%D0%BE%D1%82%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-%D0%B7%D0%B5%D1%80%D0%BA%D0%B0%D0%BB%D0%B5/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D1%8B-%D0%BC%D0%BE%D0%B3%D1%83%D1%82-%D0%B1%D1%8B%D1%82%D1%8C-%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%B5-%D1%87%D0%B5%D0%BC-%D0%B8%D1%85-%D0%BE%D1%82%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-%D0%B7%D0%B5%D1%80%D0%BA%D0%B0%D0%BB%D0%B5/</guid>
      <description>I&amp;rsquo;ve been working on a bunch of programming projects.Each of them encountered problems that caused more trouble than the developer team expected.This often occurred as follows: some team members noticed such problems early, but most staff rejected or ignored all symptoms because they did not realize their importance until it was too late.&#xA;This happens for a variety of reasons:&#xA;Problems that seem trivial at an early stage of the project become critical when ix is too late to fix.The story of a welded frog is probably an exaggeration, but it perfectly illustrates what is happening in many projects.&#xA;Some employees often encounter resistance when other team members do not have similar experience or knowledge.Overcoming this resistance requires exceptional courage, confidence and persistence, and these qualities are rarely possessed even by highly paid experienced consultants hired specifically to prevent such problems.</description>
    </item>
    <item>
      <title>Perhaps your main problem is not technology</title>
      <link>http://localhost:1313/posts/perhaps-your-main-problem-is-not-technology/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/perhaps-your-main-problem-is-not-technology/</guid>
      <description>Right now, somewhere is suffering the disaster of another project of a wage calculation system&amp;hellip; And probably not alone.&#xA;Why did that happen? Because the developers chose Ruby instead of Java or Python instead of Smalltalk? Because you decided to use Postgres instead of Oracle? or because, although you ought to have selected Linux, you liked the Windows platform better? As you know, all project failures are usually blamed on technology. But was your task really so complex that the Java capabilities were not enough for it?&#xA;Projects are usually created by people, and it is these people that determine the success or failure of the whole project. And once that&amp;rsquo;s the case, we need to think a little bit about how to help them succeed.</description>
    </item>
  </channel>
</rss>
