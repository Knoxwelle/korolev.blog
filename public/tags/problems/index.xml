<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problems on Korolev Blog</title>
    <link>http://localhost:1313/tags/problems/</link>
    <description>Recent content in Problems on Korolev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jun 2025 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/problems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Two mistakes can cancel each other out, making them difficult to correct</title>
      <link>http://localhost:1313/posts/two-mistakes-can-cancel-each-other-out-making-them-difficult-to-correct/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/two-mistakes-can-cancel-each-other-out-making-them-difficult-to-correct/</guid>
      <description>Code never lies, but it can be internally contradictory. Sometimes contradictions cause confusion: how can this even work?&#xA;In his interview, Allan Klumpp, the lead software developer for the Apollo lunar module, revealed that the engine control software contained a defect that caused the lunar module to behave erratically. However, there was another bug in the program that compensated for the first one, and during the Apollo 11 and 12 moon landings, this software was successfully used before the bugs were discovered and fixed.&#xA;Let&amp;rsquo;s consider a function that returns an exit code. Let&amp;rsquo;s say it returns false when it should return true. Now imagine that the calling function does not implement the check for the return value. Everything works perfectly until one day someone discovers the lack of a check and adds it.</description>
    </item>
    <item>
      <title>Install me</title>
      <link>http://localhost:1313/posts/install-me/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/install-me/</guid>
      <description>I am not at all interested in your program.&#xA;I have plenty of my own problems and a long list of tasks. I only visited your site because of unverified rumors that your program would solve all my problems. Please forgive my skepticism.&#xA;If eye-tracking studies are correct, I&amp;rsquo;ve already read the headline and am scrolling through the page looking for the blue underlined link Download Now. By the way, if I accessed this page from a browser running on Linux and my IP is from Canada, it can be assumed that I need the Linux version from a North American mirror, so please don&amp;rsquo;t ask about that. I understand that the file download dialog will open immediately, so I&amp;rsquo;ll send this thing to my downloads folder and continue reading.</description>
    </item>
    <item>
      <title>Try not to alter the timetable</title>
      <link>http://localhost:1313/posts/try-not-to-alter-the-timetable/</link>
      <pubDate>Fri, 20 Dec 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/try-not-to-alter-the-timetable/</guid>
      <description>There are several reasons why a software project might not succeed. One of the most common reasons projects fail is modifying the work schedule in the middle of the project without adequate planning. These kinds of failures can be avoided, but it will require a large team effort to do so. Changes to a project&amp;rsquo;s schedule or resource allocation usually don&amp;rsquo;t result in any problems. Problems occur when you have to work longer hours in the same amount of time or shorten the schedule without reducing the task.&#xA;The myth that you may shorten the schedule to save costs or speed product delivery is one that is widely held. More hours are typically put in, or &amp;ldquo;less important tasks&amp;rdquo; (such as modular testing) are abandoned in order to produce a product faster or with better functionality that doesn&amp;rsquo;t delay delivery.</description>
    </item>
  </channel>
</rss>
