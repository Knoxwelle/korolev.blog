<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problem on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/problem/</link>
    <description>Recent content in Problem on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jun 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/problem/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The architect must be a practitioner</title>
      <link>http://localhost:1313/posts/the-architect-must-be-a-practitioner/</link>
      <pubDate>Fri, 28 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/the-architect-must-be-a-practitioner/</guid>
      <description>A competent architect ought to lead by example. He should be able to take the position of any team member and handle any task, including creating modular tests, conducting performance tests, and setting up networking and the assembly process. In the absence of a thorough comprehension of all available technologies, an architect is really no different from a regular project manager.Although it is rather typical for team members to be more knowledgeable in their specialized professions, they are unlikely to be able to trust their architect unless he is conversant with the technology being employed.Since an architect serves as a liaison between the technical team and the company, as has already been mentioned, he must be well-versed in all technical facets in order to represent the team to the business management without continuously seeking assistance.</description>
    </item>
    <item>
      <title>Find the true meaning of the needs</title>
      <link>http://localhost:1313/posts/find-the-true-meaning-of-the-needs/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/find-the-true-meaning-of-the-needs/</guid>
      <description>Clients and end users frequently insist on what they perceive to be a workable solution to an issue. Leading F-16 Falcon designer Harry Hillaker provides a prime illustration of this. His team&amp;rsquo;s mission was to construct an airplane that could reach M2-2.5 speeds. This was (and probably still is) a tremendously difficult undertaking, especially if the secondary goal was to build a light aircraft that was &amp;ldquo;cheap.&amp;rdquo;&#xA;The Air Force clients told the design team that they required the M2–2.5 speed so that the aircraft could escape combat if necessary. The primary issue was resolved, and a feasible solution was presented by the designers when the true necessity became evident. This was in the form of a mobile aircraft with strong traction that offered good acceleration and maneuverability rather than a high top speed.</description>
    </item>
    <item>
      <title>There are no solutions for all cases of life</title>
      <link>http://localhost:1313/posts/there-are-no-solutions-for-all-cases-of-life/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/there-are-no-solutions-for-all-cases-of-life/</guid>
      <description>Since there isn&amp;rsquo;t a single, all-encompassing solution for a broad variety of various challenges, the architect must constantly hone and enhance his &amp;ldquo;context noe poche.&amp;rdquo; In &amp;ldquo;Systems Architecting: Creating &amp;amp; Building Complex Systems&amp;rdquo; (Prentice Hall, 1991), Eberhardt Rechtin writes:&#xA;Most likely, he would say, &amp;ldquo;I&amp;rsquo;m just using common sense.&amp;rdquo; &amp;lt;&amp;hellip;&amp;gt; It might be preferable to use the phrase &amp;ldquo;context sensation&amp;quot;1—knowledge of what is relevant in a certain context—instead of the word &amp;ldquo;sensual.&amp;rdquo; Through education, experience, and case studies, the architect-practitioner can develop a strong contextual awareness by the time they are asked to tackle a system-level issue, which typically takes decades.&#xA;I believe that one of the main issues facing the software business is that projects are frequently assigned to individuals who lack sufficient contextual awareness.</description>
    </item>
  </channel>
</rss>
