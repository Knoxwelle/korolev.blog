<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Tiny Dev Blog</title>
    <link>http://localhost:1313/tags/data/</link>
    <description>Recent content in Data on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jun 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>There could be a number of answers</title>
      <link>http://localhost:1313/posts/there-could-be-a-number-of-answers/</link>
      <pubDate>Sun, 30 Jun 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/there-could-be-a-number-of-answers/</guid>
      <description>Every aspect of a business organization is too complex for a single data model, communication format, transport mechanism, and usually a single core architectural element, policy, principle, etc. to handle well. It seems that this truth always surprises and depresses the system developers. But given that the company is large enough to be concerned about the effects of numerous tables of accounts on the system over the next ten years, it makes sense that it must be too huge and diverse to manage a single table. The organization is represented by the thick red line in this example.&#xA;It&amp;rsquo;s also quite useful to us. Still, it involves the tense, intricate, informal, and disconcerting real world of business. Even worse, instead of dealing with real reality, you have to deal with people&amp;rsquo;s views of specific situations in specific parts of the world.</description>
    </item>
    <item>
      <title>Using a database as a fort</title>
      <link>http://localhost:1313/posts/using-a-database-as-a-fort/</link>
      <pubDate>Tue, 21 May 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/using-a-database-as-a-fort/</guid>
      <description>The database contains all of the information, both that entered by employees and that obtained from clients. Changes in user interfaces, business logic, applied logic, and even staff don&amp;rsquo;t affect the data. It is imperative that a reliable data model be created as early in the project as possible.&#xA;Prewriting complex, comprehensive technical requirements is a thing of the past! The new school demands that products be delivered frequently and early.Writing one line of vulnerable code is better than writing 10 in your head. When it comes to the facts, at least, it looks too good to be true.&#xA;Data structures and their relationships usually do not change quickly, although user interfaces and business logic do. Because of this, it&amp;rsquo;s imperative to define the data model precisely from the start, both analytically and structurally.</description>
    </item>
  </channel>
</rss>
