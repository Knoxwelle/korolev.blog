<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tiny Dev Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Tiny Dev Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minimize the amount of complexity that is already there and get rid of any extraneous details</title>
      <link>http://localhost:1313/posts/minimize-the-amount-of-complexity-that-is-already-there-and-get-rid-of-any-extraneous-details/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/minimize-the-amount-of-complexity-that-is-already-there-and-get-rid-of-any-extraneous-details/</guid>
      <description>Right now, somewhere is suffering the disaster of another project of a wage calculation system&amp;hellip; And probably not alone. Why did that happen? Because the developers chose Ruby instead of Java or Python instead of Smalltalk? Because you decided to use Postgres instead of Oracle? or because, although you ought to have selected Linux, you liked the Windows platform better? As you know, all project failures are usually blamed on technology. But was your task really so complex that the Java capabilities were not enough for it? Projects are usually created by people, and it is these people that determine the success or failure of the whole project. And once that&amp;rsquo;s the case, we need to think a little bit about how to help them succeed.</description>
    </item>
    <item>
      <title>Never prioritize your resume over the needs of the client</title>
      <link>http://localhost:1313/posts/never-prioritize-your-resume-over-the-needs-of-the-client/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/never-prioritize-your-resume-over-the-needs-of-the-client/</guid>
      <description>We, technicians, choose to use certain technologies, methodologies and approaches to solve problems not because they provide the optimal solution, but only because in the depths of our heart we want to mention them in our summary. Such a choice very rarely leads to a positive result. The most powerful catalyst for your career will be grateful customers who are in a long queue to recommend you to others – because you have worked so well for them. The kindness of the customers will serve you better than any new-fashioned object of the new language and any newly invented paradigm. While it is very important (and even vital) for an architect to be up to date with the latest trends and technologies, never try to expand your horizons at the expense of the client.</description>
    </item>
    <item>
      <title>Reduce the intrinsic complexity and eliminate the incidental complexity</title>
      <link>http://localhost:1313/posts/reduce-the-intrinsic-complexity-and-eliminate-the-incidental-complexity/</link>
      <pubDate>Wed, 10 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/posts/reduce-the-intrinsic-complexity-and-eliminate-the-incidental-complexity/</guid>
      <description>Essential complexity is a problem inherent in any task. For example, the task of coordinating air traffic at the national level is complex in itself. The control system must monitor in real time the precise location of each aircraft (including altitude), its speed, direction and destination, in order to prevent collisions in the air and on the runways. It is also necessary to manage flight schedules promptly to avoid congestion at airports in constantly changing conditions – when the weather changes sharply the entire schedule has to be revised.&#xA;On the other hand, accidental complexity is caused by challenges that we think need to be solved in order to reduce the inherent complexity. An example of a minor complexity is the outdated flight management system still in use.</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/about/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/about/about/</guid>
      <description>Hi, I am Stan,&#xA;I was born in Sochi, but since 2018 I have been living in Vancouver, British Columbia. Who am I?&#xA;Software Developer with expertise in all aspects of enterprise-grade commercial architecture standards. Software Automation expert responsible for delivering software quality via regression in CI/CD pipeline, directing teams for performance. AWS certified. Ph.D.&#xA;Once a month, I go somewhere. Not for work, but because I love traveling. I write rather superficially and briefly, depending on my mood. Even though I fly a lot on airplanes, I will not write here about how to choose a seat on a plane, accumulate miles, or transfer to business class. I’ll leave this antimony to other penmen. What I will definitely write about is a career in IT and the problems of relationships with technology, code, and working processes in development, meaningless notes about life, and thousands of ways to climb Mount Fuji.</description>
    </item>
    <item>
      <title>Resume</title>
      <link>http://localhost:1313/resume/resume/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 -0700</pubDate>
      <guid>http://localhost:1313/resume/resume/</guid>
      <description>Download in PDF&#xA;Stan Korolev (1261015 B.C. LTD.) – SOFTWARE DEVELOPER&#xA;1225 Richards Street, Vancouver, BC, V6B 1E6, Canada 1-778-231-1372 korolevst@gmail.com www.linkedin.com/in/korolevst/ www.salesforce.com/trailblazer/korolevst Software Developer with expertise in all aspects of enterprise-grade commercial architecture standards. Software Automation expert responsible for delivering software quality via regression in CI/CD pipeline, directing teams for performance. AWS certified. Ph.D.&#xA;SUMMARY OF QUALIFICATIONS&#xA;7+ years of expertise in Software Engineering, focusing on Salesforce and AWS. Extensive experience in Software Development Life Cycle (SDLC). Proficient in Object Oriented Programming languages (Java, C#, JavaScript, Ruby). Hands-on experience in Salesforce development and integration (Kafka). API integration and testing within microservices architecture (SOAP and REST). Performing functional test automation utilizing Selenium WebDriver. Professional solution for Cloud migration into Amazon Web Services (AWS) and Azure.</description>
    </item>
  </channel>
</rss>
