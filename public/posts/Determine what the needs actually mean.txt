+++
title = 'Determine what the needs actually mean'
date = 2023-12-16T00:00:00-07:00
draft = false
categories = ["hillaker"]
tags = ["harry hillaker", "falcon", "air force", "bear", "aircraft", "speed", "problem", "solution", "area", "cooperation", "technical", "meetings", "attention"]
cover_image='/images/cover/knoxwelle__2017-05-03T124735.000Z.jpg'
+++
Customers and end users often insist on what they see to be a practical resolution to a problem. Harry Hillaker, a leading F-16 Falcon designer, offers a perfect example of this. The goal set for his team was to build an aircraft capable of traveling at M2-2.5 speeds. This was (and presumably still is) a very challenging project, particularly if the secondary objective was to construct a light aircraft that was "cheap." 

The design team was informed by Air Force clients that the M2â€“2.5 speed was critical for the aircraft to be able to escape combat if needed. When the true necessity was realized, the designers addressed the main problem and offered a workable solution. Rather than having a fast peak speed, this was in the form of a movable aircraft with good traction that provided good acceleration and maneuverability.

It also applies to software development. The architect should be able to get to the bottom of the matter and, hopefully, offer a more reasonable and superior solution than the one the customer is requesting after realizing the true relevance of the requested feature or requirement. Requirements can be prioritized more easily when their key components are given more attention; the customer's most important requirements are given priority.

What kind of behavior is appropriate? One particularly pertinent principle from the agile development manifesto is "Cooperation is more important than contract." In practice, this means setting up seminars and meetings where architects evaluate the needs of the customer and help them provide a "Why?" answer. Recall that demand analysis typically includes information that is inferred and includes implicit assumptions; therefore, solving this problem can be quite difficult. Technical solution discussions should be avoided during these types of meetings as they divert attention from the client's problem and onto programming.