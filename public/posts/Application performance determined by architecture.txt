+++
title = 'Application performance determined by architecture'
date = 2024-02-05T00:00:00-07:00
draft = false
categories = []
tags = ["performance", "architecture", "application", "product", "infrastructure", "people"]
cover_image='/images/cover/knoxwelle__2017-05-31T170959.000Z.jpg'
+++
An application's performance is determined by its architecture. On the surface, this claim seems obvious, but actual experience suggests otherwise. For example, software architects frequently believe that switching to a different software infrastructure manufacturer can alleviate application performance difficulties. This idea may have originated from the hype around test findings; for example, assertions that the product of the top company outperforms that of its nearest competitor by 25% may have contributed to the development of this view. However, if the leading product completes the operation in 3 milliseconds and the competitor product completes it in 4 milliseconds, the reported 25% (one millisection) represents virtually little given the overall low performance, which is caused by architectural inefficiencies.

In addition to IT managers and performance testing teams, other groups of people advise you to carry out the subtle configuration of the application's infrastructure, like experimenting with memory allocation operations, connectivity pool sizes, flow pool sizes, and so forth. These people include the developers' support service and the authors of the books on app performance management. However, if the application is not designed with adequate efficiency to meet the expected demand or if its functional architecture misallocates computer resources, then no amount of tweaking will result in the necessary speed and scalability. The internal logic and/or deployment strategy will need to be totally redone.

Ultimately, the architecture of every manufacturer's product and application is based on distributed data processing and physical patterns. On low-power computers, applications and the products they employ run as processes and communicate with each other over a variety of protocols and non-zero-latency communication channels. People must therefore acknowledge and come to terms with the fact that an application's architecture is the main factor influencing its performance and scalability. Infrastructure tinkering or magic, that is, changing technology in a magical fashion, will not be able to improve these qualitative features.