(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    841414,      12520]
NotebookOptionsPosition[    825346,      12342]
NotebookOutlinePosition[    825747,      12358]
CellTagsIndexPosition[    825704,      12355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"fileList", "=", 
  RowBox[{"FileNames", "[", 
   RowBox[{"\"\<*.md\>\"", ",", 
    RowBox[{"File", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<content\\\\posts\>\""}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929217717115798*^9, 3.9292178076516476`*^9}, {
   3.9292179139982204`*^9, 3.9292180109485364`*^9}, {3.9292181116552367`*^9, 
   3.929218115985392*^9}, {3.929219192513233*^9, 3.9292192056175833`*^9}, 
   3.9292195131056185`*^9},
 CellLabel->
  "In[377]:=",ExpressionUUID->"4cdf9430-8758-4fb8-98ce-1e0ce6a72436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\\
tinydev\\\\content\\\\posts\\\\Application performance determined by \
architecture.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Architectural compromises.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Be guided by uncertainty.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Business runs everything.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Communication is the king, clarity and leadership are \
his true companions.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Creating architecture as the art of balance.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Database as Fort.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\DevOps, SRE.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Do it in a hurry and escape this crime.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Ensure continuous integration.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Failures are inevitable.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Find the true meaning of the needs.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Get up.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Interview tips.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\It is never too early to think about \
productivity.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Knowledge test.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Live Coding.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Never prioritize your resume over the needs of the \
client.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\One line of working code costs 500 lines of \
specification.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Perhaps your main problem is not technology.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Problems can be more than their reflection in the \
mirror.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Reduce the intrinsic complexity and eliminate the \
incidental complexity.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Screening.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Simplicity is better than versatility.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\System Design.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\The architect must be a practitioner.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\There are no solutions for all cases of life.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\There may be several solutions.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Try not to break the schedule.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\Use quantitative criteria.md\"\>", 
   ",", "\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\
\\\\content\\\\posts\\\\You negotiate more often than you think.md\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.929217973036312*^9, 3.929218015002745*^9}, {
   3.9292181019595547`*^9, 3.9292181227832947`*^9}, {3.9292192008080373`*^9, 
   3.929219208468548*^9}, {3.9292195060218716`*^9, 3.929219516010848*^9}, 
   3.929374761727815*^9, 3.9293770443430643`*^9, {3.929377129799858*^9, 
   3.92937718610667*^9}, 3.929379873045842*^9, 3.9293799125598564`*^9, 
   3.929379956910489*^9, 3.929380106410046*^9, 3.9293802464560995`*^9, 
   3.9293805648564034`*^9, 3.92938079299347*^9, 3.929381120453438*^9, 
   3.929381394092862*^9, 3.929904981092246*^9, 3.92990503872686*^9, 
   3.9300716411970215`*^9, 3.930153386240965*^9, 3.9301535256438875`*^9, {
   3.9304804707324867`*^9, 3.9304804956012917`*^9}, 3.930484085894026*^9, 
   3.930485348143634*^9, 3.93048560632467*^9, 3.930486004921291*^9, 
   3.930486206755206*^9, 3.9304864915187435`*^9, 3.930486669964489*^9, 
   3.9304873251005487`*^9, 3.930487929467533*^9, 3.9304882682124186`*^9, 
   3.9304883848168063`*^9, 3.9304886872936573`*^9, 3.930490370468549*^9, 
   3.9304904609847393`*^9, 3.9304907485994406`*^9, 3.930491017728156*^9, 
   3.9304912944935045`*^9, 3.9304955341185102`*^9, 3.930495962384928*^9, 
   3.9304963789591675`*^9, 3.930496639826478*^9, 3.9304969043936825`*^9, 
   3.9304974694812827`*^9, 3.9304982425350337`*^9, 3.930498999250693*^9, 
   3.9305118356722383`*^9, {3.932260130971604*^9, 3.932260151855281*^9}, 
   3.9322602645166745`*^9, 3.932317520221552*^9, 3.9323177833029404`*^9, 
   3.9323180383605585`*^9, 3.932318135005063*^9, 3.932318214944727*^9, 
   3.9323184265367327`*^9, 3.9323184910555983`*^9, {3.9323185503219137`*^9, 
   3.932318564104246*^9}, {3.9323185960917172`*^9, 3.9323186113561945`*^9}, {
   3.9323186918685703`*^9, 3.9323187059166603`*^9}, 3.932318798998652*^9, 
   3.9323194582347393`*^9, 3.93231956635118*^9, 3.932319813380253*^9, 
   3.9323199659792385`*^9, 3.932320087756711*^9, 3.932320882606124*^9, {
   3.932321112282586*^9, 3.932321132517761*^9}, {3.9323211628011436`*^9, 
   3.932321182536326*^9}, 3.932321296813586*^9, 3.9323213285155525`*^9, 
   3.9323214444553013`*^9, 3.932321993742594*^9, 3.9323221788827734`*^9, 
   3.932327176035804*^9, 3.9323278257526307`*^9, 3.9324299102160163`*^9, 
   3.932431367292763*^9, 3.932431462512587*^9, 3.932432225101235*^9, 
   3.932432327222477*^9, 3.9324435763002567`*^9, 3.932488008089356*^9},
 CellLabel->
  "Out[377]=",ExpressionUUID->"e1779637-4a99-475d-b179-2483e86cab8c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"dateList", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"first", "=", "Today"}], "}"}], ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"DatePlus", "[", 
        RowBox[{"first", ",", 
         RowBox[{"-", " ", 
          RowBox[{"Quantity", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "fileList", "]"}], "*", "3"}], ",", 
            "\"\<Days\>\""}], "]"}]}]}], "]"}], ",", "first"}], "]"}]}], 
    "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.9292160594991455`*^9, {3.929216262371937*^9, 3.9292163813178587`*^9}, {
   3.9292164843796673`*^9, 3.929216490015292*^9}, {3.9292180182998824`*^9, 
   3.9292180457223005`*^9}, {3.929380778986627*^9, 3.929380785027054*^9}, {
   3.9293813852104425`*^9, 3.9293814305791717`*^9}, {3.9293815766013494`*^9, 
   3.9293815846823196`*^9}, {3.9293817296478004`*^9, 3.929381755585693*^9}, {
   3.9299049748571444`*^9, 3.929904975436484*^9}, 3.929905034066107*^9, 
   3.930480683931385*^9, 3.93048080971883*^9},
 CellLabel->
  "In[378]:=",ExpressionUUID->"306eb6e4-3f50-4117-8a22-98b0c8e8e9da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "[", "fileList", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"file", "=", 
       RowBox[{"fileList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"i", ",", "\"\<. \>\"", ",", "file"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"txtFile", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DirectoryName", "[", "file", "]"}], ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{
            RowBox[{"FileBaseName", "[", "file", "]"}], ",", "\"\<.txt\>\""}],
            "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"RenameFile", "[", 
       RowBox[{"file", ",", "txtFile"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"content", "=", 
       RowBox[{"Import", "[", "txtFile", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"header", "=", 
       RowBox[{"First", "[", 
        RowBox[{"StringCases", "[", 
         RowBox[{"content", ",", 
          RowBox[{"\"\<+++\>\"", "~~", "x___", "~~", "\"\<+++\>\""}]}], " ", 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"text", "=", 
       RowBox[{"StringTrim", "[", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"content", ",", " ", 
          RowBox[{"header", "->", "\"\<\>\""}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newText", "=", "text"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"textParts", "=", 
         RowBox[{"TextCases", "[", 
          RowBox[{"newText", ",", "\"\<Paragraph\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Length", "[", "textParts", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "textParts", "]"}], ">", "0"}], ","}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"session", "=", 
       RowBox[{"StartWebSession", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pause", "[", "2", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"WebExecute", "[", 
       RowBox[{"session", ",", 
        RowBox[{
        "\"\<OpenPage\>\"", "->", 
         "\"\<https://quillbot.com/grammar-check\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Pause", "[", "2", "]"}], ";"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"acceptButton", "=", 
       RowBox[{"WebExecute", "[", 
        RowBox[{"session", ",", 
         RowBox[{"\"\<LocateElements\>\"", "\[Rule]", 
          RowBox[{
          "\"\<id\>\"", "\[Rule]", 
           "\"\<onetrust-accept-btn-handler\>\""}]}]}], "]"}]}], "*)"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"acceptButton", "=", 
      RowBox[{"WebExecute", "[", 
       RowBox[{"session", ",", 
        RowBox[{"\"\<LocateElements\>\"", "\[Rule]", 
         RowBox[{
         "\"\<XPath\>\"", "\[Rule]", 
          "\"\<//button[@id='onetrust-accept-btn-handler']\>\""}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"WebExecute", "[", 
      RowBox[{"\"\<ClickElement\>\"", "\[Rule]", "acceptButton"}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "2", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"]", ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<=", 
         RowBox[{"Length", "[", "textParts", "]"}]}], ",", 
        RowBox[{"j", "++"}], ","}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"oldString", "=", 
        RowBox[{"textParts", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"oldString", "=", "newText"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<oldString: \>\"", ",", "oldString"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SameAs", "[", 
         RowBox[{"LanguageIdentify", "[", "oldString", "]"}], "]"}], "[", 
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<Language\>\"", ",", " ", "\"\<English\>\""}], "]"}], 
        "]"}], " ", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"WebExecute", "[", 
          RowBox[{"session", ",", "\"\<RefreshPage\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Pause", "[", "5", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"textbox", "=", 
          RowBox[{"WebExecute", "[", 
           RowBox[{"session", ",", 
            RowBox[{"\"\<LocateElements\>\"", "\[Rule]", 
             RowBox[{
             "\"\<XPath\>\"", "\[Rule]", 
              "\"\<//div[@id='grammarbot']\>\""}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"WebExecute", "[", 
          RowBox[{"\"\<TypeElement\>\"", "->", 
           RowBox[{"{", 
            RowBox[{"textbox", ",", " ", "oldString"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Pause", "[", "2", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"translateButtons", "=", 
          RowBox[{"WebExecute", "[", 
           RowBox[{"session", ",", 
            RowBox[{"\"\<LocateElements\>\"", "\[Rule]", 
             RowBox[{
             "\"\<XPath\>\"", "\[Rule]", 
              "\"\<//button[@id='grammar_checker_tool/fix_all_error_button']\>\
\""}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<translBut:\>\"", ",", " ", "translateButtons"}], "]"}],
          "*)"}], ";", "\[IndentingNewLine]", 
        RowBox[{"WebExecute", "[", 
         RowBox[{"\"\<ClickElement\>\"", "\[Rule]", 
          RowBox[{"translateButtons", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"WebExecute", "[", 
           RowBox[{"\"\<ClickElement\>\"", "\[Rule]", 
            RowBox[{"translateButtons", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Pause", "[", "30", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"outputBox", "=", 
         RowBox[{"WebExecute", "[", 
          RowBox[{"session", ",", 
           RowBox[{"\"\<LocateElements\>\"", "\[Rule]", 
            RowBox[{
            "\"\<XPath\>\"", "\[Rule]", 
             "\"\<//div[@id='grammarbot']\>\""}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outputText", "=", 
         RowBox[{"WebExecute", "[", 
          RowBox[{"\"\<ElementText\>\"", "->", "outputBox"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "outputText", "]"}], ">", "0"}], ",", 
           RowBox[{
            RowBox[{"outputText", "=", 
             RowBox[{"First", "[", "outputText", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"newString", "=", " ", "outputText"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"newText", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{"newText", ",", 
               RowBox[{"oldString", "->", "newString"}]}], "]"}]}], ";"}], 
           ",", "\[IndentingNewLine]", " ", 
           RowBox[{
            RowBox[{"Continue", "[", "]"}], ";"}]}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Translated: \>\"", ",", "outputText"}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"]", ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DeleteObject", "[", "session", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<newText: \>\"", ",", "newText"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newContent", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"header", ",", "\"\<\\n\>\"", ",", " ", "newText"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<newContent: \>\"", ",", "newContent"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"txtFile", ",", "newContent"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RenameFile", "[", 
      RowBox[{"txtFile", ",", "file"}], "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.929374848236891*^9, 3.9293748511036243`*^9}, {
   3.929374935234683*^9, 3.9293751531424026`*^9}, {3.9293766798063145`*^9, 
   3.929376683419645*^9}, {3.9293767565437894`*^9, 3.9293767617159977`*^9}, {
   3.9293768165861263`*^9, 3.9293768574885263`*^9}, {3.9293769048775253`*^9, 
   3.929376923032815*^9}, {3.929376963031721*^9, 3.929377017538329*^9}, 
   3.9293770728294005`*^9, {3.9293771184850016`*^9, 3.9293771821272807`*^9}, 
   3.9293797678018446`*^9, {3.9293798031371336`*^9, 3.9293798610794344`*^9}, {
   3.929379951227022*^9, 3.9293799526511736`*^9}, {3.9293806886666846`*^9, 
   3.9293806900231953`*^9}, {3.930153099569622*^9, 3.930153244290264*^9}, {
   3.9301533784104185`*^9, 3.9301533788871517`*^9}, {3.9301535173627806`*^9, 
   3.9301535181359687`*^9}, {3.930480378601529*^9, 3.930480452396018*^9}, {
   3.930480826221388*^9, 3.93048090418117*^9}, {3.930480992346277*^9, 
   3.930481020700739*^9}, {3.9304810609516325`*^9, 3.9304810649327507`*^9}, {
   3.9304811027036743`*^9, 3.930481125756013*^9}, {3.9304850024795713`*^9, 
   3.9304850709059925`*^9}, {3.930485104190993*^9, 3.93048518970777*^9}, {
   3.930485221108118*^9, 3.9304853292711287`*^9}, {3.930485860359277*^9, 
   3.930485885635726*^9}, {3.930485970805511*^9, 3.9304859790292554`*^9}, {
   3.9304860736945963`*^9, 3.9304860760173674`*^9}, {3.930486177140055*^9, 
   3.9304861991546183`*^9}, {3.930486355242633*^9, 3.9304863554296274`*^9}, 
   3.9304864839453135`*^9, {3.9304866404646845`*^9, 3.9304866445841985`*^9}, {
   3.930487804054434*^9, 3.9304878148019924`*^9}, {3.9304878695858464`*^9, 
   3.930487881236991*^9}, {3.9304880806792684`*^9, 3.9304880899069266`*^9}, {
   3.930488245342493*^9, 3.9304882619225726`*^9}, {3.9304886227116013`*^9, 
   3.930488639207857*^9}, {3.9304902241069584`*^9, 3.9304902613033624`*^9}, {
   3.9304903078940606`*^9, 3.930490328522088*^9}, 3.9304905072429957`*^9, {
   3.9304906855340986`*^9, 3.9304907261886063`*^9}, {3.930490930496278*^9, 
   3.9304909400269036`*^9}, {3.9304916891145935`*^9, 
   3.9304916944981265`*^9}, {3.9304917437016563`*^9, 
   3.9304917666087165`*^9}, {3.9304918089765515`*^9, 
   3.9304918788140244`*^9}, {3.930491924595212*^9, 3.930491945687381*^9}, {
   3.930491988119519*^9, 3.9304920084680395`*^9}, {3.9304920715618773`*^9, 
   3.9304920774054384`*^9}, {3.9304959104317317`*^9, 3.930495957950266*^9}, {
   3.9304962708862295`*^9, 3.930496306222895*^9}, {3.9304963438514338`*^9, 
   3.930496353405984*^9}, {3.9304966338475266`*^9, 3.9304966350732913`*^9}, 
   3.9304981759074817`*^9, {3.930498969628899*^9, 3.9304989922813253`*^9}, 
   3.93224184149576*^9, {3.9322418827363825`*^9, 3.932241901793186*^9}, {
   3.9322419561145997`*^9, 3.932241960459314*^9}, {3.932242014429886*^9, 
   3.9322420363216124`*^9}, {3.932242073616028*^9, 3.932242139655431*^9}, {
   3.932242182850689*^9, 3.9322421928833427`*^9}, {3.932260076061784*^9, 
   3.9322601120418577`*^9}, {3.932260248300127*^9, 3.932260257002099*^9}, {
   3.93231223817431*^9, 3.9323122484561005`*^9}, {3.932312373599408*^9, 
   3.9323123761278477`*^9}, {3.932316368564017*^9, 3.932316532540805*^9}, {
   3.932316677002906*^9, 3.9323167773369493`*^9}, {3.932316886303379*^9, 
   3.9323170131691165`*^9}, {3.9323170495437326`*^9, 
   3.9323172877488194`*^9}, {3.9323173232591743`*^9, 
   3.9323173475431547`*^9}, {3.93231768073619*^9, 3.932317688378603*^9}, {
   3.932317879229087*^9, 3.93231788754504*^9}, {3.9323179187311163`*^9, 
   3.932317936775447*^9}, 3.932318116789886*^9, {3.9323181989388065`*^9, 
   3.932318199601267*^9}, {3.9323183825081415`*^9, 3.9323183832610292`*^9}, 
   3.9323184650787387`*^9, {3.932318540576116*^9, 3.932318547064329*^9}, {
   3.932318580176986*^9, 3.932318583306225*^9}, 3.9323186496330223`*^9, 
   3.932318685397257*^9, 3.93231878021986*^9, {3.932318827721863*^9, 
   3.932318830730202*^9}, 3.932318912056733*^9, {3.9323191206106157`*^9, 
   3.932319135576525*^9}, {3.932319338652914*^9, 3.9323193387288685`*^9}, {
   3.932319405729694*^9, 3.932319445718173*^9}, {3.9323195418179526`*^9, 
   3.932319547720083*^9}, 3.9323196507823215`*^9, 3.9323197117335186`*^9, {
   3.9323197929007597`*^9, 3.932319807940666*^9}, {3.9323199251779547`*^9, 
   3.9323199315126514`*^9}, {3.9323200628956995`*^9, 3.9323200655690866`*^9}, 
   3.932320153215563*^9, {3.9323206886332517`*^9, 3.932320707708331*^9}, {
   3.9323208371039414`*^9, 3.932320862055195*^9}, {3.9323209578178616`*^9, 
   3.932320971512195*^9}, {3.9323210646178827`*^9, 3.9323211286181927`*^9}, 
   3.9323212344213285`*^9, {3.9323213925942373`*^9, 3.932321439498727*^9}, 
   3.932321823374752*^9, {3.9323219857889795`*^9, 3.9323219886629343`*^9}, {
   3.9323271593640957`*^9, 3.9323271681809177`*^9}, {3.932427915717292*^9, 
   3.9324279213688855`*^9}, 3.9324279570592003`*^9, {3.9324280866738443`*^9, 
   3.9324281033808517`*^9}, {3.932429814200081*^9, 3.9324298212371674`*^9}, 
   3.9324298908808784`*^9, {3.9324312767006645`*^9, 3.932431359765235*^9}, {
   3.932431598904495*^9, 3.9324316029656997`*^9}, 3.932431868734643*^9, {
   3.932432286064421*^9, 3.932432300279674*^9}, {3.9324446888366337`*^9, 
   3.932444690643731*^9}, 3.9324883602998786`*^9, 
   3.932488420393425*^9},ExpressionUUID->"c8075ac6-894d-436e-b634-\
55ef40986281"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "1", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Application performance determined by \
architecture.md\"\>"}],
  SequenceForm[
  1, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Application performance determined by architecture.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488008301015*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"8e9164e4-e729-4bbe-91ce-8df75d7e3cac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"The performance of an application is determined \
by its architecture. At first glance, this assertion seems obvious, but \
real-life experience shows the opposite. For example, software architects \
often believe that application performance problems can be solved by simply \
switching to the software infrastructure from another manufacturer. The \
source of this belief may be a river of noise around the test results; for \
example, it is stated that the product of the leading company is 25% superior \
in performance to the nearest competitor. However, if the leader product \
performs the operation in 3 milliseconds and the competitor product in 4 \
milliseconds, the stated 25% (one millisection) means very little against the \
background of the overall low performance, which is rooted in architecture \
inefficiency.\\n\\nIn addition to IT managers and performance testing teams, \
there are other groups of people, such as the developer's support service and \
the authors of the app performance management books, who recommend that you \
do the subtle configuration of the application's infrastructure: play with \
memory allocation operations, connectivity pool sizes, flow pool size, and so \
on. But if the application is not designed efficiently enough for the \
expected load or its functional architecture uses computing resources \
inappropriately, then no subtle adjustment will deliver the desired speed and \
scalability. A complete redesign of the internal logic and/or deployment \
strategy will be required.\\n\\nUltimately, behind the facade of any \
manufacturer\[CloseCurlyQuote]s product and the architecture of any \
application, there are the same fundamental principles of distributed data \
processing and physical patterns: applications and the products they use are \
performed as processes on limited-power computers, interacting with each \
other through stacks of protocols and communication channels with non-zero \
delays. So people should understand and accept that the application \
architecture is the main factor determining its performance and scalability. \
These quality features cannot be improved either by magic\[LongDash]by \
miraculously changing technologies\[LongDash]or by fine-tuning the \
infrastructure. Any improvement in these areas requires hard work and careful \
architecture.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "The performance of an application is determined by its architecture. At \
first glance, this assertion seems obvious, but real-life experience shows \
the opposite. For example, software architects often believe that application \
performance problems can be solved by simply switching to the software \
infrastructure from another manufacturer. The source of this belief may be a \
river of noise around the test results; for example, it is stated that the \
product of the leading company is 25% superior in performance to the nearest \
competitor. However, if the leader product performs the operation in 3 \
milliseconds and the competitor product in 4 milliseconds, the stated 25% \
(one millisection) means very little against the background of the overall \
low performance, which is rooted in architecture inefficiency.\n\nIn addition \
to IT managers and performance testing teams, there are other groups of \
people, such as the developer's support service and the authors of the app \
performance management books, who recommend that you do the subtle \
configuration of the application's infrastructure: play with memory \
allocation operations, connectivity pool sizes, flow pool size, and so on. \
But if the application is not designed efficiently enough for the expected \
load or its functional architecture uses computing resources inappropriately, \
then no subtle adjustment will deliver the desired speed and scalability. A \
complete redesign of the internal logic and/or deployment strategy will be \
required.\n\nUltimately, behind the facade of any manufacturer\
\[CloseCurlyQuote]s product and the architecture of any application, there \
are the same fundamental principles of distributed data processing and \
physical patterns: applications and the products they use are performed as \
processes on limited-power computers, interacting with each other through \
stacks of protocols and communication channels with non-zero delays. So \
people should understand and accept that the application architecture is the \
main factor determining its performance and scalability. These quality \
features cannot be improved either by magic\[LongDash]by miraculously \
changing technologies\[LongDash]or by fine-tuning the infrastructure. Any \
improvement in these areas requires hard work and careful architecture."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880175634174`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"265cc501-0496-4ffa-bf88-f7b4f902f4f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The performance of an application is determined \
by its architecture. At first glance, this assertion seems obvious, but \
real-life experience shows the opposite. For example, software architects \
often believe that application performance problems can be solved by simply \
switching to the software infrastructure from another manufacturer. The \
source of this belief may be a river of noise around the test results; for \
example, it is stated that the product of the leading company is 25% superior \
in performance to the nearest competitor. However, if the leader product \
performs the operation in 3 milliseconds and the competitor product in 4 \
milliseconds, the stated 25% (one millisection) means very little against the \
background of the overall low performance, which is rooted in architecture \
inefficiency.\\n\\nIn addition to IT managers and performance testing teams, \
there are other groups of people, such as the developer's support service and \
the authors of the app performance management books, who recommend that you \
do the subtle configuration of the application's infrastructure: play with \
memory allocation operations, connectivity pool sizes, flow pool size, and so \
on. But if the application is not designed efficiently enough for the \
expected load or its functional architecture uses computing resources \
inappropriately, then no subtle adjustment will deliver the desired speed and \
scalability. A complete redesign of the internal logic and/or deployment \
strategy will be required.\\n\\nUltimately, behind the facade of any \
manufacturer\[CloseCurlyQuote]s product and the architecture of any \
application, there are the same fundamental principles of distributed data \
processing and physical patterns: applications and the products they use are \
performed as processes on limited-power computers, interacting with each \
other through stacks of protocols and communication channels with non-zero \
delays. So people should understand and accept that the application \
architecture is the main factor determining its performance and scalability. \
These quality features cannot be improved either by magic\[LongDash]by \
miraculously changing technologies\[LongDash]or by fine-tuning the \
infrastructure. Any improvement in these areas requires hard work and careful \
architecture.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The performance of an application is determined by its architecture. At \
first glance, this assertion seems obvious, but real-life experience shows \
the opposite. For example, software architects often believe that application \
performance problems can be solved by simply switching to the software \
infrastructure from another manufacturer. The source of this belief may be a \
river of noise around the test results; for example, it is stated that the \
product of the leading company is 25% superior in performance to the nearest \
competitor. However, if the leader product performs the operation in 3 \
milliseconds and the competitor product in 4 milliseconds, the stated 25% \
(one millisection) means very little against the background of the overall \
low performance, which is rooted in architecture inefficiency.\n\nIn addition \
to IT managers and performance testing teams, there are other groups of \
people, such as the developer's support service and the authors of the app \
performance management books, who recommend that you do the subtle \
configuration of the application's infrastructure: play with memory \
allocation operations, connectivity pool sizes, flow pool size, and so on. \
But if the application is not designed efficiently enough for the expected \
load or its functional architecture uses computing resources inappropriately, \
then no subtle adjustment will deliver the desired speed and scalability. A \
complete redesign of the internal logic and/or deployment strategy will be \
required.\n\nUltimately, behind the facade of any manufacturer\
\[CloseCurlyQuote]s product and the architecture of any application, there \
are the same fundamental principles of distributed data processing and \
physical patterns: applications and the products they use are performed as \
processes on limited-power computers, interacting with each other through \
stacks of protocols and communication channels with non-zero delays. So \
people should understand and accept that the application architecture is the \
main factor determining its performance and scalability. These quality \
features cannot be improved either by magic\[LongDash]by miraculously \
changing technologies\[LongDash]or by fine-tuning the infrastructure. Any \
improvement in these areas requires hard work and careful architecture."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880883807125`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"a3eb1165-8815-4f0b-aca4-ee1342197f36"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The performance of an application is determined \
by its architecture. At first glance, this assertion seems obvious, but \
real-life experience shows the opposite. For example, software architects \
often believe that application performance problems can be solved by simply \
switching to the software infrastructure from another manufacturer. The \
source of this belief may be a river of noise around the test results; for \
example, it is stated that the product of the leading company is 25% superior \
in performance to the nearest competitor. However, if the leader product \
performs the operation in 3 milliseconds and the competitor product in 4 \
milliseconds, the stated 25% (one millisection) means very little against the \
background of the overall low performance, which is rooted in architecture \
inefficiency.\\n\\nIn addition to IT managers and performance testing teams, \
there are other groups of people, such as the developer's support service and \
the authors of the app performance management books, who recommend that you \
do the subtle configuration of the application's infrastructure: play with \
memory allocation operations, connectivity pool sizes, flow pool size, and so \
on. But if the application is not designed efficiently enough for the \
expected load or its functional architecture uses computing resources \
inappropriately, then no subtle adjustment will deliver the desired speed and \
scalability. A complete redesign of the internal logic and/or deployment \
strategy will be required.\\n\\nUltimately, behind the facade of any \
manufacturer\[CloseCurlyQuote]s product and the architecture of any \
application, there are the same fundamental principles of distributed data \
processing and physical patterns: applications and the products they use are \
performed as processes on limited-power computers, interacting with each \
other through stacks of protocols and communication channels with non-zero \
delays. So people should understand and accept that the application \
architecture is the main factor determining its performance and scalability. \
These quality features cannot be improved either by magic\[LongDash]by \
miraculously changing technologies\[LongDash]or by fine-tuning the \
infrastructure. Any improvement in these areas requires hard work and careful \
architecture.\"\>"}],
  SequenceForm[
  "newText: ", 
   "The performance of an application is determined by its architecture. At \
first glance, this assertion seems obvious, but real-life experience shows \
the opposite. For example, software architects often believe that application \
performance problems can be solved by simply switching to the software \
infrastructure from another manufacturer. The source of this belief may be a \
river of noise around the test results; for example, it is stated that the \
product of the leading company is 25% superior in performance to the nearest \
competitor. However, if the leader product performs the operation in 3 \
milliseconds and the competitor product in 4 milliseconds, the stated 25% \
(one millisection) means very little against the background of the overall \
low performance, which is rooted in architecture inefficiency.\n\nIn addition \
to IT managers and performance testing teams, there are other groups of \
people, such as the developer's support service and the authors of the app \
performance management books, who recommend that you do the subtle \
configuration of the application's infrastructure: play with memory \
allocation operations, connectivity pool sizes, flow pool size, and so on. \
But if the application is not designed efficiently enough for the expected \
load or its functional architecture uses computing resources inappropriately, \
then no subtle adjustment will deliver the desired speed and scalability. A \
complete redesign of the internal logic and/or deployment strategy will be \
required.\n\nUltimately, behind the facade of any manufacturer\
\[CloseCurlyQuote]s product and the architecture of any application, there \
are the same fundamental principles of distributed data processing and \
physical patterns: applications and the products they use are performed as \
processes on limited-power computers, interacting with each other through \
stacks of protocols and communication channels with non-zero delays. So \
people should understand and accept that the application architecture is the \
main factor determining its performance and scalability. These quality \
features cannot be improved either by magic\[LongDash]by miraculously \
changing technologies\[LongDash]or by fine-tuning the infrastructure. Any \
improvement in these areas requires hard work and careful architecture."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880886144967`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ebe93381-acaf-404e-a3cd-ead4181be437"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Application performance \
determined by architecture'\\ndate = 2024-08-10T00:00:00-07:00\\ndraft = \
false\\ncategories = []\\ntags = [\\\"performance\\\", \\\"architecture\\\", \
\\\"application\\\", \\\"product\\\", \
\\\"infrastructure\\\"]\\ncover_image='/images/cover/knoxwelle__2017-05-\
21T220002.000Z.jpg'\\n+++\\nThe performance of an application is determined \
by its architecture. At first glance, this assertion seems obvious, but \
real-life experience shows the opposite. For example, software architects \
often believe that application performance problems can be solved by simply \
switching to the software infrastructure from another manufacturer. The \
source of this belief may be a river of noise around the test results; for \
example, it is stated that the product of the leading company is 25% superior \
in performance to the nearest competitor. However, if the leader product \
performs the operation in 3 milliseconds and the competitor product in 4 \
milliseconds, the stated 25% (one millisection) means very little against the \
background of the overall low performance, which is rooted in architecture \
inefficiency.\\n\\nIn addition to IT managers and performance testing teams, \
there are other groups of people, such as the developer's support service and \
the authors of the app performance management books, who recommend that you \
do the subtle configuration of the application's infrastructure: play with \
memory allocation operations, connectivity pool sizes, flow pool size, and so \
on. But if the application is not designed efficiently enough for the \
expected load or its functional architecture uses computing resources \
inappropriately, then no subtle adjustment will deliver the desired speed and \
scalability. A complete redesign of the internal logic and/or deployment \
strategy will be required.\\n\\nUltimately, behind the facade of any \
manufacturer\[CloseCurlyQuote]s product and the architecture of any \
application, there are the same fundamental principles of distributed data \
processing and physical patterns: applications and the products they use are \
performed as processes on limited-power computers, interacting with each \
other through stacks of protocols and communication channels with non-zero \
delays. So people should understand and accept that the application \
architecture is the main factor determining its performance and scalability. \
These quality features cannot be improved either by magic\[LongDash]by \
miraculously changing technologies\[LongDash]or by fine-tuning the \
infrastructure. Any improvement in these areas requires hard work and careful \
architecture.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Application performance determined by architecture'\ndate = \
2024-08-10T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"performance\", \"architecture\", \"application\", \"product\", \
\"infrastructure\"]\n\
cover_image='/images/cover/knoxwelle__2017-05-21T220002.000Z.jpg'\n+++\nThe \
performance of an application is determined by its architecture. At first \
glance, this assertion seems obvious, but real-life experience shows the \
opposite. For example, software architects often believe that application \
performance problems can be solved by simply switching to the software \
infrastructure from another manufacturer. The source of this belief may be a \
river of noise around the test results; for example, it is stated that the \
product of the leading company is 25% superior in performance to the nearest \
competitor. However, if the leader product performs the operation in 3 \
milliseconds and the competitor product in 4 milliseconds, the stated 25% \
(one millisection) means very little against the background of the overall \
low performance, which is rooted in architecture inefficiency.\n\nIn addition \
to IT managers and performance testing teams, there are other groups of \
people, such as the developer's support service and the authors of the app \
performance management books, who recommend that you do the subtle \
configuration of the application's infrastructure: play with memory \
allocation operations, connectivity pool sizes, flow pool size, and so on. \
But if the application is not designed efficiently enough for the expected \
load or its functional architecture uses computing resources inappropriately, \
then no subtle adjustment will deliver the desired speed and scalability. A \
complete redesign of the internal logic and/or deployment strategy will be \
required.\n\nUltimately, behind the facade of any manufacturer\
\[CloseCurlyQuote]s product and the architecture of any application, there \
are the same fundamental principles of distributed data processing and \
physical patterns: applications and the products they use are performed as \
processes on limited-power computers, interacting with each other through \
stacks of protocols and communication channels with non-zero delays. So \
people should understand and accept that the application architecture is the \
main factor determining its performance and scalability. These quality \
features cannot be improved either by magic\[LongDash]by miraculously \
changing technologies\[LongDash]or by fine-tuning the infrastructure. Any \
improvement in these areas requires hard work and careful architecture."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880886404977`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c39809c6-ff9c-4d6f-93d4-25c951a23232"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "2", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Architectural compromises.md\"\>"}],
  SequenceForm[
  2, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Architectural compromises.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880886604986`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5f81c5dd-27ea-45f6-a7a5-5969f1dfc9d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Every software architect should know and \
understand that you can't get everything at once. In practice, it is \
impossible to design an architecture that has high performance, high \
availability, high security and high abstraction at the same time.There is \
one real story that software architects need to know, understand and tell \
their clients and colleagues.I mean the history of the Vaza.\\n\\nIn 1620, \
there was a war between Sweden and Poland. Wishing to put an end to this \
expensive war more quickly, the King of Sweden ordered the construction of a \
gallion called the Vase.It was an unusual ship.The requirements for it were \
not the same as for any other ship of the time.It was to be more than 60 \
metres long, carry 64 guns on two battery deck, and also carry 300 soldiers \
at a time for safe delivery to Poland by sea. Time was running out, there was \
a lack of money (sounds familiar, right?).The shipbuilder has never designed \
such ships before.He specialized in smaller, single-deck vessels. \
Nevertheless, he undertook the design and construction of the Vaza, relying \
on his previous experience.As a result, a ship that meets these \
specifications was built. It's the day of the water descent.The ship proudly \
sailed into the harbor, saluting out all the guns...And then he \
sank.\\n\\nThe Vaza problem was obvious; anyone who had seen the deck of a \
large 17th-century battleship knew that the decks of such ships were \
overcrowded and unsafe, especially during battle. It was a costly mistake to \
build ships that would serve both combat and transport.The shipbuilder, \
seeking to fulfil all the wishes of the king, created an unstable and poorly \
balanced ship.\\n\\nA software architect can draw a lot from this story and \
take this sad experience into account when designing a software product \
architecture.Trying to fulfil all the requirements at once (as in the case of \
the Vaza) creates an unstable architecture that does not solve exactly any of \
the tasks set.A good example of this is the requirement to force \
service-oriented architecture (SOA) to function as a point-to-point solution \
at the same time. Usually this forces to bypass the various levels of \
abstraction created by the SOA approach, and the result is an architecture \
resembling a spaghetti dish from an Italian restaurant.The architect has \
several tools at his disposal to identify the compromises to be taken when \
designing architectures. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Metod).Further information on ATAM and CBAM can be found on the SEI (Software \
Engineering Institute) website.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Every software architect should know and understand that you can't get \
everything at once. In practice, it is impossible to design an architecture \
that has high performance, high availability, high security and high \
abstraction at the same time.There is one real story that software architects \
need to know, understand and tell their clients and colleagues.I mean the \
history of the Vaza.\n\nIn 1620, there was a war between Sweden and Poland. \
Wishing to put an end to this expensive war more quickly, the King of Sweden \
ordered the construction of a gallion called the Vase.It was an unusual \
ship.The requirements for it were not the same as for any other ship of the \
time.It was to be more than 60 metres long, carry 64 guns on two battery \
deck, and also carry 300 soldiers at a time for safe delivery to Poland by \
sea. Time was running out, there was a lack of money (sounds familiar, \
right?).The shipbuilder has never designed such ships before.He specialized \
in smaller, single-deck vessels. Nevertheless, he undertook the design and \
construction of the Vaza, relying on his previous experience.As a result, a \
ship that meets these specifications was built. It's the day of the water \
descent.The ship proudly sailed into the harbor, saluting out all the \
guns...And then he sank.\n\nThe Vaza problem was obvious; anyone who had seen \
the deck of a large 17th-century battleship knew that the decks of such ships \
were overcrowded and unsafe, especially during battle. It was a costly \
mistake to build ships that would serve both combat and transport.The \
shipbuilder, seeking to fulfil all the wishes of the king, created an \
unstable and poorly balanced ship.\n\nA software architect can draw a lot \
from this story and take this sad experience into account when designing a \
software product architecture.Trying to fulfil all the requirements at once \
(as in the case of the Vaza) creates an unstable architecture that does not \
solve exactly any of the tasks set.A good example of this is the requirement \
to force service-oriented architecture (SOA) to function as a point-to-point \
solution at the same time. Usually this forces to bypass the various levels \
of abstraction created by the SOA approach, and the result is an architecture \
resembling a spaghetti dish from an Italian restaurant.The architect has \
several tools at his disposal to identify the compromises to be taken when \
designing architectures. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Metod).Further information on ATAM and CBAM can be found on the SEI (Software \
Engineering Institute) website."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324880980549707`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"910aaf6c-faed-4874-a9fc-baca418ec44d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Every software architect should know and \
understand that you can't get everything at once. In practice, it is \
impossible to design an architecture that has high performance, high \
availability, high security, and high abstraction at the same time. There is \
one real story that software architects need to know, understand, and tell \
their clients and colleagues. I mean the history of the Vaza.\\n\\nIn 1620, \
there was a war between Sweden and Poland. Wishing to put an end to this \
expensive war more quickly, the King of Sweden ordered the construction of a \
gallion called the Vase. It was an unusual ship. The requirements for it were \
not the same as for any other ship of the time.It was to be more than 60 \
meters long, carry 64 guns on two battery decks, and also carry 300 soldiers \
at a time for safe delivery to Poland by sea. Time was running out, and there \
was a lack of money (sounds familiar, right?). The shipbuilder has never \
designed such ships before. He specialized in smaller, single-deck vessels. \
Nevertheless, he undertook the design and construction of the Vaza, relying \
on his previous experience. As a result, a ship that meets these \
specifications was built. It's the day of the water descent.The ship proudly \
sailed into the harbor, saluting out all the guns. And then he sank.\\n\\nThe \
Vaza problem was obvious; anyone who had seen the deck of a large \
17th-century battleship knew that the decks of such ships were overcrowded \
and unsafe, especially during battle. It was a costly mistake to build ships \
that would serve both combat and transport. The shipbuilder, seeking to \
fulfill all the wishes of the king, created an unstable and poorly balanced \
ship.\\n\\nA software architect can draw a lot from this story and take this \
sad experience into account when designing a software product \
architecture.Trying to fulfill all the requirements at once (as in the case \
of the Vaza) creates an unstable architecture that does not solve exactly any \
of the tasks set. A good example of this is the requirement to force \
service-oriented architecture (SOA) to function as a point-to-point solution \
at the same time. Usually, this forces us to bypass the various levels of \
abstraction created by the SOA approach, and the result is an architecture \
resembling a spaghetti dish from an Italian restaurant. The architect has \
several tools at his disposal to identify the compromises to be made when \
designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Every software architect should know and understand that you can't get \
everything at once. In practice, it is impossible to design an architecture \
that has high performance, high availability, high security, and high \
abstraction at the same time. There is one real story that software \
architects need to know, understand, and tell their clients and colleagues. I \
mean the history of the Vaza.\n\nIn 1620, there was a war between Sweden and \
Poland. Wishing to put an end to this expensive war more quickly, the King of \
Sweden ordered the construction of a gallion called the Vase. It was an \
unusual ship. The requirements for it were not the same as for any other ship \
of the time.It was to be more than 60 meters long, carry 64 guns on two \
battery decks, and also carry 300 soldiers at a time for safe delivery to \
Poland by sea. Time was running out, and there was a lack of money (sounds \
familiar, right?). The shipbuilder has never designed such ships before. He \
specialized in smaller, single-deck vessels. Nevertheless, he undertook the \
design and construction of the Vaza, relying on his previous experience. As a \
result, a ship that meets these specifications was built. It's the day of the \
water descent.The ship proudly sailed into the harbor, saluting out all the \
guns. And then he sank.\n\nThe Vaza problem was obvious; anyone who had seen \
the deck of a large 17th-century battleship knew that the decks of such ships \
were overcrowded and unsafe, especially during battle. It was a costly \
mistake to build ships that would serve both combat and transport. The \
shipbuilder, seeking to fulfill all the wishes of the king, created an \
unstable and poorly balanced ship.\n\nA software architect can draw a lot \
from this story and take this sad experience into account when designing a \
software product architecture.Trying to fulfill all the requirements at once \
(as in the case of the Vaza) creates an unstable architecture that does not \
solve exactly any of the tasks set. A good example of this is the requirement \
to force service-oriented architecture (SOA) to function as a point-to-point \
solution at the same time. Usually, this forces us to bypass the various \
levels of abstraction created by the SOA approach, and the result is an \
architecture resembling a spaghetti dish from an Italian restaurant. The \
architect has several tools at his disposal to identify the compromises to be \
made when designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488193568405*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ca747c06-aa37-4267-a941-757eca834682"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Every software architect should know and \
understand that you can't get everything at once. In practice, it is \
impossible to design an architecture that has high performance, high \
availability, high security, and high abstraction at the same time. There is \
one real story that software architects need to know, understand, and tell \
their clients and colleagues. I mean the history of the Vaza.\\n\\nIn 1620, \
there was a war between Sweden and Poland. Wishing to put an end to this \
expensive war more quickly, the King of Sweden ordered the construction of a \
gallion called the Vase. It was an unusual ship. The requirements for it were \
not the same as for any other ship of the time.It was to be more than 60 \
meters long, carry 64 guns on two battery decks, and also carry 300 soldiers \
at a time for safe delivery to Poland by sea. Time was running out, and there \
was a lack of money (sounds familiar, right?). The shipbuilder has never \
designed such ships before. He specialized in smaller, single-deck vessels. \
Nevertheless, he undertook the design and construction of the Vaza, relying \
on his previous experience. As a result, a ship that meets these \
specifications was built. It's the day of the water descent.The ship proudly \
sailed into the harbor, saluting out all the guns. And then he sank.\\n\\nThe \
Vaza problem was obvious; anyone who had seen the deck of a large \
17th-century battleship knew that the decks of such ships were overcrowded \
and unsafe, especially during battle. It was a costly mistake to build ships \
that would serve both combat and transport. The shipbuilder, seeking to \
fulfill all the wishes of the king, created an unstable and poorly balanced \
ship.\\n\\nA software architect can draw a lot from this story and take this \
sad experience into account when designing a software product \
architecture.Trying to fulfill all the requirements at once (as in the case \
of the Vaza) creates an unstable architecture that does not solve exactly any \
of the tasks set. A good example of this is the requirement to force \
service-oriented architecture (SOA) to function as a point-to-point solution \
at the same time. Usually, this forces us to bypass the various levels of \
abstraction created by the SOA approach, and the result is an architecture \
resembling a spaghetti dish from an Italian restaurant. The architect has \
several tools at his disposal to identify the compromises to be made when \
designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Every software architect should know and understand that you can't get \
everything at once. In practice, it is impossible to design an architecture \
that has high performance, high availability, high security, and high \
abstraction at the same time. There is one real story that software \
architects need to know, understand, and tell their clients and colleagues. I \
mean the history of the Vaza.\n\nIn 1620, there was a war between Sweden and \
Poland. Wishing to put an end to this expensive war more quickly, the King of \
Sweden ordered the construction of a gallion called the Vase. It was an \
unusual ship. The requirements for it were not the same as for any other ship \
of the time.It was to be more than 60 meters long, carry 64 guns on two \
battery decks, and also carry 300 soldiers at a time for safe delivery to \
Poland by sea. Time was running out, and there was a lack of money (sounds \
familiar, right?). The shipbuilder has never designed such ships before. He \
specialized in smaller, single-deck vessels. Nevertheless, he undertook the \
design and construction of the Vaza, relying on his previous experience. As a \
result, a ship that meets these specifications was built. It's the day of the \
water descent.The ship proudly sailed into the harbor, saluting out all the \
guns. And then he sank.\n\nThe Vaza problem was obvious; anyone who had seen \
the deck of a large 17th-century battleship knew that the decks of such ships \
were overcrowded and unsafe, especially during battle. It was a costly \
mistake to build ships that would serve both combat and transport. The \
shipbuilder, seeking to fulfill all the wishes of the king, created an \
unstable and poorly balanced ship.\n\nA software architect can draw a lot \
from this story and take this sad experience into account when designing a \
software product architecture.Trying to fulfill all the requirements at once \
(as in the case of the Vaza) creates an unstable architecture that does not \
solve exactly any of the tasks set. A good example of this is the requirement \
to force service-oriented architecture (SOA) to function as a point-to-point \
solution at the same time. Usually, this forces us to bypass the various \
levels of abstraction created by the SOA approach, and the result is an \
architecture resembling a spaghetti dish from an Italian restaurant. The \
architect has several tools at his disposal to identify the compromises to be \
made when designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324881938183107`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"6094f2c9-491d-434e-b10a-88c97f2a088d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Architectural compromises'\\ndate \
= 2024-07-12T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"vaza\\\", \
\\\"sweden\\\", \\\"poland\\\", \\\"italian\\\", \\\"atam\\\", \
\\\"method\\\", \\\"cbam\\\", \\\"cost\\\", \\\"institute\\\"]\\ntags = \
[\\\"vaza\\\", \\\"sweden\\\", \\\"poland\\\", \\\"king\\\", \\\"time\\\", \\\
\"soa\\\", \\\"atam\\\", \\\"architecture tradeoff\\\", \\\"benefit analysis \
metod\\\", \\\"sei\\\", \\\"software engineering institute\\\", \
\\\"architecture\\\", \\\"software\\\", \\\"ship\\\", \
\\\"ships\\\"]\\ncover_image='/images/cover/knoxwelle__2017-07-08T074347.000Z.\
jpg'\\n+++\\nEvery software architect should know and understand that you \
can't get everything at once. In practice, it is impossible to design an \
architecture that has high performance, high availability, high security, and \
high abstraction at the same time. There is one real story that software \
architects need to know, understand, and tell their clients and colleagues. I \
mean the history of the Vaza.\\n\\nIn 1620, there was a war between Sweden \
and Poland. Wishing to put an end to this expensive war more quickly, the \
King of Sweden ordered the construction of a gallion called the Vase. It was \
an unusual ship. The requirements for it were not the same as for any other \
ship of the time.It was to be more than 60 meters long, carry 64 guns on two \
battery decks, and also carry 300 soldiers at a time for safe delivery to \
Poland by sea. Time was running out, and there was a lack of money (sounds \
familiar, right?). The shipbuilder has never designed such ships before. He \
specialized in smaller, single-deck vessels. Nevertheless, he undertook the \
design and construction of the Vaza, relying on his previous experience. As a \
result, a ship that meets these specifications was built. It's the day of the \
water descent.The ship proudly sailed into the harbor, saluting out all the \
guns. And then he sank.\\n\\nThe Vaza problem was obvious; anyone who had \
seen the deck of a large 17th-century battleship knew that the decks of such \
ships were overcrowded and unsafe, especially during battle. It was a costly \
mistake to build ships that would serve both combat and transport. The \
shipbuilder, seeking to fulfill all the wishes of the king, created an \
unstable and poorly balanced ship.\\n\\nA software architect can draw a lot \
from this story and take this sad experience into account when designing a \
software product architecture.Trying to fulfill all the requirements at once \
(as in the case of the Vaza) creates an unstable architecture that does not \
solve exactly any of the tasks set. A good example of this is the requirement \
to force service-oriented architecture (SOA) to function as a point-to-point \
solution at the same time. Usually, this forces us to bypass the various \
levels of abstraction created by the SOA approach, and the result is an \
architecture resembling a spaghetti dish from an Italian restaurant. The \
architect has several tools at his disposal to identify the compromises to be \
made when designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Architectural compromises'\ndate = \
2024-07-12T00:00:00-07:00\ndraft = false\ncategories = [\"vaza\", \"sweden\", \
\"poland\", \"italian\", \"atam\", \"method\", \"cbam\", \"cost\", \
\"institute\"]\ntags = [\"vaza\", \"sweden\", \"poland\", \"king\", \"time\", \
\"soa\", \"atam\", \"architecture tradeoff\", \"benefit analysis metod\", \
\"sei\", \"software engineering institute\", \"architecture\", \"software\", \
\"ship\", \"ships\"]\n\
cover_image='/images/cover/knoxwelle__2017-07-08T074347.000Z.jpg'\n+++\nEvery \
software architect should know and understand that you can't get everything \
at once. In practice, it is impossible to design an architecture that has \
high performance, high availability, high security, and high abstraction at \
the same time. There is one real story that software architects need to know, \
understand, and tell their clients and colleagues. I mean the history of the \
Vaza.\n\nIn 1620, there was a war between Sweden and Poland. Wishing to put \
an end to this expensive war more quickly, the King of Sweden ordered the \
construction of a gallion called the Vase. It was an unusual ship. The \
requirements for it were not the same as for any other ship of the time.It \
was to be more than 60 meters long, carry 64 guns on two battery decks, and \
also carry 300 soldiers at a time for safe delivery to Poland by sea. Time \
was running out, and there was a lack of money (sounds familiar, right?). The \
shipbuilder has never designed such ships before. He specialized in smaller, \
single-deck vessels. Nevertheless, he undertook the design and construction \
of the Vaza, relying on his previous experience. As a result, a ship that \
meets these specifications was built. It's the day of the water descent.The \
ship proudly sailed into the harbor, saluting out all the guns. And then he \
sank.\n\nThe Vaza problem was obvious; anyone who had seen the deck of a \
large 17th-century battleship knew that the decks of such ships were \
overcrowded and unsafe, especially during battle. It was a costly mistake to \
build ships that would serve both combat and transport. The shipbuilder, \
seeking to fulfill all the wishes of the king, created an unstable and poorly \
balanced ship.\n\nA software architect can draw a lot from this story and \
take this sad experience into account when designing a software product \
architecture.Trying to fulfill all the requirements at once (as in the case \
of the Vaza) creates an unstable architecture that does not solve exactly any \
of the tasks set. A good example of this is the requirement to force \
service-oriented architecture (SOA) to function as a point-to-point solution \
at the same time. Usually, this forces us to bypass the various levels of \
abstraction created by the SOA approach, and the result is an architecture \
resembling a spaghetti dish from an Italian restaurant. The architect has \
several tools at his disposal to identify the compromises to be made when \
designing architecture. Two popular methods of this kind are ATAM \
(Architecture Tradeoff Analysis Method) and CBAM (Cost Benefit Analysis \
Method). Further information on ATAM and CBAM can be found on the SEI \
(Software Engineering Institute) website."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488193844922*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"85f4f2ab-e649-4d14-a010-c04c7e958f50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "3", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Be guided by uncertainty.md\"\>"}],
  SequenceForm[
  3, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Be guided by uncertainty.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488193865923*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"47ad0914-a669-44e2-9bc5-7503b6d9c27f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"When faced with alternatives, people tend to \
believe that the most important thing is to make the right choice.In design \
(software products or anything else) this is not the case.The presence of an \
alternative is a sign that uncertainty in the design of the system needs to \
be analysed. Use uncertainty as a determining factor to identify places where \
you can postpone the transition to details or apply breakdown and abstraction \
to reduce the importance of design decisions.If you strictly \
\[OpenCurlyDoubleQuote]sew\[CloseCurlyDoubleQuote] in the system the first \
decision that came to your mind, it is likely to tie your hands in the \
future.As a result, random decisions will begin to play an important role, \
and the flexibility of the software product will decrease.\\n\\nOne of the \
simplest and most constructive definitions of architecture was given by Grady \
Booch: \\\"Any architecture is the result of design, but not every design is \
aimed at creating architecture.Architecture serves as a representation of the \
important design solutions that shape the system, and the importance here is \
determined by the cost of changes.\[CloseCurlyDoubleQuote]It follows that an \
architecture that generally reduces the importance of design decisions is \
effective.Inefficient architecture increases this importance.If a design \
solution can lead one of the two paths, the architect must step back.Instead \
of choosing between options A and B, he needs to think about another \
question: \\\"How do I design a solution to reduce the importance of a choice \
between options \\\"A\\\" and \\\"B\\\"?In this situation, it is not the \
choice between A and B that is interesting, but the very fact that this \
choice exists (as well as the fact that the right choice is not necessarily \
obvious or unchanged). \\n\\nSometimes an architect has to walk around before \
he is illuminated and recognises a dichotomy. Are you standing at the board, \
discussing (very energetically) different options with a colleague?Are you \
deliberately throwing \\\"M-m-m\\\" and \\\"E-e-e\\\" over the code, \
endlessly scrambling possible implementations?When a new requirement or \
clarification of an existing requirement calls into question the \
reasonableness of the current implementation, you face uncertainty.How do we \
react to it?Think of how to isolate a decision from the code that ultimately \
depends on that decision by means of separation or encapsulation.The \
alternative to this is often the vague code, which, like a nervous person at \
an interview, cries something unreasonable and tries to compensate for the \
uncertainty with a lot of guesses and common phrases. And if the choice is \
made with firm, but unfounded confidence, the project at full speed and \
without a glance turns into the wrong path.\\n\\nOften there is a temptation \
to take a \\\"decision for a decision\\\".If there is uncertainty about the \
different paths to develop the system, decide not to make a decision. \
Postpone a particular decision until it can be taken more responsibly on the \
basis of real knowledge, but not for too long, so as not to get into a \
situation where that knowledge is already useless.\\n\\nArchitecture and the \
design process are closely intertwined; this is the main reason why the \
architect should give preference to such design cycles and architectural \
approaches that are empirical in nature and provide feedback in order to \
constructively use uncertainty to divide the system itself into parts and \
schedule its design.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "When faced with alternatives, people tend to believe that the most \
important thing is to make the right choice.In design (software products or \
anything else) this is not the case.The presence of an alternative is a sign \
that uncertainty in the design of the system needs to be analysed. Use \
uncertainty as a determining factor to identify places where you can postpone \
the transition to details or apply breakdown and abstraction to reduce the \
importance of design decisions.If you strictly \[OpenCurlyDoubleQuote]sew\
\[CloseCurlyDoubleQuote] in the system the first decision that came to your \
mind, it is likely to tie your hands in the future.As a result, random \
decisions will begin to play an important role, and the flexibility of the \
software product will decrease.\n\nOne of the simplest and most constructive \
definitions of architecture was given by Grady Booch: \"Any architecture is \
the result of design, but not every design is aimed at creating \
architecture.Architecture serves as a representation of the important design \
solutions that shape the system, and the importance here is determined by the \
cost of changes.\[CloseCurlyDoubleQuote]It follows that an architecture that \
generally reduces the importance of design decisions is effective.Inefficient \
architecture increases this importance.If a design solution can lead one of \
the two paths, the architect must step back.Instead of choosing between \
options A and B, he needs to think about another question: \"How do I design \
a solution to reduce the importance of a choice between options \"A\" and \"B\
\"?In this situation, it is not the choice between A and B that is \
interesting, but the very fact that this choice exists (as well as the fact \
that the right choice is not necessarily obvious or unchanged). \n\nSometimes \
an architect has to walk around before he is illuminated and recognises a \
dichotomy. Are you standing at the board, discussing (very energetically) \
different options with a colleague?Are you deliberately throwing \"M-m-m\" \
and \"E-e-e\" over the code, endlessly scrambling possible \
implementations?When a new requirement or clarification of an existing \
requirement calls into question the reasonableness of the current \
implementation, you face uncertainty.How do we react to it?Think of how to \
isolate a decision from the code that ultimately depends on that decision by \
means of separation or encapsulation.The alternative to this is often the \
vague code, which, like a nervous person at an interview, cries something \
unreasonable and tries to compensate for the uncertainty with a lot of \
guesses and common phrases. And if the choice is made with firm, but \
unfounded confidence, the project at full speed and without a glance turns \
into the wrong path.\n\nOften there is a temptation to take a \"decision for \
a decision\".If there is uncertainty about the different paths to develop the \
system, decide not to make a decision. Postpone a particular decision until \
it can be taken more responsibly on the basis of real knowledge, but not for \
too long, so as not to get into a situation where that knowledge is already \
useless.\n\nArchitecture and the design process are closely intertwined; this \
is the main reason why the architect should give preference to such design \
cycles and architectural approaches that are empirical in nature and provide \
feedback in order to constructively use uncertainty to divide the system \
itself into parts and schedule its design."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488204485518*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"af155ed6-3e3f-49bb-b2ee-97136d753a5e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"When faced with alternatives, people tend to \
believe that the most important thing is to make the right choice.In design \
(software products or anything else) this is not the case.The presence of an \
alternative is a sign that uncertainty in the design of the system needs to \
be analysed. Use uncertainty as a determining factor to identify places where \
you can postpone the transition to details or apply breakdown and abstraction \
to reduce the importance of design decisions.If you strictly \
\[OpenCurlyDoubleQuote]sew\[CloseCurlyDoubleQuote] in the system the first \
decision that came to your mind, it is likely to tie your hands in the \
future.As a result, random decisions will begin to play an important role, \
and the flexibility of the software product will decrease.\\n\\nOne of the \
simplest and most constructive definitions of architecture was given by Grady \
Booch: \\\"Any architecture is the result of design, but not every design is \
aimed at creating architecture.Architecture serves as a representation of the \
important design solutions that shape the system, and the importance here is \
determined by the cost of changes.\[CloseCurlyDoubleQuote]It follows that an \
architecture that generally reduces the importance of design decisions is \
effective.Inefficient architecture increases this importance.If a design \
solution can lead one of the two paths, the architect must step back.Instead \
of choosing between options A and B, he needs to think about another \
question: \\\"How do I design a solution to reduce the importance of a choice \
between options \\\"A\\\" and \\\"B\\\"?In this situation, it is not the \
choice between A and B that is interesting, but the very fact that this \
choice exists (as well as the fact that the right choice is not necessarily \
obvious or unchanged). \\n\\nSometimes an architect has to walk around before \
he is illuminated and recognises a dichotomy. Are you standing at the board, \
discussing (very energetically) different options with a colleague?Are you \
deliberately throwing \\\"M-m-m\\\" and \\\"E-e-e\\\" over the code, \
endlessly scrambling possible implementations?When a new requirement or \
clarification of an existing requirement calls into question the \
reasonableness of the current implementation, you face uncertainty.How do we \
react to it?Think of how to isolate a decision from the code that ultimately \
depends on that decision by means of separation or encapsulation.The \
alternative to this is often the vague code, which, like a nervous person at \
an interview, cries something unreasonable and tries to compensate for the \
uncertainty with a lot of guesses and common phrases. And if the choice is \
made with firm, but unfounded confidence, the project at full speed and \
without a glance turns into the wrong path.\\n\\nOften there is a temptation \
to take a \\\"decision for a decision\\\".If there is uncertainty about the \
different paths to develop the system, decide not to make a decision. \
Postpone a particular decision until it can be taken more responsibly on the \
basis of real knowledge, but not for too long, so as not to get into a \
situation where that knowledge is already useless.\\n\\nArchitecture and the \
design process are closely intertwined; this is the main reason why the \
architect should give preference to such design cycles and architectural \
approaches that are empirical in nature and provide feedback in order to \
constructively use uncertainty to divide the system itself into parts and \
schedule its design.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "When faced with alternatives, people tend to believe that the most \
important thing is to make the right choice.In design (software products or \
anything else) this is not the case.The presence of an alternative is a sign \
that uncertainty in the design of the system needs to be analysed. Use \
uncertainty as a determining factor to identify places where you can postpone \
the transition to details or apply breakdown and abstraction to reduce the \
importance of design decisions.If you strictly \[OpenCurlyDoubleQuote]sew\
\[CloseCurlyDoubleQuote] in the system the first decision that came to your \
mind, it is likely to tie your hands in the future.As a result, random \
decisions will begin to play an important role, and the flexibility of the \
software product will decrease.\n\nOne of the simplest and most constructive \
definitions of architecture was given by Grady Booch: \"Any architecture is \
the result of design, but not every design is aimed at creating \
architecture.Architecture serves as a representation of the important design \
solutions that shape the system, and the importance here is determined by the \
cost of changes.\[CloseCurlyDoubleQuote]It follows that an architecture that \
generally reduces the importance of design decisions is effective.Inefficient \
architecture increases this importance.If a design solution can lead one of \
the two paths, the architect must step back.Instead of choosing between \
options A and B, he needs to think about another question: \"How do I design \
a solution to reduce the importance of a choice between options \"A\" and \"B\
\"?In this situation, it is not the choice between A and B that is \
interesting, but the very fact that this choice exists (as well as the fact \
that the right choice is not necessarily obvious or unchanged). \n\nSometimes \
an architect has to walk around before he is illuminated and recognises a \
dichotomy. Are you standing at the board, discussing (very energetically) \
different options with a colleague?Are you deliberately throwing \"M-m-m\" \
and \"E-e-e\" over the code, endlessly scrambling possible \
implementations?When a new requirement or clarification of an existing \
requirement calls into question the reasonableness of the current \
implementation, you face uncertainty.How do we react to it?Think of how to \
isolate a decision from the code that ultimately depends on that decision by \
means of separation or encapsulation.The alternative to this is often the \
vague code, which, like a nervous person at an interview, cries something \
unreasonable and tries to compensate for the uncertainty with a lot of \
guesses and common phrases. And if the choice is made with firm, but \
unfounded confidence, the project at full speed and without a glance turns \
into the wrong path.\n\nOften there is a temptation to take a \"decision for \
a decision\".If there is uncertainty about the different paths to develop the \
system, decide not to make a decision. Postpone a particular decision until \
it can be taken more responsibly on the basis of real knowledge, but not for \
too long, so as not to get into a situation where that knowledge is already \
useless.\n\nArchitecture and the design process are closely intertwined; this \
is the main reason why the architect should give preference to such design \
cycles and architectural approaches that are empirical in nature and provide \
feedback in order to constructively use uncertainty to divide the system \
itself into parts and schedule its design."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324883163790874`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ced08829-9b3b-4cfd-ab5d-d647b870fa70"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"When faced with alternatives, people tend to \
believe that the most important thing is to make the right choice.In design \
(software products or anything else) this is not the case.The presence of an \
alternative is a sign that uncertainty in the design of the system needs to \
be analysed. Use uncertainty as a determining factor to identify places where \
you can postpone the transition to details or apply breakdown and abstraction \
to reduce the importance of design decisions.If you strictly \
\[OpenCurlyDoubleQuote]sew\[CloseCurlyDoubleQuote] in the system the first \
decision that came to your mind, it is likely to tie your hands in the \
future.As a result, random decisions will begin to play an important role, \
and the flexibility of the software product will decrease.\\n\\nOne of the \
simplest and most constructive definitions of architecture was given by Grady \
Booch: \\\"Any architecture is the result of design, but not every design is \
aimed at creating architecture.Architecture serves as a representation of the \
important design solutions that shape the system, and the importance here is \
determined by the cost of changes.\[CloseCurlyDoubleQuote]It follows that an \
architecture that generally reduces the importance of design decisions is \
effective.Inefficient architecture increases this importance.If a design \
solution can lead one of the two paths, the architect must step back.Instead \
of choosing between options A and B, he needs to think about another \
question: \\\"How do I design a solution to reduce the importance of a choice \
between options \\\"A\\\" and \\\"B\\\"?In this situation, it is not the \
choice between A and B that is interesting, but the very fact that this \
choice exists (as well as the fact that the right choice is not necessarily \
obvious or unchanged). \\n\\nSometimes an architect has to walk around before \
he is illuminated and recognises a dichotomy. Are you standing at the board, \
discussing (very energetically) different options with a colleague?Are you \
deliberately throwing \\\"M-m-m\\\" and \\\"E-e-e\\\" over the code, \
endlessly scrambling possible implementations?When a new requirement or \
clarification of an existing requirement calls into question the \
reasonableness of the current implementation, you face uncertainty.How do we \
react to it?Think of how to isolate a decision from the code that ultimately \
depends on that decision by means of separation or encapsulation.The \
alternative to this is often the vague code, which, like a nervous person at \
an interview, cries something unreasonable and tries to compensate for the \
uncertainty with a lot of guesses and common phrases. And if the choice is \
made with firm, but unfounded confidence, the project at full speed and \
without a glance turns into the wrong path.\\n\\nOften there is a temptation \
to take a \\\"decision for a decision\\\".If there is uncertainty about the \
different paths to develop the system, decide not to make a decision. \
Postpone a particular decision until it can be taken more responsibly on the \
basis of real knowledge, but not for too long, so as not to get into a \
situation where that knowledge is already useless.\\n\\nArchitecture and the \
design process are closely intertwined; this is the main reason why the \
architect should give preference to such design cycles and architectural \
approaches that are empirical in nature and provide feedback in order to \
constructively use uncertainty to divide the system itself into parts and \
schedule its design.\"\>"}],
  SequenceForm[
  "newText: ", 
   "When faced with alternatives, people tend to believe that the most \
important thing is to make the right choice.In design (software products or \
anything else) this is not the case.The presence of an alternative is a sign \
that uncertainty in the design of the system needs to be analysed. Use \
uncertainty as a determining factor to identify places where you can postpone \
the transition to details or apply breakdown and abstraction to reduce the \
importance of design decisions.If you strictly \[OpenCurlyDoubleQuote]sew\
\[CloseCurlyDoubleQuote] in the system the first decision that came to your \
mind, it is likely to tie your hands in the future.As a result, random \
decisions will begin to play an important role, and the flexibility of the \
software product will decrease.\n\nOne of the simplest and most constructive \
definitions of architecture was given by Grady Booch: \"Any architecture is \
the result of design, but not every design is aimed at creating \
architecture.Architecture serves as a representation of the important design \
solutions that shape the system, and the importance here is determined by the \
cost of changes.\[CloseCurlyDoubleQuote]It follows that an architecture that \
generally reduces the importance of design decisions is effective.Inefficient \
architecture increases this importance.If a design solution can lead one of \
the two paths, the architect must step back.Instead of choosing between \
options A and B, he needs to think about another question: \"How do I design \
a solution to reduce the importance of a choice between options \"A\" and \"B\
\"?In this situation, it is not the choice between A and B that is \
interesting, but the very fact that this choice exists (as well as the fact \
that the right choice is not necessarily obvious or unchanged). \n\nSometimes \
an architect has to walk around before he is illuminated and recognises a \
dichotomy. Are you standing at the board, discussing (very energetically) \
different options with a colleague?Are you deliberately throwing \"M-m-m\" \
and \"E-e-e\" over the code, endlessly scrambling possible \
implementations?When a new requirement or clarification of an existing \
requirement calls into question the reasonableness of the current \
implementation, you face uncertainty.How do we react to it?Think of how to \
isolate a decision from the code that ultimately depends on that decision by \
means of separation or encapsulation.The alternative to this is often the \
vague code, which, like a nervous person at an interview, cries something \
unreasonable and tries to compensate for the uncertainty with a lot of \
guesses and common phrases. And if the choice is made with firm, but \
unfounded confidence, the project at full speed and without a glance turns \
into the wrong path.\n\nOften there is a temptation to take a \"decision for \
a decision\".If there is uncertainty about the different paths to develop the \
system, decide not to make a decision. Postpone a particular decision until \
it can be taken more responsibly on the basis of real knowledge, but not for \
too long, so as not to get into a situation where that knowledge is already \
useless.\n\nArchitecture and the design process are closely intertwined; this \
is the main reason why the architect should give preference to such design \
cycles and architectural approaches that are empirical in nature and provide \
feedback in order to constructively use uncertainty to divide the system \
itself into parts and schedule its design."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324883166318417`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"dda253b7-119c-4bf1-9590-b8312b0db940"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Be guided by uncertainty'\\ndate \
= 2024-07-06T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"use\\\", \\\"grady booch\\\", \\\"architecture\\\", \\\"m-m-m\\\", \
\\\"design\\\", \\\"decision\\\", \\\"choice\\\", \
\\\"system\\\"]\\ncover_image='/images/cover/knoxwelle__2017-06-03T163646.\
000Z.jpg'\\n+++\\nWhen faced with alternatives, people tend to believe that \
the most important thing is to make the right choice.In design (software \
products or anything else) this is not the case.The presence of an \
alternative is a sign that uncertainty in the design of the system needs to \
be analysed. Use uncertainty as a determining factor to identify places where \
you can postpone the transition to details or apply breakdown and abstraction \
to reduce the importance of design decisions.If you strictly \
\[OpenCurlyDoubleQuote]sew\[CloseCurlyDoubleQuote] in the system the first \
decision that came to your mind, it is likely to tie your hands in the \
future.As a result, random decisions will begin to play an important role, \
and the flexibility of the software product will decrease.\\n\\nOne of the \
simplest and most constructive definitions of architecture was given by Grady \
Booch: \\\"Any architecture is the result of design, but not every design is \
aimed at creating architecture.Architecture serves as a representation of the \
important design solutions that shape the system, and the importance here is \
determined by the cost of changes.\[CloseCurlyDoubleQuote]It follows that an \
architecture that generally reduces the importance of design decisions is \
effective.Inefficient architecture increases this importance.If a design \
solution can lead one of the two paths, the architect must step back.Instead \
of choosing between options A and B, he needs to think about another \
question: \\\"How do I design a solution to reduce the importance of a choice \
between options \\\"A\\\" and \\\"B\\\"?In this situation, it is not the \
choice between A and B that is interesting, but the very fact that this \
choice exists (as well as the fact that the right choice is not necessarily \
obvious or unchanged). \\n\\nSometimes an architect has to walk around before \
he is illuminated and recognises a dichotomy. Are you standing at the board, \
discussing (very energetically) different options with a colleague?Are you \
deliberately throwing \\\"M-m-m\\\" and \\\"E-e-e\\\" over the code, \
endlessly scrambling possible implementations?When a new requirement or \
clarification of an existing requirement calls into question the \
reasonableness of the current implementation, you face uncertainty.How do we \
react to it?Think of how to isolate a decision from the code that ultimately \
depends on that decision by means of separation or encapsulation.The \
alternative to this is often the vague code, which, like a nervous person at \
an interview, cries something unreasonable and tries to compensate for the \
uncertainty with a lot of guesses and common phrases. And if the choice is \
made with firm, but unfounded confidence, the project at full speed and \
without a glance turns into the wrong path.\\n\\nOften there is a temptation \
to take a \\\"decision for a decision\\\".If there is uncertainty about the \
different paths to develop the system, decide not to make a decision. \
Postpone a particular decision until it can be taken more responsibly on the \
basis of real knowledge, but not for too long, so as not to get into a \
situation where that knowledge is already useless.\\n\\nArchitecture and the \
design process are closely intertwined; this is the main reason why the \
architect should give preference to such design cycles and architectural \
approaches that are empirical in nature and provide feedback in order to \
constructively use uncertainty to divide the system itself into parts and \
schedule its design.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Be guided by uncertainty'\ndate = 2024-07-06T00:00:00-07:00\
\ndraft = false\ncategories = []\ntags = [\"use\", \"grady booch\", \
\"architecture\", \"m-m-m\", \"design\", \"decision\", \"choice\", \
\"system\"]\n\
cover_image='/images/cover/knoxwelle__2017-06-03T163646.000Z.jpg'\n+++\nWhen \
faced with alternatives, people tend to believe that the most important thing \
is to make the right choice.In design (software products or anything else) \
this is not the case.The presence of an alternative is a sign that \
uncertainty in the design of the system needs to be analysed. Use uncertainty \
as a determining factor to identify places where you can postpone the \
transition to details or apply breakdown and abstraction to reduce the \
importance of design decisions.If you strictly \[OpenCurlyDoubleQuote]sew\
\[CloseCurlyDoubleQuote] in the system the first decision that came to your \
mind, it is likely to tie your hands in the future.As a result, random \
decisions will begin to play an important role, and the flexibility of the \
software product will decrease.\n\nOne of the simplest and most constructive \
definitions of architecture was given by Grady Booch: \"Any architecture is \
the result of design, but not every design is aimed at creating \
architecture.Architecture serves as a representation of the important design \
solutions that shape the system, and the importance here is determined by the \
cost of changes.\[CloseCurlyDoubleQuote]It follows that an architecture that \
generally reduces the importance of design decisions is effective.Inefficient \
architecture increases this importance.If a design solution can lead one of \
the two paths, the architect must step back.Instead of choosing between \
options A and B, he needs to think about another question: \"How do I design \
a solution to reduce the importance of a choice between options \"A\" and \"B\
\"?In this situation, it is not the choice between A and B that is \
interesting, but the very fact that this choice exists (as well as the fact \
that the right choice is not necessarily obvious or unchanged). \n\nSometimes \
an architect has to walk around before he is illuminated and recognises a \
dichotomy. Are you standing at the board, discussing (very energetically) \
different options with a colleague?Are you deliberately throwing \"M-m-m\" \
and \"E-e-e\" over the code, endlessly scrambling possible \
implementations?When a new requirement or clarification of an existing \
requirement calls into question the reasonableness of the current \
implementation, you face uncertainty.How do we react to it?Think of how to \
isolate a decision from the code that ultimately depends on that decision by \
means of separation or encapsulation.The alternative to this is often the \
vague code, which, like a nervous person at an interview, cries something \
unreasonable and tries to compensate for the uncertainty with a lot of \
guesses and common phrases. And if the choice is made with firm, but \
unfounded confidence, the project at full speed and without a glance turns \
into the wrong path.\n\nOften there is a temptation to take a \"decision for \
a decision\".If there is uncertainty about the different paths to develop the \
system, decide not to make a decision. Postpone a particular decision until \
it can be taken more responsibly on the basis of real knowledge, but not for \
too long, so as not to get into a situation where that knowledge is already \
useless.\n\nArchitecture and the design process are closely intertwined; this \
is the main reason why the architect should give preference to such design \
cycles and architectural approaches that are empirical in nature and provide \
feedback in order to constructively use uncertainty to divide the system \
itself into parts and schedule its design."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324883166608477`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"148aa613-f5d3-4675-9a7d-59a71f5ec2a6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Business runs everything.md\"\>"}],
  SequenceForm[
  4, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Business runs everything.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324883166934304`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"fe654680-53e0-4bb0-aeb0-85c8370f3176"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"In the context of the development of corporate \
software applications, the architect should become a kind of bridge in the \
company between the business and technical communities, representing and \
defending the interests of both sides and often acting as a mediator between \
them, but at the same time allowing the business to control the affairs.When \
making technological decisions, the architect must be guided by the business \
objectives of the company and its surrounding realities.\\n\\nBefore \
undertaking a software development project, a commercial company usually \
plans and announces the desired return on investment (ROI).The architect must \
accept this indicator and the resulting limitations of the value of the \
product created for the company.This will help to avoid technical solutions \
that could lead to excessive expenditure. The return rate should serve as an \
important component of the target context both when communicating with \
management (during the search for a compromise between the value of a \
particular function and the cost of its implementation), and when discussing \
the technical architecture and implementation with the development team.In \
particular, before the development team, the architect must represent the \
interests of the business, not agreeing to the choice of technology with \
unacceptably high licensing costs and support costs in the testing phase or \
the actual operation of the product.\\n\\nOne of the challenges that arises \
when everyone's business is dominated is to provide enough qualitative \
information about how product development moves so that business management \
can make informed business decisions.Transparency plays a key role here.The \
architect, together with the project management, should create and improve \
the means of obtaining regular, prompt feedback. This goal can be achieved by \
applying various techniques of lean software development: large, visible \
diagrams, continuous integration, frequent releases of working versions of \
the product and their transfer to business management at the earliest stages \
of the project.\\n\\nSoftware development is essentially a design activity, \
which implies a continuous decision-making process until the ready-made \
system is put into operation.It is quite natural for developers to make many \
decisions, but these decisions usually do not relate to the business side of \
the issue.However, to the extent that business management neglects its \
responsibilities by not giving the development team direction, answering \
their questions and making business decisions, it actually leaves business \
decision-making to the developers themselves.For current micro-decisions \
adopted by developers, the architect must provide a macro-context, \
communicating information about the software architecture and business goals \
and protecting them. It should also ensure that developers do not make \
business decisions.Technical decisions taken apart from business obligations, \
expectations and realities (which should be regularly voiced by the business \
party in the process of working on the project) are reduced to conjecture and \
often lead to unjustified costs of scarce resources.\\n\\nIn the long term, \
the interests of the development team are best respected when the business is \
at the helm.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "In the context of the development of corporate software applications, the \
architect should become a kind of bridge in the company between the business \
and technical communities, representing and defending the interests of both \
sides and often acting as a mediator between them, but at the same time \
allowing the business to control the affairs.When making technological \
decisions, the architect must be guided by the business objectives of the \
company and its surrounding realities.\n\nBefore undertaking a software \
development project, a commercial company usually plans and announces the \
desired return on investment (ROI).The architect must accept this indicator \
and the resulting limitations of the value of the product created for the \
company.This will help to avoid technical solutions that could lead to \
excessive expenditure. The return rate should serve as an important component \
of the target context both when communicating with management (during the \
search for a compromise between the value of a particular function and the \
cost of its implementation), and when discussing the technical architecture \
and implementation with the development team.In particular, before the \
development team, the architect must represent the interests of the business, \
not agreeing to the choice of technology with unacceptably high licensing \
costs and support costs in the testing phase or the actual operation of the \
product.\n\nOne of the challenges that arises when everyone's business is \
dominated is to provide enough qualitative information about how product \
development moves so that business management can make informed business \
decisions.Transparency plays a key role here.The architect, together with the \
project management, should create and improve the means of obtaining regular, \
prompt feedback. This goal can be achieved by applying various techniques of \
lean software development: large, visible diagrams, continuous integration, \
frequent releases of working versions of the product and their transfer to \
business management at the earliest stages of the project.\n\nSoftware \
development is essentially a design activity, which implies a continuous \
decision-making process until the ready-made system is put into operation.It \
is quite natural for developers to make many decisions, but these decisions \
usually do not relate to the business side of the issue.However, to the \
extent that business management neglects its responsibilities by not giving \
the development team direction, answering their questions and making business \
decisions, it actually leaves business decision-making to the developers \
themselves.For current micro-decisions adopted by developers, the architect \
must provide a macro-context, communicating information about the software \
architecture and business goals and protecting them. It should also ensure \
that developers do not make business decisions.Technical decisions taken \
apart from business obligations, expectations and realities (which should be \
regularly voiced by the business party in the process of working on the \
project) are reduced to conjecture and often lead to unjustified costs of \
scarce resources.\n\nIn the long term, the interests of the development team \
are best respected when the business is at the helm."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324883295036635`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"afec7023-db7b-4d2a-a8ae-11b15779dc06"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"In the context of the development of corporate \
software applications, the architect should become a kind of bridge in the \
company between the business and technical communities, representing and \
defending the interests of both sides and often acting as a mediator between \
them, but at the same time allowing the business to control the affairs.When \
making technological decisions, the architect must be guided by the business \
objectives of the company and its surrounding realities.\\n\\nBefore \
undertaking a software development project, a commercial company usually \
plans and announces the desired return on investment (ROI). The architect \
must accept this indicator and the resulting limitations of the value of the \
product created for the company.This will help to avoid technical solutions \
that could lead to excessive expenditure. The return rate should serve as an \
important component of the target context both when communicating with \
management (during the search for a compromise between the value of a \
particular function and the cost of its implementation) and when discussing \
the technical architecture and implementation with the development team. In \
particular, before the development team, the architect must represent the \
interests of the business, not agreeing to the choice of technology with \
unacceptably high licensing costs and support costs in the testing phase or \
the actual operation of the product.\\n\\nOne of the challenges that arises \
when everyone's business is dominated is to provide enough qualitative \
information about how product development moves so that business management \
can make informed business decisions.Transparency plays a key role here. The \
architect, together with the project management, should create and improve \
the means of obtaining regular, prompt feedback. This goal can be achieved by \
applying various techniques of lean software development: large, visible \
diagrams, continuous integration, frequent releases of working versions of \
the product, and their transfer to business management at the earliest stages \
of the project.\\n\\nSoftware development is essentially a design activity, \
which implies a continuous decision-making process until the ready-made \
system is put into operation.It is quite natural for developers to make many \
decisions, but these decisions usually do not relate to the business side of \
the issue. However, to the extent that business management neglects its \
responsibilities by not giving the development team direction, answering \
their questions, and making business decisions, it actually leaves business \
decision-making to the developers themselves. For current micro-decisions \
adopted by developers, the architect must provide a macro context, \
communicating information about the software architecture and business goals \
and protecting them. It should also ensure that developers do not make \
business decisions. Technical decisions taken apart from business \
obligations, expectations, and realities (which should be regularly voiced by \
the business party in the process of working on the project) are reduced to \
conjecture and often lead to unjustified costs of scarce resources.\\n\\nIn \
the long term, the interests of the development team are best respected when \
the business is at the helm.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "In the context of the development of corporate software applications, the \
architect should become a kind of bridge in the company between the business \
and technical communities, representing and defending the interests of both \
sides and often acting as a mediator between them, but at the same time \
allowing the business to control the affairs.When making technological \
decisions, the architect must be guided by the business objectives of the \
company and its surrounding realities.\n\nBefore undertaking a software \
development project, a commercial company usually plans and announces the \
desired return on investment (ROI). The architect must accept this indicator \
and the resulting limitations of the value of the product created for the \
company.This will help to avoid technical solutions that could lead to \
excessive expenditure. The return rate should serve as an important component \
of the target context both when communicating with management (during the \
search for a compromise between the value of a particular function and the \
cost of its implementation) and when discussing the technical architecture \
and implementation with the development team. In particular, before the \
development team, the architect must represent the interests of the business, \
not agreeing to the choice of technology with unacceptably high licensing \
costs and support costs in the testing phase or the actual operation of the \
product.\n\nOne of the challenges that arises when everyone's business is \
dominated is to provide enough qualitative information about how product \
development moves so that business management can make informed business \
decisions.Transparency plays a key role here. The architect, together with \
the project management, should create and improve the means of obtaining \
regular, prompt feedback. This goal can be achieved by applying various \
techniques of lean software development: large, visible diagrams, continuous \
integration, frequent releases of working versions of the product, and their \
transfer to business management at the earliest stages of the project.\n\n\
Software development is essentially a design activity, which implies a \
continuous decision-making process until the ready-made system is put into \
operation.It is quite natural for developers to make many decisions, but \
these decisions usually do not relate to the business side of the issue. \
However, to the extent that business management neglects its responsibilities \
by not giving the development team direction, answering their questions, and \
making business decisions, it actually leaves business decision-making to the \
developers themselves. For current micro-decisions adopted by developers, the \
architect must provide a macro context, communicating information about the \
software architecture and business goals and protecting them. It should also \
ensure that developers do not make business decisions. Technical decisions \
taken apart from business obligations, expectations, and realities (which \
should be regularly voiced by the business party in the process of working on \
the project) are reduced to conjecture and often lead to unjustified costs of \
scarce resources.\n\nIn the long term, the interests of the development team \
are best respected when the business is at the helm."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324884394426827`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"186c9fc4-4fc1-424c-a179-039ff1e53e0c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"In the context of the development of corporate \
software applications, the architect should become a kind of bridge in the \
company between the business and technical communities, representing and \
defending the interests of both sides and often acting as a mediator between \
them, but at the same time allowing the business to control the affairs.When \
making technological decisions, the architect must be guided by the business \
objectives of the company and its surrounding realities.\\n\\nBefore \
undertaking a software development project, a commercial company usually \
plans and announces the desired return on investment (ROI). The architect \
must accept this indicator and the resulting limitations of the value of the \
product created for the company.This will help to avoid technical solutions \
that could lead to excessive expenditure. The return rate should serve as an \
important component of the target context both when communicating with \
management (during the search for a compromise between the value of a \
particular function and the cost of its implementation) and when discussing \
the technical architecture and implementation with the development team. In \
particular, before the development team, the architect must represent the \
interests of the business, not agreeing to the choice of technology with \
unacceptably high licensing costs and support costs in the testing phase or \
the actual operation of the product.\\n\\nOne of the challenges that arises \
when everyone's business is dominated is to provide enough qualitative \
information about how product development moves so that business management \
can make informed business decisions.Transparency plays a key role here. The \
architect, together with the project management, should create and improve \
the means of obtaining regular, prompt feedback. This goal can be achieved by \
applying various techniques of lean software development: large, visible \
diagrams, continuous integration, frequent releases of working versions of \
the product, and their transfer to business management at the earliest stages \
of the project.\\n\\nSoftware development is essentially a design activity, \
which implies a continuous decision-making process until the ready-made \
system is put into operation.It is quite natural for developers to make many \
decisions, but these decisions usually do not relate to the business side of \
the issue. However, to the extent that business management neglects its \
responsibilities by not giving the development team direction, answering \
their questions, and making business decisions, it actually leaves business \
decision-making to the developers themselves. For current micro-decisions \
adopted by developers, the architect must provide a macro context, \
communicating information about the software architecture and business goals \
and protecting them. It should also ensure that developers do not make \
business decisions. Technical decisions taken apart from business \
obligations, expectations, and realities (which should be regularly voiced by \
the business party in the process of working on the project) are reduced to \
conjecture and often lead to unjustified costs of scarce resources.\\n\\nIn \
the long term, the interests of the development team are best respected when \
the business is at the helm.\"\>"}],
  SequenceForm[
  "newText: ", 
   "In the context of the development of corporate software applications, the \
architect should become a kind of bridge in the company between the business \
and technical communities, representing and defending the interests of both \
sides and often acting as a mediator between them, but at the same time \
allowing the business to control the affairs.When making technological \
decisions, the architect must be guided by the business objectives of the \
company and its surrounding realities.\n\nBefore undertaking a software \
development project, a commercial company usually plans and announces the \
desired return on investment (ROI). The architect must accept this indicator \
and the resulting limitations of the value of the product created for the \
company.This will help to avoid technical solutions that could lead to \
excessive expenditure. The return rate should serve as an important component \
of the target context both when communicating with management (during the \
search for a compromise between the value of a particular function and the \
cost of its implementation) and when discussing the technical architecture \
and implementation with the development team. In particular, before the \
development team, the architect must represent the interests of the business, \
not agreeing to the choice of technology with unacceptably high licensing \
costs and support costs in the testing phase or the actual operation of the \
product.\n\nOne of the challenges that arises when everyone's business is \
dominated is to provide enough qualitative information about how product \
development moves so that business management can make informed business \
decisions.Transparency plays a key role here. The architect, together with \
the project management, should create and improve the means of obtaining \
regular, prompt feedback. This goal can be achieved by applying various \
techniques of lean software development: large, visible diagrams, continuous \
integration, frequent releases of working versions of the product, and their \
transfer to business management at the earliest stages of the project.\n\n\
Software development is essentially a design activity, which implies a \
continuous decision-making process until the ready-made system is put into \
operation.It is quite natural for developers to make many decisions, but \
these decisions usually do not relate to the business side of the issue. \
However, to the extent that business management neglects its responsibilities \
by not giving the development team direction, answering their questions, and \
making business decisions, it actually leaves business decision-making to the \
developers themselves. For current micro-decisions adopted by developers, the \
architect must provide a macro context, communicating information about the \
software architecture and business goals and protecting them. It should also \
ensure that developers do not make business decisions. Technical decisions \
taken apart from business obligations, expectations, and realities (which \
should be regularly voiced by the business party in the process of working on \
the project) are reduced to conjecture and often lead to unjustified costs of \
scarce resources.\n\nIn the long term, the interests of the development team \
are best respected when the business is at the helm."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324884398752785`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"15c499f4-2a2f-44c4-b4bb-a1c71a198a14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Business runs everything'\\ndate \
= 2024-05-17T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"software\\\", \\\"technical\\\", \\\"business\\\", \\\"development\\\", \
\\\"architect\\\", \\\"management\\\", \
\\\"decisions\\\"]\\ncover_image='/images/cover/knoxwelle__2017-01-04T173648.\
000Z.jpg'\\n+++\\nIn the context of the development of corporate software \
applications, the architect should become a kind of bridge in the company \
between the business and technical communities, representing and defending \
the interests of both sides and often acting as a mediator between them, but \
at the same time allowing the business to control the affairs.When making \
technological decisions, the architect must be guided by the business \
objectives of the company and its surrounding realities.\\n\\nBefore \
undertaking a software development project, a commercial company usually \
plans and announces the desired return on investment (ROI). The architect \
must accept this indicator and the resulting limitations of the value of the \
product created for the company.This will help to avoid technical solutions \
that could lead to excessive expenditure. The return rate should serve as an \
important component of the target context both when communicating with \
management (during the search for a compromise between the value of a \
particular function and the cost of its implementation) and when discussing \
the technical architecture and implementation with the development team. In \
particular, before the development team, the architect must represent the \
interests of the business, not agreeing to the choice of technology with \
unacceptably high licensing costs and support costs in the testing phase or \
the actual operation of the product.\\n\\nOne of the challenges that arises \
when everyone's business is dominated is to provide enough qualitative \
information about how product development moves so that business management \
can make informed business decisions.Transparency plays a key role here. The \
architect, together with the project management, should create and improve \
the means of obtaining regular, prompt feedback. This goal can be achieved by \
applying various techniques of lean software development: large, visible \
diagrams, continuous integration, frequent releases of working versions of \
the product, and their transfer to business management at the earliest stages \
of the project.\\n\\nSoftware development is essentially a design activity, \
which implies a continuous decision-making process until the ready-made \
system is put into operation.It is quite natural for developers to make many \
decisions, but these decisions usually do not relate to the business side of \
the issue. However, to the extent that business management neglects its \
responsibilities by not giving the development team direction, answering \
their questions, and making business decisions, it actually leaves business \
decision-making to the developers themselves. For current micro-decisions \
adopted by developers, the architect must provide a macro context, \
communicating information about the software architecture and business goals \
and protecting them. It should also ensure that developers do not make \
business decisions. Technical decisions taken apart from business \
obligations, expectations, and realities (which should be regularly voiced by \
the business party in the process of working on the project) are reduced to \
conjecture and often lead to unjustified costs of scarce resources.\\n\\nIn \
the long term, the interests of the development team are best respected when \
the business is at the helm.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Business runs everything'\ndate = 2024-05-17T00:00:00-07:00\
\ndraft = false\ncategories = []\ntags = [\"software\", \"technical\", \
\"business\", \"development\", \"architect\", \"management\", \"decisions\"]\n\
cover_image='/images/cover/knoxwelle__2017-01-04T173648.000Z.jpg'\n+++\nIn \
the context of the development of corporate software applications, the \
architect should become a kind of bridge in the company between the business \
and technical communities, representing and defending the interests of both \
sides and often acting as a mediator between them, but at the same time \
allowing the business to control the affairs.When making technological \
decisions, the architect must be guided by the business objectives of the \
company and its surrounding realities.\n\nBefore undertaking a software \
development project, a commercial company usually plans and announces the \
desired return on investment (ROI). The architect must accept this indicator \
and the resulting limitations of the value of the product created for the \
company.This will help to avoid technical solutions that could lead to \
excessive expenditure. The return rate should serve as an important component \
of the target context both when communicating with management (during the \
search for a compromise between the value of a particular function and the \
cost of its implementation) and when discussing the technical architecture \
and implementation with the development team. In particular, before the \
development team, the architect must represent the interests of the business, \
not agreeing to the choice of technology with unacceptably high licensing \
costs and support costs in the testing phase or the actual operation of the \
product.\n\nOne of the challenges that arises when everyone's business is \
dominated is to provide enough qualitative information about how product \
development moves so that business management can make informed business \
decisions.Transparency plays a key role here. The architect, together with \
the project management, should create and improve the means of obtaining \
regular, prompt feedback. This goal can be achieved by applying various \
techniques of lean software development: large, visible diagrams, continuous \
integration, frequent releases of working versions of the product, and their \
transfer to business management at the earliest stages of the project.\n\n\
Software development is essentially a design activity, which implies a \
continuous decision-making process until the ready-made system is put into \
operation.It is quite natural for developers to make many decisions, but \
these decisions usually do not relate to the business side of the issue. \
However, to the extent that business management neglects its responsibilities \
by not giving the development team direction, answering their questions, and \
making business decisions, it actually leaves business decision-making to the \
developers themselves. For current micro-decisions adopted by developers, the \
architect must provide a macro context, communicating information about the \
software architecture and business goals and protecting them. It should also \
ensure that developers do not make business decisions. Technical decisions \
taken apart from business obligations, expectations, and realities (which \
should be regularly voiced by the business party in the process of working on \
the project) are reduced to conjecture and often lead to unjustified costs of \
scarce resources.\n\nIn the long term, the interests of the development team \
are best respected when the business is at the helm."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488439910246*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"98f85429-6b85-4949-8564-340fab731b6b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "5", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Communication is the king, clarity and leadership are his \
true companions.md\"\>"}],
  SequenceForm[
  5, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Communication is the king, clarity and leadership are his true \
companions.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324884399344964`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"1129623b-bbd8-4855-b472-7a265b9bb544"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Too often, software architects live in ivory \
towers, leaving specifications to the developers and imposing technologies \
and directions on them. At the same time, this leads to strife, which is \
quickly followed by a \[OpenCurlyDoubleQuote]popular uprising.\\\" The result \
is a software product that has nothing to do with the original requirements. \
Every software architect must be able to explain to his colleagues the goals \
and objectives of the software project. The keys to effective communication \
are clarity and leadership.\\n\\nClearness characterizes the process of \
communication. No one in your group will read a 100-page document justifying \
your architectural decisions. The ability to express your thoughts clearly is \
vital to the success of any program or project. From the very beginning of \
work on the project, adhere to simple explanations and, in no case, start \
making long descriptions in Word. Use tools like Visio to create simple \
charts that explain your ideas. Diagrams should be simple because they will \
change almost frequently. Informal meetings are another effective means of \
disseminating information. The best way to communicate your thoughts to the \
project participants is to bring together a group of developers (or other \
architects) in one room and display your ideas on the board. Be sure to take \
a digital camera with you (nothing is more annoying than the requirement to \
release the conference room when you have just finished drawing). After the \
meeting, take a picture, multiply it, and distribute it to the rest of the \
participants via wiki. Postpone the creation of spacious documents and focus \
on bringing your ideas to colleagues, and then you can think of a more \
detailed presentation of your architectural solutions.\\n\\nMost software \
architects do not realize that they must also be leaders. To work in a \
healthy and productive environment, you, as a leader, must win the respect of \
your colleagues. Keeping developers unaware of what the overall picture looks \
like and why certain decisions are made is the right path to disaster. On the \
contrary, by attracting developers to your side, you create a collective \
working environment in which the correctness of your architectural decisions \
is checked. In turn, connecting designers to the architecture creation \
process ensures their commitment and interest.\\n\\nKeep in mind that clarity \
and leadership are important for interacting with all team members (not only \
with developers but also with the testing team, business analysts, and \
project managers). Clear communication and effective leadership enhance the \
quality of communication and create a strong and healthy working environment.\
\\n\\nIf \[OpenCurlyDoubleQuote]communication is the king,\\\"  then clarity \
and leadership are its true allies.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Too often, software architects live in ivory towers, leaving \
specifications to the developers and imposing technologies and directions on \
them. At the same time, this leads to strife, which is quickly followed by a \
\[OpenCurlyDoubleQuote]popular uprising.\" The result is a software product \
that has nothing to do with the original requirements. Every software \
architect must be able to explain to his colleagues the goals and objectives \
of the software project. The keys to effective communication are clarity and \
leadership.\n\nClearness characterizes the process of communication. No one \
in your group will read a 100-page document justifying your architectural \
decisions. The ability to express your thoughts clearly is vital to the \
success of any program or project. From the very beginning of work on the \
project, adhere to simple explanations and, in no case, start making long \
descriptions in Word. Use tools like Visio to create simple charts that \
explain your ideas. Diagrams should be simple because they will change almost \
frequently. Informal meetings are another effective means of disseminating \
information. The best way to communicate your thoughts to the project \
participants is to bring together a group of developers (or other architects) \
in one room and display your ideas on the board. Be sure to take a digital \
camera with you (nothing is more annoying than the requirement to release the \
conference room when you have just finished drawing). After the meeting, take \
a picture, multiply it, and distribute it to the rest of the participants via \
wiki. Postpone the creation of spacious documents and focus on bringing your \
ideas to colleagues, and then you can think of a more detailed presentation \
of your architectural solutions.\n\nMost software architects do not realize \
that they must also be leaders. To work in a healthy and productive \
environment, you, as a leader, must win the respect of your colleagues. \
Keeping developers unaware of what the overall picture looks like and why \
certain decisions are made is the right path to disaster. On the contrary, by \
attracting developers to your side, you create a collective working \
environment in which the correctness of your architectural decisions is \
checked. In turn, connecting designers to the architecture creation process \
ensures their commitment and interest.\n\nKeep in mind that clarity and \
leadership are important for interacting with all team members (not only with \
developers but also with the testing team, business analysts, and project \
managers). Clear communication and effective leadership enhance the quality \
of communication and create a strong and healthy working environment.\n\nIf \
\[OpenCurlyDoubleQuote]communication is the king,\"  then clarity and \
leadership are its true allies."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488451324998*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"59a5eeae-c3b9-41e8-846b-58caf7f055f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Too often, software architects live in ivory \
towers, leaving specifications to the developers and imposing technologies \
and directions on them. At the same time, this leads to strife, which is \
quickly followed by a \[OpenCurlyDoubleQuote]popular uprising.\\\" The result \
is a software product that has nothing to do with the original requirements. \
Every software architect must be able to explain to his colleagues the goals \
and objectives of the software project. The keys to effective communication \
are clarity and leadership.\\n\\nClearness characterizes the process of \
communication. No one in your group will read a 100-page document justifying \
your architectural decisions. The ability to express your thoughts clearly is \
vital to the success of any program or project. From the very beginning of \
work on the project, adhere to simple explanations and, in no case, start \
making long descriptions in Word. Use tools like Visio to create simple \
charts that explain your ideas. Diagrams should be simple because they will \
change almost frequently. Informal meetings are another effective means of \
disseminating information. The best way to communicate your thoughts to the \
project participants is to bring together a group of developers (or other \
architects) in one room and display your ideas on the board. Be sure to take \
a digital camera with you (nothing is more annoying than the requirement to \
release the conference room when you have just finished drawing). After the \
meeting, take a picture, multiply it, and distribute it to the rest of the \
participants via wiki. Postpone the creation of spacious documents and focus \
on bringing your ideas to colleagues, and then you can think of a more \
detailed presentation of your architectural solutions.\\n\\nMost software \
architects do not realize that they must also be leaders. To work in a \
healthy and productive environment, you, as a leader, must win the respect of \
your colleagues. Keeping developers unaware of what the overall picture looks \
like and why certain decisions are made is the right path to disaster. On the \
contrary, by attracting developers to your side, you create a collective \
working environment in which the correctness of your architectural decisions \
is checked. In turn, connecting designers to the architecture creation \
process ensures their commitment and interest.\\n\\nKeep in mind that clarity \
and leadership are important for interacting with all team members (not only \
with developers but also with the testing team, business analysts, and \
project managers). Clear communication and effective leadership enhance the \
quality of communication and create a strong and healthy working environment.\
\\n\\nIf \[OpenCurlyDoubleQuote]communication is the king,\\\"  then clarity \
and leadership are its true allies.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Too often, software architects live in ivory towers, leaving \
specifications to the developers and imposing technologies and directions on \
them. At the same time, this leads to strife, which is quickly followed by a \
\[OpenCurlyDoubleQuote]popular uprising.\" The result is a software product \
that has nothing to do with the original requirements. Every software \
architect must be able to explain to his colleagues the goals and objectives \
of the software project. The keys to effective communication are clarity and \
leadership.\n\nClearness characterizes the process of communication. No one \
in your group will read a 100-page document justifying your architectural \
decisions. The ability to express your thoughts clearly is vital to the \
success of any program or project. From the very beginning of work on the \
project, adhere to simple explanations and, in no case, start making long \
descriptions in Word. Use tools like Visio to create simple charts that \
explain your ideas. Diagrams should be simple because they will change almost \
frequently. Informal meetings are another effective means of disseminating \
information. The best way to communicate your thoughts to the project \
participants is to bring together a group of developers (or other architects) \
in one room and display your ideas on the board. Be sure to take a digital \
camera with you (nothing is more annoying than the requirement to release the \
conference room when you have just finished drawing). After the meeting, take \
a picture, multiply it, and distribute it to the rest of the participants via \
wiki. Postpone the creation of spacious documents and focus on bringing your \
ideas to colleagues, and then you can think of a more detailed presentation \
of your architectural solutions.\n\nMost software architects do not realize \
that they must also be leaders. To work in a healthy and productive \
environment, you, as a leader, must win the respect of your colleagues. \
Keeping developers unaware of what the overall picture looks like and why \
certain decisions are made is the right path to disaster. On the contrary, by \
attracting developers to your side, you create a collective working \
environment in which the correctness of your architectural decisions is \
checked. In turn, connecting designers to the architecture creation process \
ensures their commitment and interest.\n\nKeep in mind that clarity and \
leadership are important for interacting with all team members (not only with \
developers but also with the testing team, business analysts, and project \
managers). Clear communication and effective leadership enhance the quality \
of communication and create a strong and healthy working environment.\n\nIf \
\[OpenCurlyDoubleQuote]communication is the king,\"  then clarity and \
leadership are its true allies."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324886632855597`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f5f56afe-8761-44c9-af5d-108f0825ca14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Too often, software architects live in ivory \
towers, leaving specifications to the developers and imposing technologies \
and directions on them. At the same time, this leads to strife, which is \
quickly followed by a \[OpenCurlyDoubleQuote]popular uprising.\\\" The result \
is a software product that has nothing to do with the original requirements. \
Every software architect must be able to explain to his colleagues the goals \
and objectives of the software project. The keys to effective communication \
are clarity and leadership.\\n\\nClearness characterizes the process of \
communication. No one in your group will read a 100-page document justifying \
your architectural decisions. The ability to express your thoughts clearly is \
vital to the success of any program or project. From the very beginning of \
work on the project, adhere to simple explanations and, in no case, start \
making long descriptions in Word. Use tools like Visio to create simple \
charts that explain your ideas. Diagrams should be simple because they will \
change almost frequently. Informal meetings are another effective means of \
disseminating information. The best way to communicate your thoughts to the \
project participants is to bring together a group of developers (or other \
architects) in one room and display your ideas on the board. Be sure to take \
a digital camera with you (nothing is more annoying than the requirement to \
release the conference room when you have just finished drawing). After the \
meeting, take a picture, multiply it, and distribute it to the rest of the \
participants via wiki. Postpone the creation of spacious documents and focus \
on bringing your ideas to colleagues, and then you can think of a more \
detailed presentation of your architectural solutions.\\n\\nMost software \
architects do not realize that they must also be leaders. To work in a \
healthy and productive environment, you, as a leader, must win the respect of \
your colleagues. Keeping developers unaware of what the overall picture looks \
like and why certain decisions are made is the right path to disaster. On the \
contrary, by attracting developers to your side, you create a collective \
working environment in which the correctness of your architectural decisions \
is checked. In turn, connecting designers to the architecture creation \
process ensures their commitment and interest.\\n\\nKeep in mind that clarity \
and leadership are important for interacting with all team members (not only \
with developers but also with the testing team, business analysts, and \
project managers). Clear communication and effective leadership enhance the \
quality of communication and create a strong and healthy working environment.\
\\n\\nIf \[OpenCurlyDoubleQuote]communication is the king,\\\"  then clarity \
and leadership are its true allies.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Too often, software architects live in ivory towers, leaving \
specifications to the developers and imposing technologies and directions on \
them. At the same time, this leads to strife, which is quickly followed by a \
\[OpenCurlyDoubleQuote]popular uprising.\" The result is a software product \
that has nothing to do with the original requirements. Every software \
architect must be able to explain to his colleagues the goals and objectives \
of the software project. The keys to effective communication are clarity and \
leadership.\n\nClearness characterizes the process of communication. No one \
in your group will read a 100-page document justifying your architectural \
decisions. The ability to express your thoughts clearly is vital to the \
success of any program or project. From the very beginning of work on the \
project, adhere to simple explanations and, in no case, start making long \
descriptions in Word. Use tools like Visio to create simple charts that \
explain your ideas. Diagrams should be simple because they will change almost \
frequently. Informal meetings are another effective means of disseminating \
information. The best way to communicate your thoughts to the project \
participants is to bring together a group of developers (or other architects) \
in one room and display your ideas on the board. Be sure to take a digital \
camera with you (nothing is more annoying than the requirement to release the \
conference room when you have just finished drawing). After the meeting, take \
a picture, multiply it, and distribute it to the rest of the participants via \
wiki. Postpone the creation of spacious documents and focus on bringing your \
ideas to colleagues, and then you can think of a more detailed presentation \
of your architectural solutions.\n\nMost software architects do not realize \
that they must also be leaders. To work in a healthy and productive \
environment, you, as a leader, must win the respect of your colleagues. \
Keeping developers unaware of what the overall picture looks like and why \
certain decisions are made is the right path to disaster. On the contrary, by \
attracting developers to your side, you create a collective working \
environment in which the correctness of your architectural decisions is \
checked. In turn, connecting designers to the architecture creation process \
ensures their commitment and interest.\n\nKeep in mind that clarity and \
leadership are important for interacting with all team members (not only with \
developers but also with the testing team, business analysts, and project \
managers). Clear communication and effective leadership enhance the quality \
of communication and create a strong and healthy working environment.\n\nIf \
\[OpenCurlyDoubleQuote]communication is the king,\"  then clarity and \
leadership are its true allies."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324886645421963`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"da722be0-64f1-45c4-8327-cd2b049144f8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Communication is the king, \
clarity and leadership are his true companions'\\ndate = \
2024-06-18T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"visio\\\", \\\"communication\\\", \\\"project\\\", \\\"developers\\\", \
\\\"software\\\", \
\\\"leadership\\\"]\\ncover_image='/images/cover/knoxwelle__2016-11-19T143042.\
000Z.jpg'\\n+++\\nToo often, software architects live in ivory towers, \
leaving specifications to the developers and imposing technologies and \
directions on them. At the same time, this leads to strife, which is quickly \
followed by a \[OpenCurlyDoubleQuote]popular uprising.\\\" The result is a \
software product that has nothing to do with the original requirements. Every \
software architect must be able to explain to his colleagues the goals and \
objectives of the software project. The keys to effective communication are \
clarity and leadership.\\n\\nClearness characterizes the process of \
communication. No one in your group will read a 100-page document justifying \
your architectural decisions. The ability to express your thoughts clearly is \
vital to the success of any program or project. From the very beginning of \
work on the project, adhere to simple explanations and, in no case, start \
making long descriptions in Word. Use tools like Visio to create simple \
charts that explain your ideas. Diagrams should be simple because they will \
change almost frequently. Informal meetings are another effective means of \
disseminating information. The best way to communicate your thoughts to the \
project participants is to bring together a group of developers (or other \
architects) in one room and display your ideas on the board. Be sure to take \
a digital camera with you (nothing is more annoying than the requirement to \
release the conference room when you have just finished drawing). After the \
meeting, take a picture, multiply it, and distribute it to the rest of the \
participants via wiki. Postpone the creation of spacious documents and focus \
on bringing your ideas to colleagues, and then you can think of a more \
detailed presentation of your architectural solutions.\\n\\nMost software \
architects do not realize that they must also be leaders. To work in a \
healthy and productive environment, you, as a leader, must win the respect of \
your colleagues. Keeping developers unaware of what the overall picture looks \
like and why certain decisions are made is the right path to disaster. On the \
contrary, by attracting developers to your side, you create a collective \
working environment in which the correctness of your architectural decisions \
is checked. In turn, connecting designers to the architecture creation \
process ensures their commitment and interest.\\n\\nKeep in mind that clarity \
and leadership are important for interacting with all team members (not only \
with developers but also with the testing team, business analysts, and \
project managers). Clear communication and effective leadership enhance the \
quality of communication and create a strong and healthy working environment.\
\\n\\nIf \[OpenCurlyDoubleQuote]communication is the king,\\\"  then clarity \
and leadership are its true allies.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Communication is the king, clarity and leadership are his \
true companions'\ndate = 2024-06-18T00:00:00-07:00\ndraft = false\ncategories \
= []\ntags = [\"visio\", \"communication\", \"project\", \"developers\", \
\"software\", \"leadership\"]\n\
cover_image='/images/cover/knoxwelle__2016-11-19T143042.000Z.jpg'\n+++\nToo \
often, software architects live in ivory towers, leaving specifications to \
the developers and imposing technologies and directions on them. At the same \
time, this leads to strife, which is quickly followed by a \
\[OpenCurlyDoubleQuote]popular uprising.\" The result is a software product \
that has nothing to do with the original requirements. Every software \
architect must be able to explain to his colleagues the goals and objectives \
of the software project. The keys to effective communication are clarity and \
leadership.\n\nClearness characterizes the process of communication. No one \
in your group will read a 100-page document justifying your architectural \
decisions. The ability to express your thoughts clearly is vital to the \
success of any program or project. From the very beginning of work on the \
project, adhere to simple explanations and, in no case, start making long \
descriptions in Word. Use tools like Visio to create simple charts that \
explain your ideas. Diagrams should be simple because they will change almost \
frequently. Informal meetings are another effective means of disseminating \
information. The best way to communicate your thoughts to the project \
participants is to bring together a group of developers (or other architects) \
in one room and display your ideas on the board. Be sure to take a digital \
camera with you (nothing is more annoying than the requirement to release the \
conference room when you have just finished drawing). After the meeting, take \
a picture, multiply it, and distribute it to the rest of the participants via \
wiki. Postpone the creation of spacious documents and focus on bringing your \
ideas to colleagues, and then you can think of a more detailed presentation \
of your architectural solutions.\n\nMost software architects do not realize \
that they must also be leaders. To work in a healthy and productive \
environment, you, as a leader, must win the respect of your colleagues. \
Keeping developers unaware of what the overall picture looks like and why \
certain decisions are made is the right path to disaster. On the contrary, by \
attracting developers to your side, you create a collective working \
environment in which the correctness of your architectural decisions is \
checked. In turn, connecting designers to the architecture creation process \
ensures their commitment and interest.\n\nKeep in mind that clarity and \
leadership are important for interacting with all team members (not only with \
developers but also with the testing team, business analysts, and project \
managers). Clear communication and effective leadership enhance the quality \
of communication and create a strong and healthy working environment.\n\nIf \
\[OpenCurlyDoubleQuote]communication is the king,\"  then clarity and \
leadership are its true allies."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324886646141806`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"94c7f080-754a-447b-afe9-05849efbd365"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "6", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Creating architecture as the art of balance.md\"\>"}],
  SequenceForm[
  6, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Creating architecture as the art of balance.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324886646808057`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"43433cca-1974-4410-ba06-246a63ca70d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"When it comes to developing a software \
architecture, we first imagine the classic technical operations: system \
breakdown into modules, defining interfaces, allocating responsibilities, \
applying templates, and optimizing performance.In addition, the architect \
must take into account a number of other aspects, including safety, ease of \
use, easy maintenance, output management, choice of deployment settings, \
etc.However, all of these technical and procedural aspects must be relevant \
to the needs of the stakeholders.Taking these interests into account in the \
analysis of requirements is a great way to ensure that the requirements \
specifications for the product being developed are complete.\\n\\nAll parties \
involved in the project have interests affecting both the software \
development process adopted in the organization and the organization as a \
whole. It is the analysis of these interests that forms the resulting set of \
priorities for the architect. It can be said that the creation of \
architecture is the process of balancing priorities in the short-term and \
long-term perspectives within the existing context.\\n\\nTake, for example, \
the engineering department of a software development service provider.Most \
likely, this organization has certain priorities: compliance with contractual \
obligations, earning revenue,ining a good reputation among customers, \
reducing costs and creating valuable technical assets.These business \
priorities are transformed into the department\[CloseCurlyQuote]s priorities: \
to ensure the functionality, correctness and \[OpenCurlyDoubleQuote]quality \
attributes\[CloseCurlyDoubleQuote] of the product being developed, as well as \
the productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\\n\\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\\n\\nThe architect can deliberately shift the balance in favour \
of one of the priorities for a short time, but in the long term, to get the \
work done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\\n\\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "When it comes to developing a software architecture, we first imagine the \
classic technical operations: system breakdown into modules, defining \
interfaces, allocating responsibilities, applying templates, and optimizing \
performance.In addition, the architect must take into account a number of \
other aspects, including safety, ease of use, easy maintenance, output \
management, choice of deployment settings, etc.However, all of these \
technical and procedural aspects must be relevant to the needs of the \
stakeholders.Taking these interests into account in the analysis of \
requirements is a great way to ensure that the requirements specifications \
for the product being developed are complete.\n\nAll parties involved in the \
project have interests affecting both the software development process \
adopted in the organization and the organization as a whole. It is the \
analysis of these interests that forms the resulting set of priorities for \
the architect. It can be said that the creation of architecture is the \
process of balancing priorities in the short-term and long-term perspectives \
within the existing context.\n\nTake, for example, the engineering department \
of a software development service provider.Most likely, this organization has \
certain priorities: compliance with contractual obligations, earning \
revenue,ining a good reputation among customers, reducing costs and creating \
valuable technical assets.These business priorities are transformed into the \
department\[CloseCurlyQuote]s priorities: to ensure the functionality, \
correctness and \[OpenCurlyDoubleQuote]quality attributes\
\[CloseCurlyDoubleQuote] of the product being developed, as well as the \
productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\n\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\n\nThe architect can deliberately shift the balance in favour of \
one of the priorities for a short time, but in the long term, to get the work \
done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\n\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324886846599736`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"cc77d741-ec6a-4ca3-b5ac-f11c4a729568"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"When it comes to developing a software \
architecture, we first imagine the classic technical operations: system \
breakdown into modules, defining interfaces, allocating responsibilities, \
applying templates, and optimizing performance.In addition, the architect \
must take into account a number of other aspects, including safety, ease of \
use, easy maintenance, output management, choice of deployment settings, \
etc.However, all of these technical and procedural aspects must be relevant \
to the needs of the stakeholders.Taking these interests into account in the \
analysis of requirements is a great way to ensure that the requirements \
specifications for the product being developed are complete.\\n\\nAll parties \
involved in the project have interests affecting both the software \
development process adopted in the organization and the organization as a \
whole. It is the analysis of these interests that forms the resulting set of \
priorities for the architect. It can be said that the creation of \
architecture is the process of balancing priorities in the short-term and \
long-term perspectives within the existing context.\\n\\nTake, for example, \
the engineering department of a software development service provider.Most \
likely, this organization has certain priorities: compliance with contractual \
obligations, earning revenue,ining a good reputation among customers, \
reducing costs and creating valuable technical assets.These business \
priorities are transformed into the department\[CloseCurlyQuote]s priorities: \
to ensure the functionality, correctness and \[OpenCurlyDoubleQuote]quality \
attributes\[CloseCurlyDoubleQuote] of the product being developed, as well as \
the productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\\n\\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\\n\\nThe architect can deliberately shift the balance in favour \
of one of the priorities for a short time, but in the long term, to get the \
work done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\\n\\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "When it comes to developing a software architecture, we first imagine the \
classic technical operations: system breakdown into modules, defining \
interfaces, allocating responsibilities, applying templates, and optimizing \
performance.In addition, the architect must take into account a number of \
other aspects, including safety, ease of use, easy maintenance, output \
management, choice of deployment settings, etc.However, all of these \
technical and procedural aspects must be relevant to the needs of the \
stakeholders.Taking these interests into account in the analysis of \
requirements is a great way to ensure that the requirements specifications \
for the product being developed are complete.\n\nAll parties involved in the \
project have interests affecting both the software development process \
adopted in the organization and the organization as a whole. It is the \
analysis of these interests that forms the resulting set of priorities for \
the architect. It can be said that the creation of architecture is the \
process of balancing priorities in the short-term and long-term perspectives \
within the existing context.\n\nTake, for example, the engineering department \
of a software development service provider.Most likely, this organization has \
certain priorities: compliance with contractual obligations, earning \
revenue,ining a good reputation among customers, reducing costs and creating \
valuable technical assets.These business priorities are transformed into the \
department\[CloseCurlyQuote]s priorities: to ensure the functionality, \
correctness and \[OpenCurlyDoubleQuote]quality attributes\
\[CloseCurlyDoubleQuote] of the product being developed, as well as the \
productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\n\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\n\nThe architect can deliberately shift the balance in favour of \
one of the priorities for a short time, but in the long term, to get the work \
done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\n\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488840501044*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"8237017a-1b5d-4723-9bb3-1ef669d35de1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"When it comes to developing a software \
architecture, we first imagine the classic technical operations: system \
breakdown into modules, defining interfaces, allocating responsibilities, \
applying templates, and optimizing performance.In addition, the architect \
must take into account a number of other aspects, including safety, ease of \
use, easy maintenance, output management, choice of deployment settings, \
etc.However, all of these technical and procedural aspects must be relevant \
to the needs of the stakeholders.Taking these interests into account in the \
analysis of requirements is a great way to ensure that the requirements \
specifications for the product being developed are complete.\\n\\nAll parties \
involved in the project have interests affecting both the software \
development process adopted in the organization and the organization as a \
whole. It is the analysis of these interests that forms the resulting set of \
priorities for the architect. It can be said that the creation of \
architecture is the process of balancing priorities in the short-term and \
long-term perspectives within the existing context.\\n\\nTake, for example, \
the engineering department of a software development service provider.Most \
likely, this organization has certain priorities: compliance with contractual \
obligations, earning revenue,ining a good reputation among customers, \
reducing costs and creating valuable technical assets.These business \
priorities are transformed into the department\[CloseCurlyQuote]s priorities: \
to ensure the functionality, correctness and \[OpenCurlyDoubleQuote]quality \
attributes\[CloseCurlyDoubleQuote] of the product being developed, as well as \
the productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\\n\\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\\n\\nThe architect can deliberately shift the balance in favour \
of one of the priorities for a short time, but in the long term, to get the \
work done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\\n\\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders.\"\>"}],
  SequenceForm[
  "newText: ", 
   "When it comes to developing a software architecture, we first imagine the \
classic technical operations: system breakdown into modules, defining \
interfaces, allocating responsibilities, applying templates, and optimizing \
performance.In addition, the architect must take into account a number of \
other aspects, including safety, ease of use, easy maintenance, output \
management, choice of deployment settings, etc.However, all of these \
technical and procedural aspects must be relevant to the needs of the \
stakeholders.Taking these interests into account in the analysis of \
requirements is a great way to ensure that the requirements specifications \
for the product being developed are complete.\n\nAll parties involved in the \
project have interests affecting both the software development process \
adopted in the organization and the organization as a whole. It is the \
analysis of these interests that forms the resulting set of priorities for \
the architect. It can be said that the creation of architecture is the \
process of balancing priorities in the short-term and long-term perspectives \
within the existing context.\n\nTake, for example, the engineering department \
of a software development service provider.Most likely, this organization has \
certain priorities: compliance with contractual obligations, earning \
revenue,ining a good reputation among customers, reducing costs and creating \
valuable technical assets.These business priorities are transformed into the \
department\[CloseCurlyQuote]s priorities: to ensure the functionality, \
correctness and \[OpenCurlyDoubleQuote]quality attributes\
\[CloseCurlyDoubleQuote] of the product being developed, as well as the \
productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\n\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\n\nThe architect can deliberately shift the balance in favour of \
one of the priorities for a short time, but in the long term, to get the work \
done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\n\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488840662897*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9e02daa4-e714-4c7a-a907-9e064222e326"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Creating architecture as the art \
of balance'\\ndate = 2024-08-12T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"product\\\", \\\"software\\\", \\\"priorities\\\", \
\\\"organization\\\", \
\\\"requirements\\\"]\\ncover_image='/images/cover/knoxwelle__2021-09-\
28T051054.000Z.jpg'\\n+++\\nWhen it comes to developing a software \
architecture, we first imagine the classic technical operations: system \
breakdown into modules, defining interfaces, allocating responsibilities, \
applying templates, and optimizing performance.In addition, the architect \
must take into account a number of other aspects, including safety, ease of \
use, easy maintenance, output management, choice of deployment settings, \
etc.However, all of these technical and procedural aspects must be relevant \
to the needs of the stakeholders.Taking these interests into account in the \
analysis of requirements is a great way to ensure that the requirements \
specifications for the product being developed are complete.\\n\\nAll parties \
involved in the project have interests affecting both the software \
development process adopted in the organization and the organization as a \
whole. It is the analysis of these interests that forms the resulting set of \
priorities for the architect. It can be said that the creation of \
architecture is the process of balancing priorities in the short-term and \
long-term perspectives within the existing context.\\n\\nTake, for example, \
the engineering department of a software development service provider.Most \
likely, this organization has certain priorities: compliance with contractual \
obligations, earning revenue,ining a good reputation among customers, \
reducing costs and creating valuable technical assets.These business \
priorities are transformed into the department\[CloseCurlyQuote]s priorities: \
to ensure the functionality, correctness and \[OpenCurlyDoubleQuote]quality \
attributes\[CloseCurlyDoubleQuote] of the product being developed, as well as \
the productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\\n\\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\\n\\nThe architect can deliberately shift the balance in favour \
of one of the priorities for a short time, but in the long term, to get the \
work done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\\n\\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Creating architecture as the art of balance'\ndate = \
2024-08-12T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"product\", \"software\", \"priorities\", \"organization\", \
\"requirements\"]\n\
cover_image='/images/cover/knoxwelle__2021-09-28T051054.000Z.jpg'\n+++\nWhen \
it comes to developing a software architecture, we first imagine the classic \
technical operations: system breakdown into modules, defining interfaces, \
allocating responsibilities, applying templates, and optimizing \
performance.In addition, the architect must take into account a number of \
other aspects, including safety, ease of use, easy maintenance, output \
management, choice of deployment settings, etc.However, all of these \
technical and procedural aspects must be relevant to the needs of the \
stakeholders.Taking these interests into account in the analysis of \
requirements is a great way to ensure that the requirements specifications \
for the product being developed are complete.\n\nAll parties involved in the \
project have interests affecting both the software development process \
adopted in the organization and the organization as a whole. It is the \
analysis of these interests that forms the resulting set of priorities for \
the architect. It can be said that the creation of architecture is the \
process of balancing priorities in the short-term and long-term perspectives \
within the existing context.\n\nTake, for example, the engineering department \
of a software development service provider.Most likely, this organization has \
certain priorities: compliance with contractual obligations, earning \
revenue,ining a good reputation among customers, reducing costs and creating \
valuable technical assets.These business priorities are transformed into the \
department\[CloseCurlyQuote]s priorities: to ensure the functionality, \
correctness and \[OpenCurlyDoubleQuote]quality attributes\
\[CloseCurlyDoubleQuote] of the product being developed, as well as the \
productivity of the development team, the sustainability of the design \
process, the ability to audit it, the adaptability and durability of software \
products.\n\nThe work of an architect is not simply to create a functional, \
high-quality software product for users, but to do so with respect to the \
interests of other parties \[Dash] the management of the company (cost \
reduction), the staff serving the product (ease of administration), future \
members of the team of programmers (easy study and support), and taking into \
account the experience accumulated by the professional community of \
architects.\n\nThe architect can deliberately shift the balance in favour of \
one of the priorities for a short time, but in the long term, to get the work \
done really well, you should avoid any distortions.At the same time, the \
balancesined should correspond to the existing context, taking into account \
factors such as the projected lifecycle of the software product, the \
criticality of the product for the organization, and the technical and \
financial culture of the company.\n\nIn short, the creation of a software \
product architecture is not limited to technical aspects; it is also \
necessary to find the right balance between the technical requirements and \
the business requirements of all stakeholders."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488840680902*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"39ed008c-e9f1-4956-8bbf-43ad7d29d009"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "7", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Database as Fort.md\"\>"}],
  SequenceForm[
  7, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Database as Fort.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488840697421*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f8ba7741-f96a-4aed-a44a-16b946dc8249"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"In the database datax is stored all information \
\[Dash] both entered by employees and received from customers. User \
interfaces, business logic, and applied logic (and even employees) come and \
go, and data stays.It is difficult to describe in words how important it is \
to build a reliable data model in the early days of the project.\\n\\nThe \
enormous popularity of flexible design methodologies has led many to think \
that applications can (and even preferably!) be designed in the course of \
work.The era of pre-writing complex, exhaustive technical specifications is \
gone forever! The new school calls for the product to be delivered early and \
frequently.One line of exploitable code is better than 10 lines in your \
head.Sounds too good to be true... at least as far as data is \
concerned.\\n\\nWhile business logic and user interfaces evolve quite \
rapidly, data structures and their relationships are usually not.Therefore, \
it is very important to define the data model clearly from the outset, both \
at the structural and analytical levels.Data migration from one circuit to \
another \\\"on-site\\\" is at best difficult, always time-consuming and often \
full of errors.If application-level errors can still be tolerated for some \
time, errors in the database can lead to catastrophic consequences. Even if \
you have found and fixed a data-level design error, it will not restore the \
corrupted information.\\n\\nA reliable data model is a model that guarantees \
the security of today\[CloseCurlyQuote]s data and can be extended to tomorrow\
\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability to errors \
that, no matter how hard you try, penetrate the ever-changing application \
level;ining reference data integrity; setting subject area limits wherever \
they are known; choosing appropriate keys to help ensure reference integrity \
and compliance.Ensuring scalability means properly normalizing the data so \
that the data model can be easily supplemented with new architectural levels \
without resorting to all kinds of loopholes and bypass paths.\\n\\nThe \
database is the last guard to protect your valuable data.The applied level, \
which is ephemeral in nature, cannot monitor itself.In order for the database \
to provide the necessary protection, the data model must be designed to \
reject inappropriate data and prevent the creation of meaningless \
relationships.The keys, external key relationships and subject area \
limitations described in the scheme are concise, understandable, easily \
verified and ultimately self-documented.The subject area rules encoded in the \
data model are also physical, long-term; they are not lost by changes in the \
application's logic.\\n\\nTo get the most out of a relational database, that \
is, to make it a full part of an application, not just an application data \
repository, you need to have a good understanding of what you are creating \
from the start.As your product develops, the data level will improve as well, \
but at every development stage it must retain its Fortress status.And then \
you can trust him and confidently assume responsibility for intercepting \
errors from other levels of the application \[Dash] and he will not \
disappoint you.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "In the database datax is stored all information \[Dash] both entered by \
employees and received from customers. User interfaces, business logic, and \
applied logic (and even employees) come and go, and data stays.It is \
difficult to describe in words how important it is to build a reliable data \
model in the early days of the project.\n\nThe enormous popularity of \
flexible design methodologies has led many to think that applications can \
(and even preferably!) be designed in the course of work.The era of \
pre-writing complex, exhaustive technical specifications is gone forever! The \
new school calls for the product to be delivered early and frequently.One \
line of exploitable code is better than 10 lines in your head.Sounds too good \
to be true... at least as far as data is concerned.\n\nWhile business logic \
and user interfaces evolve quite rapidly, data structures and their \
relationships are usually not.Therefore, it is very important to define the \
data model clearly from the outset, both at the structural and analytical \
levels.Data migration from one circuit to another \"on-site\" is at best \
difficult, always time-consuming and often full of errors.If \
application-level errors can still be tolerated for some time, errors in the \
database can lead to catastrophic consequences. Even if you have found and \
fixed a data-level design error, it will not restore the corrupted \
information.\n\nA reliable data model is a model that guarantees the security \
of today\[CloseCurlyQuote]s data and can be extended to tomorrow\
\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability to errors \
that, no matter how hard you try, penetrate the ever-changing application \
level;ining reference data integrity; setting subject area limits wherever \
they are known; choosing appropriate keys to help ensure reference integrity \
and compliance.Ensuring scalability means properly normalizing the data so \
that the data model can be easily supplemented with new architectural levels \
without resorting to all kinds of loopholes and bypass paths.\n\nThe database \
is the last guard to protect your valuable data.The applied level, which is \
ephemeral in nature, cannot monitor itself.In order for the database to \
provide the necessary protection, the data model must be designed to reject \
inappropriate data and prevent the creation of meaningless relationships.The \
keys, external key relationships and subject area limitations described in \
the scheme are concise, understandable, easily verified and ultimately \
self-documented.The subject area rules encoded in the data model are also \
physical, long-term; they are not lost by changes in the application's logic.\
\n\nTo get the most out of a relational database, that is, to make it a full \
part of an application, not just an application data repository, you need to \
have a good understanding of what you are creating from the start.As your \
product develops, the data level will improve as well, but at every \
development stage it must retain its Fortress status.And then you can trust \
him and confidently assume responsibility for intercepting errors from other \
levels of the application \[Dash] and he will not disappoint you."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324888504536963`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7e1e36e9-ed67-4934-b1e2-709cad920048"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"In the database datax is stored all information\
\[LongDash]both entered by employees and received from customers. User \
interfaces, business logic, and applied logic (and even employees) come and \
go, and data stays.It is difficult to describe in words how important it is \
to build a reliable data model in the early days of the project.\\n\\nThe \
enormous popularity of flexible design methodologies has led many to think \
that applications can (and even preferably!) be designed in the course of \
work.The era of pre-writing complex, exhaustive technical specifications is \
gone forever! The new school calls for the product to be delivered early and \
frequently.One line of exploitable code is better than 10 lines in your \
head.Sounds too good to be true... at least as far as data is \
concerned.\\n\\nWhile business logic and user interfaces evolve quite \
rapidly, data structures and their relationships are usually not. Therefore, \
it is very important to define the data model clearly from the outset, both \
at the structural and analytical levels.Data migration from one circuit to \
another \\\"on-site\\\" is at best difficult, always time-consuming, and \
often full of errors. If application-level errors can still be tolerated for \
some time, errors in the database can lead to catastrophic consequences. Even \
if you have found and fixed a data-level design error, it will not restore \
the corrupted information.\\n\\nA reliable data model is a model that \
guarantees the security of today\[CloseCurlyQuote]s data and can be extended \
to tomorrow\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability \
to errors that, no matter how hard you try, penetrate the ever-changing \
application level; maintaining reference data integrity; setting subject area \
limits wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\\n\\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\\n\\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "In the database datax is stored all information\[LongDash]both entered by \
employees and received from customers. User interfaces, business logic, and \
applied logic (and even employees) come and go, and data stays.It is \
difficult to describe in words how important it is to build a reliable data \
model in the early days of the project.\n\nThe enormous popularity of \
flexible design methodologies has led many to think that applications can \
(and even preferably!) be designed in the course of work.The era of \
pre-writing complex, exhaustive technical specifications is gone forever! The \
new school calls for the product to be delivered early and frequently.One \
line of exploitable code is better than 10 lines in your head.Sounds too good \
to be true... at least as far as data is concerned.\n\nWhile business logic \
and user interfaces evolve quite rapidly, data structures and their \
relationships are usually not. Therefore, it is very important to define the \
data model clearly from the outset, both at the structural and analytical \
levels.Data migration from one circuit to another \"on-site\" is at best \
difficult, always time-consuming, and often full of errors. If \
application-level errors can still be tolerated for some time, errors in the \
database can lead to catastrophic consequences. Even if you have found and \
fixed a data-level design error, it will not restore the corrupted \
information.\n\nA reliable data model is a model that guarantees the security \
of today\[CloseCurlyQuote]s data and can be extended to tomorrow\
\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability to errors \
that, no matter how hard you try, penetrate the ever-changing application \
level; maintaining reference data integrity; setting subject area limits \
wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\n\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\n\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324889908930836`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c8693107-3852-48cb-badc-c032e3d59409"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"In the database datax is stored all information\
\[LongDash]both entered by employees and received from customers. User \
interfaces, business logic, and applied logic (and even employees) come and \
go, and data stays.It is difficult to describe in words how important it is \
to build a reliable data model in the early days of the project.\\n\\nThe \
enormous popularity of flexible design methodologies has led many to think \
that applications can (and even preferably!) be designed in the course of \
work.The era of pre-writing complex, exhaustive technical specifications is \
gone forever! The new school calls for the product to be delivered early and \
frequently.One line of exploitable code is better than 10 lines in your \
head.Sounds too good to be true... at least as far as data is \
concerned.\\n\\nWhile business logic and user interfaces evolve quite \
rapidly, data structures and their relationships are usually not. Therefore, \
it is very important to define the data model clearly from the outset, both \
at the structural and analytical levels.Data migration from one circuit to \
another \\\"on-site\\\" is at best difficult, always time-consuming, and \
often full of errors. If application-level errors can still be tolerated for \
some time, errors in the database can lead to catastrophic consequences. Even \
if you have found and fixed a data-level design error, it will not restore \
the corrupted information.\\n\\nA reliable data model is a model that \
guarantees the security of today\[CloseCurlyQuote]s data and can be extended \
to tomorrow\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability \
to errors that, no matter how hard you try, penetrate the ever-changing \
application level; maintaining reference data integrity; setting subject area \
limits wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\\n\\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\\n\\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you.\"\>"}],
  SequenceForm[
  "newText: ", 
   "In the database datax is stored all information\[LongDash]both entered by \
employees and received from customers. User interfaces, business logic, and \
applied logic (and even employees) come and go, and data stays.It is \
difficult to describe in words how important it is to build a reliable data \
model in the early days of the project.\n\nThe enormous popularity of \
flexible design methodologies has led many to think that applications can \
(and even preferably!) be designed in the course of work.The era of \
pre-writing complex, exhaustive technical specifications is gone forever! The \
new school calls for the product to be delivered early and frequently.One \
line of exploitable code is better than 10 lines in your head.Sounds too good \
to be true... at least as far as data is concerned.\n\nWhile business logic \
and user interfaces evolve quite rapidly, data structures and their \
relationships are usually not. Therefore, it is very important to define the \
data model clearly from the outset, both at the structural and analytical \
levels.Data migration from one circuit to another \"on-site\" is at best \
difficult, always time-consuming, and often full of errors. If \
application-level errors can still be tolerated for some time, errors in the \
database can lead to catastrophic consequences. Even if you have found and \
fixed a data-level design error, it will not restore the corrupted \
information.\n\nA reliable data model is a model that guarantees the security \
of today\[CloseCurlyQuote]s data and can be extended to tomorrow\
\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability to errors \
that, no matter how hard you try, penetrate the ever-changing application \
level; maintaining reference data integrity; setting subject area limits \
wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\n\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\n\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488991033346*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"577de3b7-fa6e-44fc-af44-a5a98a90f57c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Database as Fort'\\ndate = \
2024-05-17T00:00:00-07:00\\ndraft = false\\ncategories = \
[\\\"fortress\\\"]\\ntags = [\\\"fortress\\\", \\\"data\\\", \\\"model\\\", \
\\\"database\\\", \\\"application\\\", \
\\\"errors\\\"]\\ncover_image='/images/cover/knoxwelle__2020-09-12T155704.\
000Z.jpg'\\n+++\\nIn the database datax is stored all \
information\[LongDash]both entered by employees and received from customers. \
User interfaces, business logic, and applied logic (and even employees) come \
and go, and data stays.It is difficult to describe in words how important it \
is to build a reliable data model in the early days of the project.\\n\\nThe \
enormous popularity of flexible design methodologies has led many to think \
that applications can (and even preferably!) be designed in the course of \
work.The era of pre-writing complex, exhaustive technical specifications is \
gone forever! The new school calls for the product to be delivered early and \
frequently.One line of exploitable code is better than 10 lines in your \
head.Sounds too good to be true... at least as far as data is \
concerned.\\n\\nWhile business logic and user interfaces evolve quite \
rapidly, data structures and their relationships are usually not. Therefore, \
it is very important to define the data model clearly from the outset, both \
at the structural and analytical levels.Data migration from one circuit to \
another \\\"on-site\\\" is at best difficult, always time-consuming, and \
often full of errors. If application-level errors can still be tolerated for \
some time, errors in the database can lead to catastrophic consequences. Even \
if you have found and fixed a data-level design error, it will not restore \
the corrupted information.\\n\\nA reliable data model is a model that \
guarantees the security of today\[CloseCurlyQuote]s data and can be extended \
to tomorrow\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability \
to errors that, no matter how hard you try, penetrate the ever-changing \
application level; maintaining reference data integrity; setting subject area \
limits wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\\n\\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\\n\\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Database as Fort'\ndate = 2024-05-17T00:00:00-07:00\ndraft \
= false\ncategories = [\"fortress\"]\ntags = [\"fortress\", \"data\", \"model\
\", \"database\", \"application\", \"errors\"]\n\
cover_image='/images/cover/knoxwelle__2020-09-12T155704.000Z.jpg'\n+++\nIn \
the database datax is stored all information\[LongDash]both entered by \
employees and received from customers. User interfaces, business logic, and \
applied logic (and even employees) come and go, and data stays.It is \
difficult to describe in words how important it is to build a reliable data \
model in the early days of the project.\n\nThe enormous popularity of \
flexible design methodologies has led many to think that applications can \
(and even preferably!) be designed in the course of work.The era of \
pre-writing complex, exhaustive technical specifications is gone forever! The \
new school calls for the product to be delivered early and frequently.One \
line of exploitable code is better than 10 lines in your head.Sounds too good \
to be true... at least as far as data is concerned.\n\nWhile business logic \
and user interfaces evolve quite rapidly, data structures and their \
relationships are usually not. Therefore, it is very important to define the \
data model clearly from the outset, both at the structural and analytical \
levels.Data migration from one circuit to another \"on-site\" is at best \
difficult, always time-consuming, and often full of errors. If \
application-level errors can still be tolerated for some time, errors in the \
database can lead to catastrophic consequences. Even if you have found and \
fixed a data-level design error, it will not restore the corrupted \
information.\n\nA reliable data model is a model that guarantees the security \
of today\[CloseCurlyQuote]s data and can be extended to tomorrow\
\[CloseCurlyQuote]s.Ensuring security means ensuring vulnerability to errors \
that, no matter how hard you try, penetrate the ever-changing application \
level; maintaining reference data integrity; setting subject area limits \
wherever they are known; and choosing appropriate keys to help ensure \
reference integrity and compliance. Ensuring scalability means properly \
normalizing the data so that the data model can be easily supplemented with \
new architectural levels without resorting to all kinds of loopholes and \
bypass paths.\n\nThe database is the last guard to protect your valuable \
data. The applied level, which is ephemeral in nature, cannot monitor itself. \
In order for the database to provide the necessary protection, the data model \
must be designed to reject inappropriate data and prevent the creation of \
meaningless relationships.The keys, external key relationships, and subject \
area limitations described in the scheme are concise, understandable, easily \
verified, and ultimately self-documented. The subject area rules encoded in \
the data model are also physical, long-term; they are not lost by changes in \
the application's logic.\n\nTo get the most out of a relational database, \
that is, to make it a full part of an application, not just an application \
data repository, you need to have a good understanding of what you are \
creating from the start.As your product develops, the data level will improve \
as well, but at every development stage it must retain its Fortress \
status.And then you can trust him and confidently assume responsibility for \
intercepting errors from other levels of the application\[LongDash]and he \
will not disappoint you."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932488991056359*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e04ea656-b006-4a55-b407-1a0139097061"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "8", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\DevOps, SRE.md\"\>"}],
  SequenceForm[
  8, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\DevOps, SRE.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324889910734563`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b885f35e-bfa2-4f76-a439-8a7e83ca8f0d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we are talking about DevOps and \
SRE in enterprise companies and their recruitment processes.\\n\\n## \
DevOps/SRE\\n\\nI was unemployed and full of time, so I decided to interview \
DevOps. In vain that the course on Linux was held on Udemy (a joke, sarcasm, \
still passed, but to write about it is embarrassing)?! And then I liked the \
process much more. It consisted of only two steps: general knowledge and \
troubleshooting.\\n\\nIn general, the interviewer had a list of questions, \
but he allowed himself to deviate a little from it, which gave some \
liveliness to the conversation. We've had time to discuss Linux loading, \
networking, container operation, and databases. In general, what happens in \
the universe one way or another? Maybe not so profoundly, but some \
baccalaureate could have answered them. In the end, the interlocutor learned \
something new, and I wrote out a couple of items to \
read.\\n\\nTroubleshooting was a role-playing game. There is a system, and \
users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system, which was being produced at the time of the \
incident.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we are talking about DevOps and SRE in enterprise \
companies and their recruitment processes.\n\n## DevOps/SRE\n\nI was \
unemployed and full of time, so I decided to interview DevOps. In vain that \
the course on Linux was held on Udemy (a joke, sarcasm, still passed, but to \
write about it is embarrassing)?! And then I liked the process much more. It \
consisted of only two steps: general knowledge and troubleshooting.\n\nIn \
general, the interviewer had a list of questions, but he allowed himself to \
deviate a little from it, which gave some liveliness to the conversation. \
We've had time to discuss Linux loading, networking, container operation, and \
databases. In general, what happens in the universe one way or another? Maybe \
not so profoundly, but some baccalaureate could have answered them. In the \
end, the interlocutor learned something new, and I wrote out a couple of \
items to read.\n\nTroubleshooting was a role-playing game. There is a system, \
and users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system, which was being produced at the time of the \
incident."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489000871853*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3e37d546-d1ae-445e-a6dc-057f80023e04"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we are talking about DevOps and \
SRE in enterprise companies and their recruitment processes.\\n\\n## \
DevOps/SRE\\n\\nI was unemployed and full of time, so I decided to interview \
DevOps. In vain that the course on Linux was held on Udemy (a joke, sarcasm, \
still passed, but to write about it is embarrassing)?! And then I liked the \
process much more. It consisted of only two steps: general knowledge and \
troubleshooting.\\n\\nIn general, the interviewer had a list of questions, \
but he allowed himself to deviate a little from it, which gave some \
liveliness to the conversation. We've had time to discuss Linux loading, \
networking, container operation, and databases. In general, what happens in \
the universe one way or another? Maybe not so profoundly, but some \
baccalaureate could have answered them. In the end, the interlocutor learned \
something new, and I wrote out a couple of items to \
read.\\n\\nTroubleshooting was a role-playing game. There is a system, and \
users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system that was being produced at the time of the \
incident.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we are talking about DevOps and SRE in enterprise \
companies and their recruitment processes.\n\n## DevOps/SRE\n\nI was \
unemployed and full of time, so I decided to interview DevOps. In vain that \
the course on Linux was held on Udemy (a joke, sarcasm, still passed, but to \
write about it is embarrassing)?! And then I liked the process much more. It \
consisted of only two steps: general knowledge and troubleshooting.\n\nIn \
general, the interviewer had a list of questions, but he allowed himself to \
deviate a little from it, which gave some liveliness to the conversation. \
We've had time to discuss Linux loading, networking, container operation, and \
databases. In general, what happens in the universe one way or another? Maybe \
not so profoundly, but some baccalaureate could have answered them. In the \
end, the interlocutor learned something new, and I wrote out a couple of \
items to read.\n\nTroubleshooting was a role-playing game. There is a system, \
and users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system that was being produced at the time of the \
incident."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324890781734066`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"857f43d0-821b-461d-8656-4c0f638a608b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we are talking about DevOps and \
SRE in enterprise companies and their recruitment processes.\\n\\n## \
DevOps/SRE\\n\\nI was unemployed and full of time, so I decided to interview \
DevOps. In vain that the course on Linux was held on Udemy (a joke, sarcasm, \
still passed, but to write about it is embarrassing)?! And then I liked the \
process much more. It consisted of only two steps: general knowledge and \
troubleshooting.\\n\\nIn general, the interviewer had a list of questions, \
but he allowed himself to deviate a little from it, which gave some \
liveliness to the conversation. We've had time to discuss Linux loading, \
networking, container operation, and databases. In general, what happens in \
the universe one way or another? Maybe not so profoundly, but some \
baccalaureate could have answered them. In the end, the interlocutor learned \
something new, and I wrote out a couple of items to \
read.\\n\\nTroubleshooting was a role-playing game. There is a system, and \
users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system that was being produced at the time of the \
incident.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we are talking about DevOps and SRE in enterprise \
companies and their recruitment processes.\n\n## DevOps/SRE\n\nI was \
unemployed and full of time, so I decided to interview DevOps. In vain that \
the course on Linux was held on Udemy (a joke, sarcasm, still passed, but to \
write about it is embarrassing)?! And then I liked the process much more. It \
consisted of only two steps: general knowledge and troubleshooting.\n\nIn \
general, the interviewer had a list of questions, but he allowed himself to \
deviate a little from it, which gave some liveliness to the conversation. \
We've had time to discuss Linux loading, networking, container operation, and \
databases. In general, what happens in the universe one way or another? Maybe \
not so profoundly, but some baccalaureate could have answered them. In the \
end, the interlocutor learned something new, and I wrote out a couple of \
items to read.\n\nTroubleshooting was a role-playing game. There is a system, \
and users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system that was being produced at the time of the \
incident."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324890783455863`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"8049b95b-3e5f-4d71-8889-dcf64d31eccf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'DevOps, SRE'\\ndate = \
2024-08-11T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"sre\\\"]\\ntags = [\\\"udemy\\\", \\\"time\\\", \\\"sre\\\", \\\"devops\\\
\", \\\"system\\\", \
\\\"linux\\\"]\\ncover_image='/images/cover/knoxwelle__2023-03-17T044736.000Z.\
jpg'\\n+++\\nI've been going to interviews again, and I'd like to share some \
observations. This time we are talking about DevOps and SRE in enterprise \
companies and their recruitment processes.\\n\\n## DevOps/SRE\\n\\nI was \
unemployed and full of time, so I decided to interview DevOps. In vain that \
the course on Linux was held on Udemy (a joke, sarcasm, still passed, but to \
write about it is embarrassing)?! And then I liked the process much more. It \
consisted of only two steps: general knowledge and troubleshooting.\\n\\nIn \
general, the interviewer had a list of questions, but he allowed himself to \
deviate a little from it, which gave some liveliness to the conversation. \
We've had time to discuss Linux loading, networking, container operation, and \
databases. In general, what happens in the universe one way or another? Maybe \
not so profoundly, but some baccalaureate could have answered them. In the \
end, the interlocutor learned something new, and I wrote out a couple of \
items to read.\\n\\nTroubleshooting was a role-playing game. There is a \
system, and users complain that the site does not load. You don't have \
notebooks or dashboards; you've only got a sensible jungle that can be \
commanded to do or see something. At least it was fun and as close as \
possible to real work. The problem isn't complicated, but it's only been an \
hour. And the scientific method here loses to empirical observations. The SRE \
must have some sense of what's going on in the system that was being produced \
at the time of the incident.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'DevOps, SRE'\ndate = 2024-08-11T00:00:00-07:00\ndraft = \
false\ncategories = [\"recruiting\", \"sre\"]\ntags = [\"udemy\", \"time\", \
\"sre\", \"devops\", \"system\", \"linux\"]\n\
cover_image='/images/cover/knoxwelle__2023-03-17T044736.000Z.jpg'\n+++\nI've \
been going to interviews again, and I'd like to share some observations. This \
time we are talking about DevOps and SRE in enterprise companies and their \
recruitment processes.\n\n## DevOps/SRE\n\nI was unemployed and full of time, \
so I decided to interview DevOps. In vain that the course on Linux was held \
on Udemy (a joke, sarcasm, still passed, but to write about it is \
embarrassing)?! And then I liked the process much more. It consisted of only \
two steps: general knowledge and troubleshooting.\n\nIn general, the \
interviewer had a list of questions, but he allowed himself to deviate a \
little from it, which gave some liveliness to the conversation. We've had \
time to discuss Linux loading, networking, container operation, and \
databases. In general, what happens in the universe one way or another? Maybe \
not so profoundly, but some baccalaureate could have answered them. In the \
end, the interlocutor learned something new, and I wrote out a couple of \
items to read.\n\nTroubleshooting was a role-playing game. There is a system, \
and users complain that the site does not load. You don't have notebooks or \
dashboards; you've only got a sensible jungle that can be commanded to do or \
see something. At least it was fun and as close as possible to real work. The \
problem isn't complicated, but it's only been an hour. And the scientific \
method here loses to empirical observations. The SRE must have some sense of \
what's going on in the system that was being produced at the time of the \
incident."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324890783612075`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"773f0286-4cec-4587-a94f-21bc658ac4b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "9", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Do it in a hurry and escape this crime.md\"\>"}],
  SequenceForm[
  9, ". ", "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\\
posts\\Do it in a hurry and escape this crime.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489078373209*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"41214fde-8344-480d-9a38-8173e0803788"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Time is approaching evening.The command is \
friendly about the new functionality scheduled for the current iteration; it \
seems that even the air in the room is pulsing at a working pace.However, \
John is a little in a hurry: he is waiting for a date.However, he has time to \
rewrite his part of the code, compiles it, registers in the source code \
management system \[Dash] and rushes away.A few minutes later, the \\\"red \
light\\\" is lit: the assembly of the app is disrupted.John didn't have time \
for automated tests, so he acted on the rush and run principle, causing the \
entire team to stall.\\n\\nThe situation has changed \[Dash] the working \
rhythm has failed. Now everyone knows that when you update the code from the \
version control system, the code will not work on their local computers, and \
because the team will have to integrate a lot of code to prepare for the \
upcoming demonstration, this becomes a serious obstacle.In fact, John has \
given the team a foothold \[Dash] integration will only be possible after \
someone spends their time cancelling its changes.\\n\\nSuch a situation \
occurs to the offender often. To do in a hurry and escape is a crime, because \
as a result, the normal course of work is disrupted.This is a sadly common \
way among developers to save some time for themselves, eventually wasting \
other people's time, which serves as a manifestation of direct disrespect for \
other people.And yet it's happening everywhere.Why?Usually because it takes \
too long to complete the system or conduct tests.\\n\\nThis is where you, the \
architect, enter the game. You work hard to create a flexible architecture, \
train developers in flexible development techniques (such as development \
through testing) and ensure that a server is available for continuous \
integration. In addition, you need to create a culture whose rules prohibit \
wasting someone else's working time in vain.This requires, among other \
things, the creation of a high-quality automated testing infrastructure, as \
it is capable of changing the behaviour of developers.If tests are performed \
quickly, developers will perform them more often, which is in itself a good \
thing, but they will not leave their colleagues with non-working code.If the \
tests are dependent on external systems or require database references, \
modify them so that they can be executed locally with dots (or at least with \
a database stored in memory) and let the tests run slowly on the compilation \
server.Don't make people wait for the computer to do its job, otherwise \
they'll start looking for traps, which will result in problems for everyone \
else.\\n\\nDo not waste time to ensure quick operation of the system.This \
increases the efficiency of work, eliminates reasons for employees to avoid \
work, and ultimately contributes to speeding up the development \
process.Create surrogates and simulators, eliminate dependencies, divide the \
system into smaller modules \[Dash] do anything so that your colleagues do \
not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and \
escape\[CloseCurlyDoubleQuote].\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Time is approaching evening.The command is friendly about the new \
functionality scheduled for the current iteration; it seems that even the air \
in the room is pulsing at a working pace.However, John is a little in a \
hurry: he is waiting for a date.However, he has time to rewrite his part of \
the code, compiles it, registers in the source code management system \[Dash] \
and rushes away.A few minutes later, the \"red light\" is lit: the assembly \
of the app is disrupted.John didn't have time for automated tests, so he \
acted on the rush and run principle, causing the entire team to stall.\n\nThe \
situation has changed \[Dash] the working rhythm has failed. Now everyone \
knows that when you update the code from the version control system, the code \
will not work on their local computers, and because the team will have to \
integrate a lot of code to prepare for the upcoming demonstration, this \
becomes a serious obstacle.In fact, John has given the team a foothold \
\[Dash] integration will only be possible after someone spends their time \
cancelling its changes.\n\nSuch a situation occurs to the offender often. To \
do in a hurry and escape is a crime, because as a result, the normal course \
of work is disrupted.This is a sadly common way among developers to save some \
time for themselves, eventually wasting other people's time, which serves as \
a manifestation of direct disrespect for other people.And yet it's happening \
everywhere.Why?Usually because it takes too long to complete the system or \
conduct tests.\n\nThis is where you, the architect, enter the game. You work \
hard to create a flexible architecture, train developers in flexible \
development techniques (such as development through testing) and ensure that \
a server is available for continuous integration. In addition, you need to \
create a culture whose rules prohibit wasting someone else's working time in \
vain.This requires, among other things, the creation of a high-quality \
automated testing infrastructure, as it is capable of changing the behaviour \
of developers.If tests are performed quickly, developers will perform them \
more often, which is in itself a good thing, but they will not leave their \
colleagues with non-working code.If the tests are dependent on external \
systems or require database references, modify them so that they can be \
executed locally with dots (or at least with a database stored in memory) and \
let the tests run slowly on the compilation server.Don't make people wait for \
the computer to do its job, otherwise they'll start looking for traps, which \
will result in problems for everyone else.\n\nDo not waste time to ensure \
quick operation of the system.This increases the efficiency of work, \
eliminates reasons for employees to avoid work, and ultimately contributes to \
speeding up the development process.Create surrogates and simulators, \
eliminate dependencies, divide the system into smaller modules \[Dash] do \
anything so that your colleagues do not have even a shadow of temptation to \
follow the principle of \[OpenCurlyDoubleQuote]do in a hurry and escape\
\[CloseCurlyDoubleQuote]."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324890885524426`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3678c9cf-743d-4f04-9215-4036ebfebb6c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The time is approaching evening. The command is \
friendly about the new functionality scheduled for the current iteration; it \
seems that even the air in the room is pulsing at a working pace.However, \
John is a little in a hurry; he is waiting for a date. However, he has time \
to rewrite his part of the code, compile it, register it in the source code \
management system, and rush away. A few minutes later, the \\\"red light\\\" \
is lit: the assembly of the app is disrupted.John didn't have time for \
automated tests, so he acted on the rush-and-run principle, causing the \
entire team to stall.\\n\\nThe situation has changed; the working rhythm has \
failed. Now everyone knows that when you update the code from the version \
control system, the code will not work on their local computers, and because \
the team will have to integrate a lot of code to prepare for the upcoming \
demonstration, this becomes a serious obstacle.In fact, John has given the \
team a foothold; integration will only be possible after someone spends their \
time canceling its changes.\\n\\nSuch a situation occurs to the offender \
often. To do something in a hurry and escape is a crime because, as a result, \
the normal course of work is disrupted. This is a sadly common way among \
developers to save some time for themselves, eventually wasting other \
people's time, which serves as a manifestation of direct disrespect for other \
people.And yet, it's happening everywhere. Why? Usually, it takes too long to \
complete the system or conduct tests.\\n\\nThis is where you, the architect, \
enter the game. You work hard to create a flexible architecture, train \
developers in flexible development techniques (such as development through \
testing), and ensure that a server is available for continuous integration. \
In addition, you need to create a culture whose rules prohibit wasting \
someone else's working time in vain. This requires, among other things, the \
creation of a high-quality automated testing infrastructure, as it is capable \
of changing the behavior of developers. If tests are performed quickly, \
developers will perform them more often, which is in itself a good thing, but \
they will not leave their colleagues with non-working code.If the tests are \
dependent on external systems or require database references, modify them so \
that they can be executed locally with dots (or at least with a database \
stored in memory) and let the tests run slowly on the compilation \
server.Don't make people wait for the computer to do its job; otherwise, \
they'll start looking for traps, which will result in problems for everyone \
else.\\n\\nDo not waste time to ensure quick operation of the system.This \
increases the efficiency of work, eliminates reasons for employees to avoid \
work, and ultimately contributes to speeding up the development \
process.Create surrogates and simulators, eliminate dependencies, divide the \
system into smaller modules\[LongDash]do anything so that your colleagues do \
not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and \
escape.\[CloseCurlyDoubleQuote].\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The time is approaching evening. The command is friendly about the new \
functionality scheduled for the current iteration; it seems that even the air \
in the room is pulsing at a working pace.However, John is a little in a \
hurry; he is waiting for a date. However, he has time to rewrite his part of \
the code, compile it, register it in the source code management system, and \
rush away. A few minutes later, the \"red light\" is lit: the assembly of the \
app is disrupted.John didn't have time for automated tests, so he acted on \
the rush-and-run principle, causing the entire team to stall.\n\nThe \
situation has changed; the working rhythm has failed. Now everyone knows that \
when you update the code from the version control system, the code will not \
work on their local computers, and because the team will have to integrate a \
lot of code to prepare for the upcoming demonstration, this becomes a serious \
obstacle.In fact, John has given the team a foothold; integration will only \
be possible after someone spends their time canceling its changes.\n\nSuch a \
situation occurs to the offender often. To do something in a hurry and escape \
is a crime because, as a result, the normal course of work is disrupted. This \
is a sadly common way among developers to save some time for themselves, \
eventually wasting other people's time, which serves as a manifestation of \
direct disrespect for other people.And yet, it's happening everywhere. Why? \
Usually, it takes too long to complete the system or conduct tests.\n\nThis \
is where you, the architect, enter the game. You work hard to create a \
flexible architecture, train developers in flexible development techniques \
(such as development through testing), and ensure that a server is available \
for continuous integration. In addition, you need to create a culture whose \
rules prohibit wasting someone else's working time in vain. This requires, \
among other things, the creation of a high-quality automated testing \
infrastructure, as it is capable of changing the behavior of developers. If \
tests are performed quickly, developers will perform them more often, which \
is in itself a good thing, but they will not leave their colleagues with \
non-working code.If the tests are dependent on external systems or require \
database references, modify them so that they can be executed locally with \
dots (or at least with a database stored in memory) and let the tests run \
slowly on the compilation server.Don't make people wait for the computer to \
do its job; otherwise, they'll start looking for traps, which will result in \
problems for everyone else.\n\nDo not waste time to ensure quick operation of \
the system.This increases the efficiency of work, eliminates reasons for \
employees to avoid work, and ultimately contributes to speeding up the \
development process.Create surrogates and simulators, eliminate dependencies, \
divide the system into smaller modules\[LongDash]do anything so that your \
colleagues do not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and escape.\[CloseCurlyDoubleQuote]."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489204101555*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"bb08c420-97ba-4e6b-a305-96fc5c05c28b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The time is approaching evening. The command is \
friendly about the new functionality scheduled for the current iteration; it \
seems that even the air in the room is pulsing at a working pace.However, \
John is a little in a hurry; he is waiting for a date. However, he has time \
to rewrite his part of the code, compile it, register it in the source code \
management system, and rush away. A few minutes later, the \\\"red light\\\" \
is lit: the assembly of the app is disrupted.John didn't have time for \
automated tests, so he acted on the rush-and-run principle, causing the \
entire team to stall.\\n\\nThe situation has changed; the working rhythm has \
failed. Now everyone knows that when you update the code from the version \
control system, the code will not work on their local computers, and because \
the team will have to integrate a lot of code to prepare for the upcoming \
demonstration, this becomes a serious obstacle.In fact, John has given the \
team a foothold; integration will only be possible after someone spends their \
time canceling its changes.\\n\\nSuch a situation occurs to the offender \
often. To do something in a hurry and escape is a crime because, as a result, \
the normal course of work is disrupted. This is a sadly common way among \
developers to save some time for themselves, eventually wasting other \
people's time, which serves as a manifestation of direct disrespect for other \
people.And yet, it's happening everywhere. Why? Usually, it takes too long to \
complete the system or conduct tests.\\n\\nThis is where you, the architect, \
enter the game. You work hard to create a flexible architecture, train \
developers in flexible development techniques (such as development through \
testing), and ensure that a server is available for continuous integration. \
In addition, you need to create a culture whose rules prohibit wasting \
someone else's working time in vain. This requires, among other things, the \
creation of a high-quality automated testing infrastructure, as it is capable \
of changing the behavior of developers. If tests are performed quickly, \
developers will perform them more often, which is in itself a good thing, but \
they will not leave their colleagues with non-working code.If the tests are \
dependent on external systems or require database references, modify them so \
that they can be executed locally with dots (or at least with a database \
stored in memory) and let the tests run slowly on the compilation \
server.Don't make people wait for the computer to do its job; otherwise, \
they'll start looking for traps, which will result in problems for everyone \
else.\\n\\nDo not waste time to ensure quick operation of the system.This \
increases the efficiency of work, eliminates reasons for employees to avoid \
work, and ultimately contributes to speeding up the development \
process.Create surrogates and simulators, eliminate dependencies, divide the \
system into smaller modules\[LongDash]do anything so that your colleagues do \
not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and \
escape.\[CloseCurlyDoubleQuote].\"\>"}],
  SequenceForm[
  "newText: ", 
   "The time is approaching evening. The command is friendly about the new \
functionality scheduled for the current iteration; it seems that even the air \
in the room is pulsing at a working pace.However, John is a little in a \
hurry; he is waiting for a date. However, he has time to rewrite his part of \
the code, compile it, register it in the source code management system, and \
rush away. A few minutes later, the \"red light\" is lit: the assembly of the \
app is disrupted.John didn't have time for automated tests, so he acted on \
the rush-and-run principle, causing the entire team to stall.\n\nThe \
situation has changed; the working rhythm has failed. Now everyone knows that \
when you update the code from the version control system, the code will not \
work on their local computers, and because the team will have to integrate a \
lot of code to prepare for the upcoming demonstration, this becomes a serious \
obstacle.In fact, John has given the team a foothold; integration will only \
be possible after someone spends their time canceling its changes.\n\nSuch a \
situation occurs to the offender often. To do something in a hurry and escape \
is a crime because, as a result, the normal course of work is disrupted. This \
is a sadly common way among developers to save some time for themselves, \
eventually wasting other people's time, which serves as a manifestation of \
direct disrespect for other people.And yet, it's happening everywhere. Why? \
Usually, it takes too long to complete the system or conduct tests.\n\nThis \
is where you, the architect, enter the game. You work hard to create a \
flexible architecture, train developers in flexible development techniques \
(such as development through testing), and ensure that a server is available \
for continuous integration. In addition, you need to create a culture whose \
rules prohibit wasting someone else's working time in vain. This requires, \
among other things, the creation of a high-quality automated testing \
infrastructure, as it is capable of changing the behavior of developers. If \
tests are performed quickly, developers will perform them more often, which \
is in itself a good thing, but they will not leave their colleagues with \
non-working code.If the tests are dependent on external systems or require \
database references, modify them so that they can be executed locally with \
dots (or at least with a database stored in memory) and let the tests run \
slowly on the compilation server.Don't make people wait for the computer to \
do its job; otherwise, they'll start looking for traps, which will result in \
problems for everyone else.\n\nDo not waste time to ensure quick operation of \
the system.This increases the efficiency of work, eliminates reasons for \
employees to avoid work, and ultimately contributes to speeding up the \
development process.Create surrogates and simulators, eliminate dependencies, \
divide the system into smaller modules\[LongDash]do anything so that your \
colleagues do not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and escape.\[CloseCurlyDoubleQuote]."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489204266028*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"caaa8f55-2579-4868-b4a7-5ba44a443106"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Do it in a hurry and escape this \
crime'\\ndate = 2024-08-11T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"time\\\", \\\"john\\\", \\\"work\\\", \\\"tests\\\", \
\\\"code\\\", \
\\\"system\\\"]\\ncover_image='/images/cover/knoxwelle__2017-06-18T220601.\
000Z.jpg'\\n+++\\nThe time is approaching evening. The command is friendly \
about the new functionality scheduled for the current iteration; it seems \
that even the air in the room is pulsing at a working pace.However, John is a \
little in a hurry; he is waiting for a date. However, he has time to rewrite \
his part of the code, compile it, register it in the source code management \
system, and rush away. A few minutes later, the \\\"red light\\\" is lit: the \
assembly of the app is disrupted.John didn't have time for automated tests, \
so he acted on the rush-and-run principle, causing the entire team to \
stall.\\n\\nThe situation has changed; the working rhythm has failed. Now \
everyone knows that when you update the code from the version control system, \
the code will not work on their local computers, and because the team will \
have to integrate a lot of code to prepare for the upcoming demonstration, \
this becomes a serious obstacle.In fact, John has given the team a foothold; \
integration will only be possible after someone spends their time canceling \
its changes.\\n\\nSuch a situation occurs to the offender often. To do \
something in a hurry and escape is a crime because, as a result, the normal \
course of work is disrupted. This is a sadly common way among developers to \
save some time for themselves, eventually wasting other people's time, which \
serves as a manifestation of direct disrespect for other people.And yet, it's \
happening everywhere. Why? Usually, it takes too long to complete the system \
or conduct tests.\\n\\nThis is where you, the architect, enter the game. You \
work hard to create a flexible architecture, train developers in flexible \
development techniques (such as development through testing), and ensure that \
a server is available for continuous integration. In addition, you need to \
create a culture whose rules prohibit wasting someone else's working time in \
vain. This requires, among other things, the creation of a high-quality \
automated testing infrastructure, as it is capable of changing the behavior \
of developers. If tests are performed quickly, developers will perform them \
more often, which is in itself a good thing, but they will not leave their \
colleagues with non-working code.If the tests are dependent on external \
systems or require database references, modify them so that they can be \
executed locally with dots (or at least with a database stored in memory) and \
let the tests run slowly on the compilation server.Don't make people wait for \
the computer to do its job; otherwise, they'll start looking for traps, which \
will result in problems for everyone else.\\n\\nDo not waste time to ensure \
quick operation of the system.This increases the efficiency of work, \
eliminates reasons for employees to avoid work, and ultimately contributes to \
speeding up the development process.Create surrogates and simulators, \
eliminate dependencies, divide the system into smaller modules\[LongDash]do \
anything so that your colleagues do not have even a shadow of temptation to \
follow the principle of \[OpenCurlyDoubleQuote]do in a hurry and escape.\
\[CloseCurlyDoubleQuote].\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Do it in a hurry and escape this crime'\ndate = \
2024-08-11T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"time\", \
\"john\", \"work\", \"tests\", \"code\", \"system\"]\n\
cover_image='/images/cover/knoxwelle__2017-06-18T220601.000Z.jpg'\n+++\nThe \
time is approaching evening. The command is friendly about the new \
functionality scheduled for the current iteration; it seems that even the air \
in the room is pulsing at a working pace.However, John is a little in a \
hurry; he is waiting for a date. However, he has time to rewrite his part of \
the code, compile it, register it in the source code management system, and \
rush away. A few minutes later, the \"red light\" is lit: the assembly of the \
app is disrupted.John didn't have time for automated tests, so he acted on \
the rush-and-run principle, causing the entire team to stall.\n\nThe \
situation has changed; the working rhythm has failed. Now everyone knows that \
when you update the code from the version control system, the code will not \
work on their local computers, and because the team will have to integrate a \
lot of code to prepare for the upcoming demonstration, this becomes a serious \
obstacle.In fact, John has given the team a foothold; integration will only \
be possible after someone spends their time canceling its changes.\n\nSuch a \
situation occurs to the offender often. To do something in a hurry and escape \
is a crime because, as a result, the normal course of work is disrupted. This \
is a sadly common way among developers to save some time for themselves, \
eventually wasting other people's time, which serves as a manifestation of \
direct disrespect for other people.And yet, it's happening everywhere. Why? \
Usually, it takes too long to complete the system or conduct tests.\n\nThis \
is where you, the architect, enter the game. You work hard to create a \
flexible architecture, train developers in flexible development techniques \
(such as development through testing), and ensure that a server is available \
for continuous integration. In addition, you need to create a culture whose \
rules prohibit wasting someone else's working time in vain. This requires, \
among other things, the creation of a high-quality automated testing \
infrastructure, as it is capable of changing the behavior of developers. If \
tests are performed quickly, developers will perform them more often, which \
is in itself a good thing, but they will not leave their colleagues with \
non-working code.If the tests are dependent on external systems or require \
database references, modify them so that they can be executed locally with \
dots (or at least with a database stored in memory) and let the tests run \
slowly on the compilation server.Don't make people wait for the computer to \
do its job; otherwise, they'll start looking for traps, which will result in \
problems for everyone else.\n\nDo not waste time to ensure quick operation of \
the system.This increases the efficiency of work, eliminates reasons for \
employees to avoid work, and ultimately contributes to speeding up the \
development process.Create surrogates and simulators, eliminate dependencies, \
divide the system into smaller modules\[LongDash]do anything so that your \
colleagues do not have even a shadow of temptation to follow the principle of \
\[OpenCurlyDoubleQuote]do in a hurry and escape.\[CloseCurlyDoubleQuote]."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489204288168*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"89e8e4da-844b-4b24-baaa-54f0450fc7f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "10", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Ensure continuous integration.md\"\>"}],
  SequenceForm[
  10, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Ensure continuous integration.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324892043077087`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"08a9b914-72af-4936-80d4-2331a3974960"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"The collection has long ceased to play the role \
of the \\\"Big Bang\\\" in the design of projects.Both architects (both at \
the application level and at the corporate level) should encourage the use of \
continuous integration methods and tools in each project.\\n\\nThe term \
continuous integration (CI, Continuous Integration) was first proposed by \
Martin Fowler as a design template. It means a set of methods and tools that \
ensure regular automatic assembly and testing of applications over short \
intervals of time (usually on an integration server specially designed to \
perform these operations).For any modern software project, the practice of \
continuous integration, combining modular testing methods and tools with \
automated assembly tools, becomes mandatory.\\n\\nContinuous integration \
affects an integral element of the software development process \[Dash] the \
point of converting the source code into a working application.At this point, \
the components of the project are combined and tested.You've probably heard \
of the \\\"Build early and often\\\" principle; it used to be used to reduce \
risks and avoid unpleasant surprises in the development process.Nowadays, \
\[OpenCurlyDoubleQuote]early and frequent assembly\[CloseCurlyDoubleQuote] \
has been replaced by continuous integration, which also includes assembling, \
but adds to it capabilities that improve interaction and coordination within \
the developer team.\\n\\nThe most well-known part of the practice of \
continuous integration is assembly, which is usually automated.The ability to \
build manually remains, but you can automatically start the build every night \
or when you make changes to the source code.When the compilation process \
starts, the latest version of the source code is extracted from the \
repository; the continuous integration tool tries to compile the project and \
then test it.The process ends with notifications describing the \
results.Notifications may be sent in various formats, including by e-mail or \
via instant messaging systems.\\n\\nContinuous integration makes the \
development process more stable and focused.You will like this as an \
architect, but more importantly, continuous integration will enhance the \
efficiency of your company and your development teams.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "The collection has long ceased to play the role of the \"Big Bang\" in \
the design of projects.Both architects (both at the application level and at \
the corporate level) should encourage the use of continuous integration \
methods and tools in each project.\n\nThe term continuous integration (CI, \
Continuous Integration) was first proposed by Martin Fowler as a design \
template. It means a set of methods and tools that ensure regular automatic \
assembly and testing of applications over short intervals of time (usually on \
an integration server specially designed to perform these operations).For any \
modern software project, the practice of continuous integration, combining \
modular testing methods and tools with automated assembly tools, becomes \
mandatory.\n\nContinuous integration affects an integral element of the \
software development process \[Dash] the point of converting the source code \
into a working application.At this point, the components of the project are \
combined and tested.You've probably heard of the \"Build early and often\" \
principle; it used to be used to reduce risks and avoid unpleasant surprises \
in the development process.Nowadays, \[OpenCurlyDoubleQuote]early and \
frequent assembly\[CloseCurlyDoubleQuote] has been replaced by continuous \
integration, which also includes assembling, but adds to it capabilities that \
improve interaction and coordination within the developer team.\n\nThe most \
well-known part of the practice of continuous integration is assembly, which \
is usually automated.The ability to build manually remains, but you can \
automatically start the build every night or when you make changes to the \
source code.When the compilation process starts, the latest version of the \
source code is extracted from the repository; the continuous integration tool \
tries to compile the project and then test it.The process ends with \
notifications describing the results.Notifications may be sent in various \
formats, including by e-mail or via instant messaging systems.\n\nContinuous \
integration makes the development process more stable and focused.You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489214404213*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"58c6a6ce-b29b-4e05-a076-4d17dc652c90"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The collection has long ceased to play the role \
of the \\\"Big Bang\\\" in the design of projects.Both architects (both at \
the application level and at the corporate level) should encourage the use of \
continuous integration methods and tools in each project.\\n\\nThe term \
continuous integration (CI, Continuous Integration) was first proposed by \
Martin Fowler as a design template. It means a set of methods and tools that \
ensure regular automatic assembly and testing of applications over short \
intervals of time (usually on an integration server specially designed to \
perform these operations).For any modern software project, the practice of \
continuous integration, combining modular testing methods and tools with \
automated assembly tools, becomes mandatory.\\n\\nContinuous integration \
affects an integral element of the software development process\[LongDash]the \
point of converting the source code into a working application. At this \
point, the components of the project are combined and tested.You've probably \
heard of the \\\"Build early and often\\\" principle; it used to be used to \
reduce risks and avoid unpleasant surprises in the development \
process.Nowadays, \[OpenCurlyDoubleQuote]early and frequent assembly\
\[CloseCurlyDoubleQuote] has been replaced by continuous integration, which \
also includes assembling but adds to it capabilities that improve interaction \
and coordination within the developer team.\\n\\nThe most well-known part of \
the practice of continuous integration is assembly, which is usually \
automated.The ability to build manually remains, but you can automatically \
start the build every night or when you make changes to the source code.When \
the compilation process starts, the latest version of the source code is \
extracted from the repository; the continuous integration tool tries to \
compile the project and then test it.The process ends with notifications \
describing the results. Notifications may be sent in various formats, \
including by e-mail or via instant messaging systems.\\n\\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The collection has long ceased to play the role of the \"Big Bang\" in \
the design of projects.Both architects (both at the application level and at \
the corporate level) should encourage the use of continuous integration \
methods and tools in each project.\n\nThe term continuous integration (CI, \
Continuous Integration) was first proposed by Martin Fowler as a design \
template. It means a set of methods and tools that ensure regular automatic \
assembly and testing of applications over short intervals of time (usually on \
an integration server specially designed to perform these operations).For any \
modern software project, the practice of continuous integration, combining \
modular testing methods and tools with automated assembly tools, becomes \
mandatory.\n\nContinuous integration affects an integral element of the \
software development process\[LongDash]the point of converting the source \
code into a working application. At this point, the components of the project \
are combined and tested.You've probably heard of the \"Build early and \
often\" principle; it used to be used to reduce risks and avoid unpleasant \
surprises in the development process.Nowadays, \[OpenCurlyDoubleQuote]early \
and frequent assembly\[CloseCurlyDoubleQuote] has been replaced by continuous \
integration, which also includes assembling but adds to it capabilities that \
improve interaction and coordination within the developer team.\n\nThe most \
well-known part of the practice of continuous integration is assembly, which \
is usually automated.The ability to build manually remains, but you can \
automatically start the build every night or when you make changes to the \
source code.When the compilation process starts, the latest version of the \
source code is extracted from the repository; the continuous integration tool \
tries to compile the project and then test it.The process ends with \
notifications describing the results. Notifications may be sent in various \
formats, including by e-mail or via instant messaging systems.\n\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489299427642*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5160a543-0908-473b-a941-283a9a15ff16"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The collection has long ceased to play the role \
of the \\\"Big Bang\\\" in the design of projects.Both architects (both at \
the application level and at the corporate level) should encourage the use of \
continuous integration methods and tools in each project.\\n\\nThe term \
continuous integration (CI, Continuous Integration) was first proposed by \
Martin Fowler as a design template. It means a set of methods and tools that \
ensure regular automatic assembly and testing of applications over short \
intervals of time (usually on an integration server specially designed to \
perform these operations).For any modern software project, the practice of \
continuous integration, combining modular testing methods and tools with \
automated assembly tools, becomes mandatory.\\n\\nContinuous integration \
affects an integral element of the software development process\[LongDash]the \
point of converting the source code into a working application. At this \
point, the components of the project are combined and tested.You've probably \
heard of the \\\"Build early and often\\\" principle; it used to be used to \
reduce risks and avoid unpleasant surprises in the development \
process.Nowadays, \[OpenCurlyDoubleQuote]early and frequent assembly\
\[CloseCurlyDoubleQuote] has been replaced by continuous integration, which \
also includes assembling but adds to it capabilities that improve interaction \
and coordination within the developer team.\\n\\nThe most well-known part of \
the practice of continuous integration is assembly, which is usually \
automated.The ability to build manually remains, but you can automatically \
start the build every night or when you make changes to the source code.When \
the compilation process starts, the latest version of the source code is \
extracted from the repository; the continuous integration tool tries to \
compile the project and then test it.The process ends with notifications \
describing the results. Notifications may be sent in various formats, \
including by e-mail or via instant messaging systems.\\n\\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams.\"\>"}],
  SequenceForm[
  "newText: ", 
   "The collection has long ceased to play the role of the \"Big Bang\" in \
the design of projects.Both architects (both at the application level and at \
the corporate level) should encourage the use of continuous integration \
methods and tools in each project.\n\nThe term continuous integration (CI, \
Continuous Integration) was first proposed by Martin Fowler as a design \
template. It means a set of methods and tools that ensure regular automatic \
assembly and testing of applications over short intervals of time (usually on \
an integration server specially designed to perform these operations).For any \
modern software project, the practice of continuous integration, combining \
modular testing methods and tools with automated assembly tools, becomes \
mandatory.\n\nContinuous integration affects an integral element of the \
software development process\[LongDash]the point of converting the source \
code into a working application. At this point, the components of the project \
are combined and tested.You've probably heard of the \"Build early and \
often\" principle; it used to be used to reduce risks and avoid unpleasant \
surprises in the development process.Nowadays, \[OpenCurlyDoubleQuote]early \
and frequent assembly\[CloseCurlyDoubleQuote] has been replaced by continuous \
integration, which also includes assembling but adds to it capabilities that \
improve interaction and coordination within the developer team.\n\nThe most \
well-known part of the practice of continuous integration is assembly, which \
is usually automated.The ability to build manually remains, but you can \
automatically start the build every night or when you make changes to the \
source code.When the compilation process starts, the latest version of the \
source code is extracted from the repository; the continuous integration tool \
tries to compile the project and then test it.The process ends with \
notifications describing the results. Notifications may be sent in various \
formats, including by e-mail or via instant messaging systems.\n\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324892995732183`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7886bd36-aec3-48cd-895f-ae8b31862f73"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Ensure continuous \
integration'\\ndate = 2024-05-11T00:00:00-07:00\\ndraft = false\\ncategories \
= []\\ntags = [\\\"big bang\\\", \\\"martin fowler\\\", \\\"nowadays\\\", \
\\\"integration\\\", \\\"process\\\", \\\"development\\\", \\\"assembly\\\", \
\\\"project\\\"]\\ncover_image='/images/cover/knoxwelle__2017-05-25T122957.\
000Z.jpg'\\n+++\\nThe collection has long ceased to play the role of the \
\\\"Big Bang\\\" in the design of projects.Both architects (both at the \
application level and at the corporate level) should encourage the use of \
continuous integration methods and tools in each project.\\n\\nThe term \
continuous integration (CI, Continuous Integration) was first proposed by \
Martin Fowler as a design template. It means a set of methods and tools that \
ensure regular automatic assembly and testing of applications over short \
intervals of time (usually on an integration server specially designed to \
perform these operations).For any modern software project, the practice of \
continuous integration, combining modular testing methods and tools with \
automated assembly tools, becomes mandatory.\\n\\nContinuous integration \
affects an integral element of the software development process\[LongDash]the \
point of converting the source code into a working application. At this \
point, the components of the project are combined and tested.You've probably \
heard of the \\\"Build early and often\\\" principle; it used to be used to \
reduce risks and avoid unpleasant surprises in the development \
process.Nowadays, \[OpenCurlyDoubleQuote]early and frequent assembly\
\[CloseCurlyDoubleQuote] has been replaced by continuous integration, which \
also includes assembling but adds to it capabilities that improve interaction \
and coordination within the developer team.\\n\\nThe most well-known part of \
the practice of continuous integration is assembly, which is usually \
automated.The ability to build manually remains, but you can automatically \
start the build every night or when you make changes to the source code.When \
the compilation process starts, the latest version of the source code is \
extracted from the repository; the continuous integration tool tries to \
compile the project and then test it.The process ends with notifications \
describing the results. Notifications may be sent in various formats, \
including by e-mail or via instant messaging systems.\\n\\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Ensure continuous integration'\ndate = \
2024-05-11T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"big bang\
\", \"martin fowler\", \"nowadays\", \"integration\", \"process\", \
\"development\", \"assembly\", \"project\"]\n\
cover_image='/images/cover/knoxwelle__2017-05-25T122957.000Z.jpg'\n+++\nThe \
collection has long ceased to play the role of the \"Big Bang\" in the design \
of projects.Both architects (both at the application level and at the \
corporate level) should encourage the use of continuous integration methods \
and tools in each project.\n\nThe term continuous integration (CI, Continuous \
Integration) was first proposed by Martin Fowler as a design template. It \
means a set of methods and tools that ensure regular automatic assembly and \
testing of applications over short intervals of time (usually on an \
integration server specially designed to perform these operations).For any \
modern software project, the practice of continuous integration, combining \
modular testing methods and tools with automated assembly tools, becomes \
mandatory.\n\nContinuous integration affects an integral element of the \
software development process\[LongDash]the point of converting the source \
code into a working application. At this point, the components of the project \
are combined and tested.You've probably heard of the \"Build early and \
often\" principle; it used to be used to reduce risks and avoid unpleasant \
surprises in the development process.Nowadays, \[OpenCurlyDoubleQuote]early \
and frequent assembly\[CloseCurlyDoubleQuote] has been replaced by continuous \
integration, which also includes assembling but adds to it capabilities that \
improve interaction and coordination within the developer team.\n\nThe most \
well-known part of the practice of continuous integration is assembly, which \
is usually automated.The ability to build manually remains, but you can \
automatically start the build every night or when you make changes to the \
source code.When the compilation process starts, the latest version of the \
source code is extracted from the repository; the continuous integration tool \
tries to compile the project and then test it.The process ends with \
notifications describing the results. Notifications may be sent in various \
formats, including by e-mail or via instant messaging systems.\n\nContinuous \
integration makes the development process more stable and focused. You will \
like this as an architect, but more importantly, continuous integration will \
enhance the efficiency of your company and your development teams."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324892995929317`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"83e32111-6b0d-4274-9f40-fe8b37131ab3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "11", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Failures are inevitable.md\"\>"}],
  SequenceForm[
  11, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Failures are inevitable.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324892996079288`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b3215215-8498-46d9-8133-66b995bf3a69"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Equipment is vulnerable to damage, so we're \
introducing excess in our systems.It allows you to survive individual \
hardware failures, but increases the likelihood that at any time at least one \
malfunction will be present in the system.\\n\\nThe software code is also \
vulnerable. Our applications are based on software code, which means they are \
vulnerable too.We implement monitoring tools that report application \
failures, but these tools are also based on software code, which means that \
they are vulnerable to failure themselves.\\n\\nSo people make mistakes, so \
we try to automate our actions, diagnostics and workflows.Automation reduces \
the likelihood of errors caused by breaches of rules, but increases the \
likeliness of mistakes resulting from lack of rules.No automated system is \
capable of responding to such a range of situations as a human \
being.\\n\\nThat's why we're adding monitoring mechanisms to automation \
tools. New software, new errors. Networks are made up of hardware, software, \
and very long lines of communication. So networks are also prone to failure. \
Even if a network works properly, its behavior is formally unpredictable, \
because the state space of a large network is practically infinite. \\n\\nAny \
security mechanism that we use to fix some kind of error introduces new kinds \
of failures.We organize clustering so that the application automatically \
moves from a failed server to a working one, but now, when cluster network \
caprices arise, there is a risk of \\\"capacity splitting\\\"1.\\n\\nIt is \
worth recalling that the accident at Trimayle Island2 occurred mainly because \
of the pressure discharge valve \[Dash] a safety mechanism that was meant to \
prevent some types of failures associated with excess pressure.\\n\\nSo, \
system failures are inevitable anyway, so what do we do?\\n\\nBe aware of one \
fact: no matter what, there will be various failures in your system.By \
denying their inevitability, you lose the ability to control and isolate \
these failures.But by accepting this fact, you can design your system's \
response to specific failures.Similar to how car designers create deformation \
zones (deforming areas first and extinguishing collision energy for passive \
passenger protection), you can design failure protection modes that will \
isolate damage and protect the rest of the system components.\\n\\nIf you do \
not, you will have to deal with all the unpredictable \[Dash] and usually \
dangerous \[Dash] failures that arise during the system.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Equipment is vulnerable to damage, so we're introducing excess in our \
systems.It allows you to survive individual hardware failures, but increases \
the likelihood that at any time at least one malfunction will be present in \
the system.\n\nThe software code is also vulnerable. Our applications are \
based on software code, which means they are vulnerable too.We implement \
monitoring tools that report application failures, but these tools are also \
based on software code, which means that they are vulnerable to failure \
themselves.\n\nSo people make mistakes, so we try to automate our actions, \
diagnostics and workflows.Automation reduces the likelihood of errors caused \
by breaches of rules, but increases the likeliness of mistakes resulting from \
lack of rules.No automated system is capable of responding to such a range of \
situations as a human being.\n\nThat's why we're adding monitoring mechanisms \
to automation tools. New software, new errors. Networks are made up of \
hardware, software, and very long lines of communication. So networks are \
also prone to failure. Even if a network works properly, its behavior is \
formally unpredictable, because the state space of a large network is \
practically infinite. \n\nAny security mechanism that we use to fix some kind \
of error introduces new kinds of failures.We organize clustering so that the \
application automatically moves from a failed server to a working one, but \
now, when cluster network caprices arise, there is a risk of \"capacity \
splitting\"1.\n\nIt is worth recalling that the accident at Trimayle Island2 \
occurred mainly because of the pressure discharge valve \[Dash] a safety \
mechanism that was meant to prevent some types of failures associated with \
excess pressure.\n\nSo, system failures are inevitable anyway, so what do we \
do?\n\nBe aware of one fact: no matter what, there will be various failures \
in your system.By denying their inevitability, you lose the ability to \
control and isolate these failures.But by accepting this fact, you can design \
your system's response to specific failures.Similar to how car designers \
create deformation zones (deforming areas first and extinguishing collision \
energy for passive passenger protection), you can design failure protection \
modes that will isolate damage and protect the rest of the system components.\
\n\nIf you do not, you will have to deal with all the unpredictable \[Dash] \
and usually dangerous \[Dash] failures that arise during the system."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489308560032*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"097bc3da-54c8-4c39-a018-959447c7dd50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Equipment is vulnerable to damage, so we're \
introducing excess in our systems.It allows you to survive individual \
hardware failures, but increases the likelihood that at any time at least one \
malfunction will be present in the system.\\n\\nThe software code is also \
vulnerable. Our applications are based on software code, which means they are \
vulnerable too.We implement monitoring tools that report application \
failures, but these tools are also based on software code, which means that \
they are vulnerable to failure themselves.\\n\\nSo people make mistakes, so \
we try to automate our actions, diagnostics and workflows.Automation reduces \
the likelihood of errors caused by breaches of rules, but increases the \
likeliness of mistakes resulting from lack of rules.No automated system is \
capable of responding to such a range of situations as a human \
being.\\n\\nThat's why we're adding monitoring mechanisms to automation \
tools. New software, new errors. Networks are made up of hardware, software, \
and very long lines of communication. So networks are also prone to failure. \
Even if a network works properly, its behavior is formally unpredictable, \
because the state space of a large network is practically infinite. \\n\\nAny \
security mechanism that we use to fix some kind of error introduces new kinds \
of failures.We organize clustering so that the application automatically \
moves from a failed server to a working one, but now, when cluster network \
caprices arise, there is a risk of \\\"capacity splitting\\\"1.\\n\\nIt is \
worth recalling that the accident at Trimayle Island2 occurred mainly because \
of the pressure discharge valve \[Dash] a safety mechanism that was meant to \
prevent some types of failures associated with excess pressure.\\n\\nSo, \
system failures are inevitable anyway, so what do we do?\\n\\nBe aware of one \
fact: no matter what, there will be various failures in your system.By \
denying their inevitability, you lose the ability to control and isolate \
these failures.But by accepting this fact, you can design your system's \
response to specific failures.Similar to how car designers create deformation \
zones (deforming areas first and extinguishing collision energy for passive \
passenger protection), you can design failure protection modes that will \
isolate damage and protect the rest of the system components.\\n\\nIf you do \
not, you will have to deal with all the unpredictable \[Dash] and usually \
dangerous \[Dash] failures that arise during the system.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Equipment is vulnerable to damage, so we're introducing excess in our \
systems.It allows you to survive individual hardware failures, but increases \
the likelihood that at any time at least one malfunction will be present in \
the system.\n\nThe software code is also vulnerable. Our applications are \
based on software code, which means they are vulnerable too.We implement \
monitoring tools that report application failures, but these tools are also \
based on software code, which means that they are vulnerable to failure \
themselves.\n\nSo people make mistakes, so we try to automate our actions, \
diagnostics and workflows.Automation reduces the likelihood of errors caused \
by breaches of rules, but increases the likeliness of mistakes resulting from \
lack of rules.No automated system is capable of responding to such a range of \
situations as a human being.\n\nThat's why we're adding monitoring mechanisms \
to automation tools. New software, new errors. Networks are made up of \
hardware, software, and very long lines of communication. So networks are \
also prone to failure. Even if a network works properly, its behavior is \
formally unpredictable, because the state space of a large network is \
practically infinite. \n\nAny security mechanism that we use to fix some kind \
of error introduces new kinds of failures.We organize clustering so that the \
application automatically moves from a failed server to a working one, but \
now, when cluster network caprices arise, there is a risk of \"capacity \
splitting\"1.\n\nIt is worth recalling that the accident at Trimayle Island2 \
occurred mainly because of the pressure discharge valve \[Dash] a safety \
mechanism that was meant to prevent some types of failures associated with \
excess pressure.\n\nSo, system failures are inevitable anyway, so what do we \
do?\n\nBe aware of one fact: no matter what, there will be various failures \
in your system.By denying their inevitability, you lose the ability to \
control and isolate these failures.But by accepting this fact, you can design \
your system's response to specific failures.Similar to how car designers \
create deformation zones (deforming areas first and extinguishing collision \
energy for passive passenger protection), you can design failure protection \
modes that will isolate damage and protect the rest of the system components.\
\n\nIf you do not, you will have to deal with all the unpredictable \[Dash] \
and usually dangerous \[Dash] failures that arise during the system."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489402985865*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"eefad0c9-3008-4579-84b2-6f93f9c7dd83"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Equipment is vulnerable to damage, so we're \
introducing excess in our systems.It allows you to survive individual \
hardware failures, but increases the likelihood that at any time at least one \
malfunction will be present in the system.\\n\\nThe software code is also \
vulnerable. Our applications are based on software code, which means they are \
vulnerable too.We implement monitoring tools that report application \
failures, but these tools are also based on software code, which means that \
they are vulnerable to failure themselves.\\n\\nSo people make mistakes, so \
we try to automate our actions, diagnostics and workflows.Automation reduces \
the likelihood of errors caused by breaches of rules, but increases the \
likeliness of mistakes resulting from lack of rules.No automated system is \
capable of responding to such a range of situations as a human \
being.\\n\\nThat's why we're adding monitoring mechanisms to automation \
tools. New software, new errors. Networks are made up of hardware, software, \
and very long lines of communication. So networks are also prone to failure. \
Even if a network works properly, its behavior is formally unpredictable, \
because the state space of a large network is practically infinite. \\n\\nAny \
security mechanism that we use to fix some kind of error introduces new kinds \
of failures.We organize clustering so that the application automatically \
moves from a failed server to a working one, but now, when cluster network \
caprices arise, there is a risk of \\\"capacity splitting\\\"1.\\n\\nIt is \
worth recalling that the accident at Trimayle Island2 occurred mainly because \
of the pressure discharge valve \[Dash] a safety mechanism that was meant to \
prevent some types of failures associated with excess pressure.\\n\\nSo, \
system failures are inevitable anyway, so what do we do?\\n\\nBe aware of one \
fact: no matter what, there will be various failures in your system.By \
denying their inevitability, you lose the ability to control and isolate \
these failures.But by accepting this fact, you can design your system's \
response to specific failures.Similar to how car designers create deformation \
zones (deforming areas first and extinguishing collision energy for passive \
passenger protection), you can design failure protection modes that will \
isolate damage and protect the rest of the system components.\\n\\nIf you do \
not, you will have to deal with all the unpredictable \[Dash] and usually \
dangerous \[Dash] failures that arise during the system.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Equipment is vulnerable to damage, so we're introducing excess in our \
systems.It allows you to survive individual hardware failures, but increases \
the likelihood that at any time at least one malfunction will be present in \
the system.\n\nThe software code is also vulnerable. Our applications are \
based on software code, which means they are vulnerable too.We implement \
monitoring tools that report application failures, but these tools are also \
based on software code, which means that they are vulnerable to failure \
themselves.\n\nSo people make mistakes, so we try to automate our actions, \
diagnostics and workflows.Automation reduces the likelihood of errors caused \
by breaches of rules, but increases the likeliness of mistakes resulting from \
lack of rules.No automated system is capable of responding to such a range of \
situations as a human being.\n\nThat's why we're adding monitoring mechanisms \
to automation tools. New software, new errors. Networks are made up of \
hardware, software, and very long lines of communication. So networks are \
also prone to failure. Even if a network works properly, its behavior is \
formally unpredictable, because the state space of a large network is \
practically infinite. \n\nAny security mechanism that we use to fix some kind \
of error introduces new kinds of failures.We organize clustering so that the \
application automatically moves from a failed server to a working one, but \
now, when cluster network caprices arise, there is a risk of \"capacity \
splitting\"1.\n\nIt is worth recalling that the accident at Trimayle Island2 \
occurred mainly because of the pressure discharge valve \[Dash] a safety \
mechanism that was meant to prevent some types of failures associated with \
excess pressure.\n\nSo, system failures are inevitable anyway, so what do we \
do?\n\nBe aware of one fact: no matter what, there will be various failures \
in your system.By denying their inevitability, you lose the ability to \
control and isolate these failures.But by accepting this fact, you can design \
your system's response to specific failures.Similar to how car designers \
create deformation zones (deforming areas first and extinguishing collision \
energy for passive passenger protection), you can design failure protection \
modes that will isolate damage and protect the rest of the system components.\
\n\nIf you do not, you will have to deal with all the unpredictable \[Dash] \
and usually dangerous \[Dash] failures that arise during the system."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489403152857*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"1686ce7d-63d4-49be-baf5-91426497147e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Failures are inevitable'\\ndate = \
2024-08-07T00:00:00-07:00\\ndraft = false\\ncategories = \
[\\\"island2\\\"]\\ntags = [\\\"new\\\", \\\"networks\\\", \\\"failures\\\", \
\\\"software\\\", \\\"system\\\", \\\"network\\\", \
\\\"failure\\\"]\\ncover_image='/images/cover/knoxwelle__2017-04-24T073118.\
000Z.jpg'\\n+++\\nEquipment is vulnerable to damage, so we're introducing \
excess in our systems.It allows you to survive individual hardware failures, \
but increases the likelihood that at any time at least one malfunction will \
be present in the system.\\n\\nThe software code is also vulnerable. Our \
applications are based on software code, which means they are vulnerable \
too.We implement monitoring tools that report application failures, but these \
tools are also based on software code, which means that they are vulnerable \
to failure themselves.\\n\\nSo people make mistakes, so we try to automate \
our actions, diagnostics and workflows.Automation reduces the likelihood of \
errors caused by breaches of rules, but increases the likeliness of mistakes \
resulting from lack of rules.No automated system is capable of responding to \
such a range of situations as a human being.\\n\\nThat's why we're adding \
monitoring mechanisms to automation tools. New software, new errors. Networks \
are made up of hardware, software, and very long lines of communication. So \
networks are also prone to failure. Even if a network works properly, its \
behavior is formally unpredictable, because the state space of a large \
network is practically infinite. \\n\\nAny security mechanism that we use to \
fix some kind of error introduces new kinds of failures.We organize \
clustering so that the application automatically moves from a failed server \
to a working one, but now, when cluster network caprices arise, there is a \
risk of \\\"capacity splitting\\\"1.\\n\\nIt is worth recalling that the \
accident at Trimayle Island2 occurred mainly because of the pressure \
discharge valve \[Dash] a safety mechanism that was meant to prevent some \
types of failures associated with excess pressure.\\n\\nSo, system failures \
are inevitable anyway, so what do we do?\\n\\nBe aware of one fact: no matter \
what, there will be various failures in your system.By denying their \
inevitability, you lose the ability to control and isolate these failures.But \
by accepting this fact, you can design your system's response to specific \
failures.Similar to how car designers create deformation zones (deforming \
areas first and extinguishing collision energy for passive passenger \
protection), you can design failure protection modes that will isolate damage \
and protect the rest of the system components.\\n\\nIf you do not, you will \
have to deal with all the unpredictable \[Dash] and usually dangerous \[Dash] \
failures that arise during the system.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Failures are inevitable'\ndate = 2024-08-07T00:00:00-07:00\n\
draft = false\ncategories = [\"island2\"]\ntags = [\"new\", \"networks\", \
\"failures\", \"software\", \"system\", \"network\", \"failure\"]\n\
cover_image='/images/cover/knoxwelle__2017-04-24T073118.000Z.jpg'\n+++\n\
Equipment is vulnerable to damage, so we're introducing excess in our \
systems.It allows you to survive individual hardware failures, but increases \
the likelihood that at any time at least one malfunction will be present in \
the system.\n\nThe software code is also vulnerable. Our applications are \
based on software code, which means they are vulnerable too.We implement \
monitoring tools that report application failures, but these tools are also \
based on software code, which means that they are vulnerable to failure \
themselves.\n\nSo people make mistakes, so we try to automate our actions, \
diagnostics and workflows.Automation reduces the likelihood of errors caused \
by breaches of rules, but increases the likeliness of mistakes resulting from \
lack of rules.No automated system is capable of responding to such a range of \
situations as a human being.\n\nThat's why we're adding monitoring mechanisms \
to automation tools. New software, new errors. Networks are made up of \
hardware, software, and very long lines of communication. So networks are \
also prone to failure. Even if a network works properly, its behavior is \
formally unpredictable, because the state space of a large network is \
practically infinite. \n\nAny security mechanism that we use to fix some kind \
of error introduces new kinds of failures.We organize clustering so that the \
application automatically moves from a failed server to a working one, but \
now, when cluster network caprices arise, there is a risk of \"capacity \
splitting\"1.\n\nIt is worth recalling that the accident at Trimayle Island2 \
occurred mainly because of the pressure discharge valve \[Dash] a safety \
mechanism that was meant to prevent some types of failures associated with \
excess pressure.\n\nSo, system failures are inevitable anyway, so what do we \
do?\n\nBe aware of one fact: no matter what, there will be various failures \
in your system.By denying their inevitability, you lose the ability to \
control and isolate these failures.But by accepting this fact, you can design \
your system's response to specific failures.Similar to how car designers \
create deformation zones (deforming areas first and extinguishing collision \
energy for passive passenger protection), you can design failure protection \
modes that will isolate damage and protect the rest of the system components.\
\n\nIf you do not, you will have to deal with all the unpredictable \[Dash] \
and usually dangerous \[Dash] failures that arise during the system."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489403172744*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"042f50af-03fa-41f2-a7ca-f10c3e1e81e2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "12", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Find the true meaning of the needs.md\"\>"}],
  SequenceForm[
  12, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Find the true meaning of the needs.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489403185877*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7b845114-46d2-4002-a3ab-de7b260a992d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Customers and end-users often demand what they \
think is an effective solution to a problem. A classic example of this is \
given by Harry Hillaker, the leading designer of the F-16 Falcon. His group \
had set the goal of designing an aircraft developing M2\[Dash]2.5 speeds, \
which was (and probably remains) a very non-trivial task, especially if the \
accompanying objective was to create a \[OpenCurlyDoubleQuote]cheap\
\[CloseCurlyDoubleQuote] light aircraft. Consider that the force required to \
overcome the air resistance increases by four times the speed of flight, and \
imagine how this circumstance affects the weight of the aircraft.\\n\\nWhen \
the design team asked the Air Force customers why they needed the \
M2\[Dash]2.5 speed, they replied, \\\"That the aircraft could get out of \
battle if necessary.\\\" When the real need became apparent, the designers \
were able to solve the main problem and present a workable solution: a mobile \
aircraft with high traction, providing good acceleration and maneuverability \
instead of high maximum speed.\\n\\nThe lesson is equally true in software \
development. Having learned from the customer the true meaning of the \
requested possibility or requirement, the architect will be able to penetrate \
the essence of the problem and, if lucky, offer a solution that is more \
quality and cost-effective compared to the one on which the client insists. \
Increased attention to the essence of requirements also simplifies the \
priority setting: the most important requirements for the customer become \
decisive.\\n\\nHow should we act? In the manifesto of agile development, \
there is a principle that fits very well in many cases: \\\"Cooperation is \
more important than contract.\\\" From a practical point of view, this \
involves holding workshops and meetings where architects analyze the customer\
\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Customers and end-users often demand what they think is an effective \
solution to a problem. A classic example of this is given by Harry Hillaker, \
the leading designer of the F-16 Falcon. His group had set the goal of \
designing an aircraft developing M2\[Dash]2.5 speeds, which was (and probably \
remains) a very non-trivial task, especially if the accompanying objective \
was to create a \[OpenCurlyDoubleQuote]cheap\[CloseCurlyDoubleQuote] light \
aircraft. Consider that the force required to overcome the air resistance \
increases by four times the speed of flight, and imagine how this \
circumstance affects the weight of the aircraft.\n\nWhen the design team \
asked the Air Force customers why they needed the M2\[Dash]2.5 speed, they \
replied, \"That the aircraft could get out of battle if necessary.\" When the \
real need became apparent, the designers were able to solve the main problem \
and present a workable solution: a mobile aircraft with high traction, \
providing good acceleration and maneuverability instead of high maximum \
speed.\n\nThe lesson is equally true in software development. Having learned \
from the customer the true meaning of the requested possibility or \
requirement, the architect will be able to penetrate the essence of the \
problem and, if lucky, offer a solution that is more quality and \
cost-effective compared to the one on which the client insists. Increased \
attention to the essence of requirements also simplifies the priority \
setting: the most important requirements for the customer become decisive.\n\n\
How should we act? In the manifesto of agile development, there is a \
principle that fits very well in many cases: \"Cooperation is more important \
than contract.\" From a practical point of view, this involves holding \
workshops and meetings where architects analyze the \
customer\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489412393396*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"303bdbd4-7c04-434c-b7a7-43351c71df0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Customers and end-users often demand what they \
think is an effective solution to a problem. A classic example of this is \
given by Harry Hillaker, the leading designer of the F-16 Falcon. His group \
had set the goal of designing an aircraft developing M2\[Dash]2.5 speeds, \
which was (and probably remains) a very non-trivial task, especially if the \
accompanying objective was to create a \[OpenCurlyDoubleQuote]cheap\
\[CloseCurlyDoubleQuote] light aircraft. Consider that the force required to \
overcome the air resistance increases by four times the speed of flight, and \
imagine how this circumstance affects the weight of the aircraft.\\n\\nWhen \
the design team asked the Air Force customers why they needed the \
M2\[Dash]2.5 speed, they replied, \\\"That the aircraft could get out of \
battle if necessary.\\\" When the real need became apparent, the designers \
were able to solve the main problem and present a workable solution: a mobile \
aircraft with high traction, providing good acceleration and maneuverability \
instead of high maximum speed.\\n\\nThe lesson is equally true in software \
development. Having learned from the customer the true meaning of the \
requested possibility or requirement, the architect will be able to penetrate \
the essence of the problem and, if lucky, offer a solution that is more \
quality and cost-effective compared to the one on which the client insists. \
Increased attention to the essence of requirements also simplifies the \
priority setting: the most important requirements for the customer become \
decisive.\\n\\nHow should we act? In the manifesto of agile development, \
there is a principle that fits very well in many cases: \\\"Cooperation is \
more important than contract.\\\" From a practical point of view, this \
involves holding workshops and meetings where architects analyze the customer\
\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Customers and end-users often demand what they think is an effective \
solution to a problem. A classic example of this is given by Harry Hillaker, \
the leading designer of the F-16 Falcon. His group had set the goal of \
designing an aircraft developing M2\[Dash]2.5 speeds, which was (and probably \
remains) a very non-trivial task, especially if the accompanying objective \
was to create a \[OpenCurlyDoubleQuote]cheap\[CloseCurlyDoubleQuote] light \
aircraft. Consider that the force required to overcome the air resistance \
increases by four times the speed of flight, and imagine how this \
circumstance affects the weight of the aircraft.\n\nWhen the design team \
asked the Air Force customers why they needed the M2\[Dash]2.5 speed, they \
replied, \"That the aircraft could get out of battle if necessary.\" When the \
real need became apparent, the designers were able to solve the main problem \
and present a workable solution: a mobile aircraft with high traction, \
providing good acceleration and maneuverability instead of high maximum \
speed.\n\nThe lesson is equally true in software development. Having learned \
from the customer the true meaning of the requested possibility or \
requirement, the architect will be able to penetrate the essence of the \
problem and, if lucky, offer a solution that is more quality and \
cost-effective compared to the one on which the client insists. Increased \
attention to the essence of requirements also simplifies the priority \
setting: the most important requirements for the customer become decisive.\n\n\
How should we act? In the manifesto of agile development, there is a \
principle that fits very well in many cases: \"Cooperation is more important \
than contract.\" From a practical point of view, this involves holding \
workshops and meetings where architects analyze the \
customer\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324895027495275`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"90fe5b20-08ac-4d2c-bfe1-b3a17d8a3e8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Customers and end-users often demand what they \
think is an effective solution to a problem. A classic example of this is \
given by Harry Hillaker, the leading designer of the F-16 Falcon. His group \
had set the goal of designing an aircraft developing M2\[Dash]2.5 speeds, \
which was (and probably remains) a very non-trivial task, especially if the \
accompanying objective was to create a \[OpenCurlyDoubleQuote]cheap\
\[CloseCurlyDoubleQuote] light aircraft. Consider that the force required to \
overcome the air resistance increases by four times the speed of flight, and \
imagine how this circumstance affects the weight of the aircraft.\\n\\nWhen \
the design team asked the Air Force customers why they needed the \
M2\[Dash]2.5 speed, they replied, \\\"That the aircraft could get out of \
battle if necessary.\\\" When the real need became apparent, the designers \
were able to solve the main problem and present a workable solution: a mobile \
aircraft with high traction, providing good acceleration and maneuverability \
instead of high maximum speed.\\n\\nThe lesson is equally true in software \
development. Having learned from the customer the true meaning of the \
requested possibility or requirement, the architect will be able to penetrate \
the essence of the problem and, if lucky, offer a solution that is more \
quality and cost-effective compared to the one on which the client insists. \
Increased attention to the essence of requirements also simplifies the \
priority setting: the most important requirements for the customer become \
decisive.\\n\\nHow should we act? In the manifesto of agile development, \
there is a principle that fits very well in many cases: \\\"Cooperation is \
more important than contract.\\\" From a practical point of view, this \
involves holding workshops and meetings where architects analyze the customer\
\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Customers and end-users often demand what they think is an effective \
solution to a problem. A classic example of this is given by Harry Hillaker, \
the leading designer of the F-16 Falcon. His group had set the goal of \
designing an aircraft developing M2\[Dash]2.5 speeds, which was (and probably \
remains) a very non-trivial task, especially if the accompanying objective \
was to create a \[OpenCurlyDoubleQuote]cheap\[CloseCurlyDoubleQuote] light \
aircraft. Consider that the force required to overcome the air resistance \
increases by four times the speed of flight, and imagine how this \
circumstance affects the weight of the aircraft.\n\nWhen the design team \
asked the Air Force customers why they needed the M2\[Dash]2.5 speed, they \
replied, \"That the aircraft could get out of battle if necessary.\" When the \
real need became apparent, the designers were able to solve the main problem \
and present a workable solution: a mobile aircraft with high traction, \
providing good acceleration and maneuverability instead of high maximum \
speed.\n\nThe lesson is equally true in software development. Having learned \
from the customer the true meaning of the requested possibility or \
requirement, the architect will be able to penetrate the essence of the \
problem and, if lucky, offer a solution that is more quality and \
cost-effective compared to the one on which the client insists. Increased \
attention to the essence of requirements also simplifies the priority \
setting: the most important requirements for the customer become decisive.\n\n\
How should we act? In the manifesto of agile development, there is a \
principle that fits very well in many cases: \"Cooperation is more important \
than contract.\" From a practical point of view, this involves holding \
workshops and meetings where architects analyze the \
customer\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489502907835*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"eeb5b3b8-ac28-4f52-8a7d-1a2a439a0e6d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Find the true meaning of the \
needs'\\ndate = 2024-06-18T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"harry hillaker\\\", \\\"falcon\\\", \\\"air force\\\", \
\\\"bear\\\", \\\"aircraft\\\", \\\"speed\\\", \\\"problem\\\", \
\\\"solution\\\", \
\\\"area\\\"]\\ncover_image='/images/cover/knoxwelle__2018-09-12T085701.000Z.\
jpg'\\n+++\\nCustomers and end-users often demand what they think is an \
effective solution to a problem. A classic example of this is given by Harry \
Hillaker, the leading designer of the F-16 Falcon. His group had set the goal \
of designing an aircraft developing M2\[Dash]2.5 speeds, which was (and \
probably remains) a very non-trivial task, especially if the accompanying \
objective was to create a \
\[OpenCurlyDoubleQuote]cheap\[CloseCurlyDoubleQuote] light aircraft. Consider \
that the force required to overcome the air resistance increases by four \
times the speed of flight, and imagine how this circumstance affects the \
weight of the aircraft.\\n\\nWhen the design team asked the Air Force \
customers why they needed the M2\[Dash]2.5 speed, they replied, \\\"That the \
aircraft could get out of battle if necessary.\\\" When the real need became \
apparent, the designers were able to solve the main problem and present a \
workable solution: a mobile aircraft with high traction, providing good \
acceleration and maneuverability instead of high maximum speed.\\n\\nThe \
lesson is equally true in software development. Having learned from the \
customer the true meaning of the requested possibility or requirement, the \
architect will be able to penetrate the essence of the problem and, if lucky, \
offer a solution that is more quality and cost-effective compared to the one \
on which the client insists. Increased attention to the essence of \
requirements also simplifies the priority setting: the most important \
requirements for the customer become decisive.\\n\\nHow should we act? In the \
manifesto of agile development, there is a principle that fits very well in \
many cases: \\\"Cooperation is more important than contract.\\\" From a \
practical point of view, this involves holding workshops and meetings where \
architects analyze the customer\[CloseCurlyQuote]s needs, helping them answer \
the question \[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind \
that finding an answer to this question can be a very difficult task because \
the process of demand analysis often involves implicit assumptions and \
implied knowledge. Discussions about technical solutions should be avoided at \
such meetings because they transfer discussion from the client's subject area \
to the area of programming.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Find the true meaning of the needs'\ndate = \
2024-06-18T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"harry \
hillaker\", \"falcon\", \"air force\", \"bear\", \"aircraft\", \"speed\", \
\"problem\", \"solution\", \"area\"]\n\
cover_image='/images/cover/knoxwelle__2018-09-12T085701.000Z.jpg'\n+++\n\
Customers and end-users often demand what they think is an effective solution \
to a problem. A classic example of this is given by Harry Hillaker, the \
leading designer of the F-16 Falcon. His group had set the goal of designing \
an aircraft developing M2\[Dash]2.5 speeds, which was (and probably remains) \
a very non-trivial task, especially if the accompanying objective was to \
create a \[OpenCurlyDoubleQuote]cheap\[CloseCurlyDoubleQuote] light aircraft. \
Consider that the force required to overcome the air resistance increases by \
four times the speed of flight, and imagine how this circumstance affects the \
weight of the aircraft.\n\nWhen the design team asked the Air Force customers \
why they needed the M2\[Dash]2.5 speed, they replied, \"That the aircraft \
could get out of battle if necessary.\" When the real need became apparent, \
the designers were able to solve the main problem and present a workable \
solution: a mobile aircraft with high traction, providing good acceleration \
and maneuverability instead of high maximum speed.\n\nThe lesson is equally \
true in software development. Having learned from the customer the true \
meaning of the requested possibility or requirement, the architect will be \
able to penetrate the essence of the problem and, if lucky, offer a solution \
that is more quality and cost-effective compared to the one on which the \
client insists. Increased attention to the essence of requirements also \
simplifies the priority setting: the most important requirements for the \
customer become decisive.\n\nHow should we act? In the manifesto of agile \
development, there is a principle that fits very well in many cases: \
\"Cooperation is more important than contract.\" From a practical point of \
view, this involves holding workshops and meetings where architects analyze \
the customer\[CloseCurlyQuote]s needs, helping them answer the question \
\[OpenCurlyDoubleQuote]Why?\[CloseCurlyDoubleQuote] Bear in mind that finding \
an answer to this question can be a very difficult task because the process \
of demand analysis often involves implicit assumptions and implied knowledge. \
Discussions about technical solutions should be avoided at such meetings \
because they transfer discussion from the client's subject area to the area \
of programming."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489502930033*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7288dd30-65ae-4c8c-a634-206da4635e27"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "13", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Get up.md\"\>"}],
  SequenceForm[
  13, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\Get \
up.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324895029460306`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"fb527e9f-50f6-4dec-b2a4-458883bcfc89"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"For many of us, an architect's career began with \
some sort of purely technical position, where success was largely determined \
by the ability to communicate with computers.But as an architect, we have to \
communicate mainly with other people. Whether you are discussing the \
advantages of a template with developers or explaining to management the pros \
and cons of buying intermediate software, your communication skills are the \
key to success.  \\n\\nObjectively measure the degree of influence of the \
architect on the project is quite difficult, but one thing is quite clear: if \
the developers constantly ignore the instructions of the Architect, and the \
management does not attach importance to his recommendations, the \
\\\"correctness\\\" of the actions of architect will not affect the \
development of his career.Experienced architects understand that they have to \
\\\"promote\\\" their ideas, and this task requires the ability to \
communicate effectively.\\n\\nMany books have been written on the subject of \
interpersonal communication, but I would like to offer you one simple and \
practical technique that will radically increase the effectiveness of your \
communication and consequently strengthen your success as an architect.In any \
situation you have to explain your position to several listeners at once, get \
up.It doesn\[CloseCurlyQuote]t matter where you are \[Dash] at a formal \
system project analysis or an informal discussion of a pair of charts. Get up \
\[Dash] especially if everyone else is sitting.  \\n\\nWhen you get up, \
others automatically begin to perceive you as an authoritative and \
self-confident person. You're becoming the center of attention.You're less \
likely to be interrupted.All of this will have a significant impact on the \
discussion, whether your recommendations are accepted or not.  \\n\\nIt \
should also be noted that a standing person uses gestures and mimics more \
intensively. If you are communicating with a group of 10 or more people, \
standing up will help to establish visual contact with the entire audience. \
Optical contact, gestures, mimics and other visual elements play an important \
role in communication. In addition, the standing position changes the tone \
and volume of the voice, as well as the speaking pace: you start speaking so \
that you are heard in a large room, making pauses to highlight important \
moments. All these elements make a significant contribution to the \
effectiveness of communication.  \\n  \\nDo you want to increase the \
efficiency of communicating your ideas more than twice? It is very simple: \
get up.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "For many of us, an architect's career began with some sort of purely \
technical position, where success was largely determined by the ability to \
communicate with computers.But as an architect, we have to communicate mainly \
with other people. Whether you are discussing the advantages of a template \
with developers or explaining to management the pros and cons of buying \
intermediate software, your communication skills are the key to success.  \n\n\
Objectively measure the degree of influence of the architect on the project \
is quite difficult, but one thing is quite clear: if the developers \
constantly ignore the instructions of the Architect, and the management does \
not attach importance to his recommendations, the \"correctness\" of the \
actions of architect will not affect the development of his \
career.Experienced architects understand that they have to \"promote\" their \
ideas, and this task requires the ability to communicate effectively.\n\nMany \
books have been written on the subject of interpersonal communication, but I \
would like to offer you one simple and practical technique that will \
radically increase the effectiveness of your communication and consequently \
strengthen your success as an architect.In any situation you have to explain \
your position to several listeners at once, get up.It \
doesn\[CloseCurlyQuote]t matter where you are \[Dash] at a formal system \
project analysis or an informal discussion of a pair of charts. Get up \
\[Dash] especially if everyone else is sitting.  \n\nWhen you get up, others \
automatically begin to perceive you as an authoritative and self-confident \
person. You're becoming the center of attention.You're less likely to be \
interrupted.All of this will have a significant impact on the discussion, \
whether your recommendations are accepted or not.  \n\nIt should also be \
noted that a standing person uses gestures and mimics more intensively. If \
you are communicating with a group of 10 or more people, standing up will \
help to establish visual contact with the entire audience. Optical contact, \
gestures, mimics and other visual elements play an important role in \
communication. In addition, the standing position changes the tone and volume \
of the voice, as well as the speaking pace: you start speaking so that you \
are heard in a large room, making pauses to highlight important moments. All \
these elements make a significant contribution to the effectiveness of \
communication.  \n  \nDo you want to increase the efficiency of communicating \
your ideas more than twice? It is very simple: get up."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489515322049*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9265d763-54af-41ab-8bef-036795d856de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"For many of us, an architect's career began with \
some sort of purely technical position, where success was largely determined \
by the ability to communicate with computers.But as an architect, we have to \
communicate mainly with other people. Whether you are discussing the \
advantages of a template with developers or explaining to management the pros \
and cons of buying intermediate software, your communication skills are the \
key to success. \\n\\nObjectively measuring the degree of influence of the \
architect on the project is quite difficult, but one thing is quite clear: if \
the developers constantly ignore the instructions of the architect and the \
management does not attach importance to his recommendations, the \
\\\"correctness\\\" of the actions of the architect will not affect the \
development of his career. Experienced architects understand that they have \
to \\\"promote\\\" their ideas, and this task requires the ability to \
communicate effectively.\\n\\nMany books have been written on the subject of \
interpersonal communication, but I would like to offer you one simple and \
practical technique that will radically increase the effectiveness of your \
communication and consequently strengthen your success as an architect.In any \
situation you have to explain your position to several listeners at once, get \
up.It doesn\[CloseCurlyQuote]t matter where you are\[LongDash]at a formal \
system project analysis or an informal discussion of a pair of charts. Get \
up, especially if everyone else is sitting. \\n\\nWhen you get up, others \
automatically begin to perceive you as an authoritative and self-confident \
person. You're becoming the center of attention. You're less likely to be \
interrupted. All of this will have a significant impact on the discussion, \
whether your recommendations are accepted or not. \\n\\nIt should also be \
noted that a standing person uses gestures and mimics more intensively. If \
you are communicating with a group of 10 or more people, standing up will \
help to establish visual contact with the entire audience. Optical contact, \
gestures, mimics, and other visual elements play an important role in \
communication. In addition, the standing position changes the tone and volume \
of the voice, as well as the speaking pace: you start speaking so that you \
are heard in a large room, making pauses to highlight important moments. All \
these elements make a significant contribution to the effectiveness of \
communication. \\n  Do you want to increase the efficiency of communicating \
your ideas more than twice? It is very simple: get up.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "For many of us, an architect's career began with some sort of purely \
technical position, where success was largely determined by the ability to \
communicate with computers.But as an architect, we have to communicate mainly \
with other people. Whether you are discussing the advantages of a template \
with developers or explaining to management the pros and cons of buying \
intermediate software, your communication skills are the key to success. \n\n\
Objectively measuring the degree of influence of the architect on the project \
is quite difficult, but one thing is quite clear: if the developers \
constantly ignore the instructions of the architect and the management does \
not attach importance to his recommendations, the \"correctness\" of the \
actions of the architect will not affect the development of his career. \
Experienced architects understand that they have to \"promote\" their ideas, \
and this task requires the ability to communicate effectively.\n\nMany books \
have been written on the subject of interpersonal communication, but I would \
like to offer you one simple and practical technique that will radically \
increase the effectiveness of your communication and consequently strengthen \
your success as an architect.In any situation you have to explain your \
position to several listeners at once, get up.It doesn\[CloseCurlyQuote]t \
matter where you are\[LongDash]at a formal system project analysis or an \
informal discussion of a pair of charts. Get up, especially if everyone else \
is sitting. \n\nWhen you get up, others automatically begin to perceive you \
as an authoritative and self-confident person. You're becoming the center of \
attention. You're less likely to be interrupted. All of this will have a \
significant impact on the discussion, whether your recommendations are \
accepted or not. \n\nIt should also be noted that a standing person uses \
gestures and mimics more intensively. If you are communicating with a group \
of 10 or more people, standing up will help to establish visual contact with \
the entire audience. Optical contact, gestures, mimics, and other visual \
elements play an important role in communication. In addition, the standing \
position changes the tone and volume of the voice, as well as the speaking \
pace: you start speaking so that you are heard in a large room, making pauses \
to highlight important moments. All these elements make a significant \
contribution to the effectiveness of communication. \n  Do you want to \
increase the efficiency of communicating your ideas more than twice? It is \
very simple: get up."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324896283451843`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"4783c9c3-298f-4b2d-bdb4-e8b6a0c29797"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"For many of us, an architect's career began with \
some sort of purely technical position, where success was largely determined \
by the ability to communicate with computers.But as an architect, we have to \
communicate mainly with other people. Whether you are discussing the \
advantages of a template with developers or explaining to management the pros \
and cons of buying intermediate software, your communication skills are the \
key to success. \\n\\nObjectively measuring the degree of influence of the \
architect on the project is quite difficult, but one thing is quite clear: if \
the developers constantly ignore the instructions of the architect and the \
management does not attach importance to his recommendations, the \
\\\"correctness\\\" of the actions of the architect will not affect the \
development of his career. Experienced architects understand that they have \
to \\\"promote\\\" their ideas, and this task requires the ability to \
communicate effectively.\\n\\nMany books have been written on the subject of \
interpersonal communication, but I would like to offer you one simple and \
practical technique that will radically increase the effectiveness of your \
communication and consequently strengthen your success as an architect.In any \
situation you have to explain your position to several listeners at once, get \
up.It doesn\[CloseCurlyQuote]t matter where you are\[LongDash]at a formal \
system project analysis or an informal discussion of a pair of charts. Get \
up, especially if everyone else is sitting. \\n\\nWhen you get up, others \
automatically begin to perceive you as an authoritative and self-confident \
person. You're becoming the center of attention. You're less likely to be \
interrupted. All of this will have a significant impact on the discussion, \
whether your recommendations are accepted or not. \\n\\nIt should also be \
noted that a standing person uses gestures and mimics more intensively. If \
you are communicating with a group of 10 or more people, standing up will \
help to establish visual contact with the entire audience. Optical contact, \
gestures, mimics, and other visual elements play an important role in \
communication. In addition, the standing position changes the tone and volume \
of the voice, as well as the speaking pace: you start speaking so that you \
are heard in a large room, making pauses to highlight important moments. All \
these elements make a significant contribution to the effectiveness of \
communication. \\n  Do you want to increase the efficiency of communicating \
your ideas more than twice? It is very simple: get up.\"\>"}],
  SequenceForm[
  "newText: ", 
   "For many of us, an architect's career began with some sort of purely \
technical position, where success was largely determined by the ability to \
communicate with computers.But as an architect, we have to communicate mainly \
with other people. Whether you are discussing the advantages of a template \
with developers or explaining to management the pros and cons of buying \
intermediate software, your communication skills are the key to success. \n\n\
Objectively measuring the degree of influence of the architect on the project \
is quite difficult, but one thing is quite clear: if the developers \
constantly ignore the instructions of the architect and the management does \
not attach importance to his recommendations, the \"correctness\" of the \
actions of the architect will not affect the development of his career. \
Experienced architects understand that they have to \"promote\" their ideas, \
and this task requires the ability to communicate effectively.\n\nMany books \
have been written on the subject of interpersonal communication, but I would \
like to offer you one simple and practical technique that will radically \
increase the effectiveness of your communication and consequently strengthen \
your success as an architect.In any situation you have to explain your \
position to several listeners at once, get up.It doesn\[CloseCurlyQuote]t \
matter where you are\[LongDash]at a formal system project analysis or an \
informal discussion of a pair of charts. Get up, especially if everyone else \
is sitting. \n\nWhen you get up, others automatically begin to perceive you \
as an authoritative and self-confident person. You're becoming the center of \
attention. You're less likely to be interrupted. All of this will have a \
significant impact on the discussion, whether your recommendations are \
accepted or not. \n\nIt should also be noted that a standing person uses \
gestures and mimics more intensively. If you are communicating with a group \
of 10 or more people, standing up will help to establish visual contact with \
the entire audience. Optical contact, gestures, mimics, and other visual \
elements play an important role in communication. In addition, the standing \
position changes the tone and volume of the voice, as well as the speaking \
pace: you start speaking so that you are heard in a large room, making pauses \
to highlight important moments. All these elements make a significant \
contribution to the effectiveness of communication. \n  Do you want to \
increase the efficiency of communicating your ideas more than twice? It is \
very simple: get up."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489628499081*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"885ba86c-b869-49c4-b060-132f82c06494"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Get up'\\ndate = \
2024-07-14T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"architect\\\", \\\"optical\\\", \\\"communication\\\", \\\"standing\\\", \
\\\"success\\\", \
\\\"position\\\"]\\ncover_image='/images/cover/knoxwelle__2024-02-18T042256.\
000Z.jpg'\\n+++\\nFor many of us, an architect's career began with some sort \
of purely technical position, where success was largely determined by the \
ability to communicate with computers.But as an architect, we have to \
communicate mainly with other people. Whether you are discussing the \
advantages of a template with developers or explaining to management the pros \
and cons of buying intermediate software, your communication skills are the \
key to success. \\n\\nObjectively measuring the degree of influence of the \
architect on the project is quite difficult, but one thing is quite clear: if \
the developers constantly ignore the instructions of the architect and the \
management does not attach importance to his recommendations, the \
\\\"correctness\\\" of the actions of the architect will not affect the \
development of his career. Experienced architects understand that they have \
to \\\"promote\\\" their ideas, and this task requires the ability to \
communicate effectively.\\n\\nMany books have been written on the subject of \
interpersonal communication, but I would like to offer you one simple and \
practical technique that will radically increase the effectiveness of your \
communication and consequently strengthen your success as an architect.In any \
situation you have to explain your position to several listeners at once, get \
up.It doesn\[CloseCurlyQuote]t matter where you are\[LongDash]at a formal \
system project analysis or an informal discussion of a pair of charts. Get \
up, especially if everyone else is sitting. \\n\\nWhen you get up, others \
automatically begin to perceive you as an authoritative and self-confident \
person. You're becoming the center of attention. You're less likely to be \
interrupted. All of this will have a significant impact on the discussion, \
whether your recommendations are accepted or not. \\n\\nIt should also be \
noted that a standing person uses gestures and mimics more intensively. If \
you are communicating with a group of 10 or more people, standing up will \
help to establish visual contact with the entire audience. Optical contact, \
gestures, mimics, and other visual elements play an important role in \
communication. In addition, the standing position changes the tone and volume \
of the voice, as well as the speaking pace: you start speaking so that you \
are heard in a large room, making pauses to highlight important moments. All \
these elements make a significant contribution to the effectiveness of \
communication. \\n  Do you want to increase the efficiency of communicating \
your ideas more than twice? It is very simple: get up.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Get up'\ndate = 2024-07-14T00:00:00-07:00\ndraft = false\n\
categories = []\ntags = [\"architect\", \"optical\", \"communication\", \
\"standing\", \"success\", \"position\"]\n\
cover_image='/images/cover/knoxwelle__2024-02-18T042256.000Z.jpg'\n+++\nFor \
many of us, an architect's career began with some sort of purely technical \
position, where success was largely determined by the ability to communicate \
with computers.But as an architect, we have to communicate mainly with other \
people. Whether you are discussing the advantages of a template with \
developers or explaining to management the pros and cons of buying \
intermediate software, your communication skills are the key to success. \n\n\
Objectively measuring the degree of influence of the architect on the project \
is quite difficult, but one thing is quite clear: if the developers \
constantly ignore the instructions of the architect and the management does \
not attach importance to his recommendations, the \"correctness\" of the \
actions of the architect will not affect the development of his career. \
Experienced architects understand that they have to \"promote\" their ideas, \
and this task requires the ability to communicate effectively.\n\nMany books \
have been written on the subject of interpersonal communication, but I would \
like to offer you one simple and practical technique that will radically \
increase the effectiveness of your communication and consequently strengthen \
your success as an architect.In any situation you have to explain your \
position to several listeners at once, get up.It doesn\[CloseCurlyQuote]t \
matter where you are\[LongDash]at a formal system project analysis or an \
informal discussion of a pair of charts. Get up, especially if everyone else \
is sitting. \n\nWhen you get up, others automatically begin to perceive you \
as an authoritative and self-confident person. You're becoming the center of \
attention. You're less likely to be interrupted. All of this will have a \
significant impact on the discussion, whether your recommendations are \
accepted or not. \n\nIt should also be noted that a standing person uses \
gestures and mimics more intensively. If you are communicating with a group \
of 10 or more people, standing up will help to establish visual contact with \
the entire audience. Optical contact, gestures, mimics, and other visual \
elements play an important role in communication. In addition, the standing \
position changes the tone and volume of the voice, as well as the speaking \
pace: you start speaking so that you are heard in a large room, making pauses \
to highlight important moments. All these elements make a significant \
contribution to the effectiveness of communication. \n  Do you want to \
increase the efficiency of communicating your ideas more than twice? It is \
very simple: get up."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324896285180826`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5b7a3c49-1855-4419-bde8-d7d73ef2f3c1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "14", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Interview tips.md\"\>"}],
  SequenceForm[
  14, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Interview tips.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489628531081*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e1066d0e-d731-4f19-b3c9-9206592aebfa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"The fate of fate I started to go to interviews \
again, and I want to share some observations. On this, I just give advice to \
everyone in enterprise companies about how the recruitment process should be \
structured.\\n\\n## Advice to candidates\\n\\nIn the last five years, I've \
been through several hundred interviews on both sides. So, some life hacking:\
\\n\\nYou're going to have to go through the windshields. Those you're not \
going to go to. You pump the skill, or suddenly something interesting turns \
out to be, or it'll be the only place with the offer. You never know what's \
in a box of candy.\\n\\n - Get some sleep and let yourself rest on the day of \
wrath. The same live coding is quite a dumb thing; the solution may not come \
during the call but will appear immediately after.\\n- Take a glass of water. \
Drink in any unclear situation; it is a good and adequate filler.\\n- Talk to \
me. It's good if you can talk to your cat or colleague about distracted \
topics before the call. It helps relieve some tension.\\n- Take it easy. If \
they don't take you, nobody dies. Yeah, maybe it'll be harder, but in a year \
or two, you'll even say \\\"thank you.\\\" This attitude will help reduce the \
degree of stiffness a little.\\n- Be sure to ask for feedback. Without \
feedback, it's very hard to learn.\\n   I would like to remind you that \
refusal should be treated more easily. You just didn't fit this company for \
that position. It doesn't make you a bad person or a programmer. I received \
refusals with such words as \\\"overqualified\\\" and \\\"we thought you \
would fall somewhere and agree to the penny against quater,\\\" just flowers. \
Well, they don't have a job for me, maybe.\\n\\n## Advice to \
interviewers\\n\\nMore empathy. You are not a candidate, but a potential \
colleague. And you have no purpose in overthrowing him; your task is to \
understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\\n\\n## Instead of conviction\\n\\nIn my 10 years in IT, I have \
worked for many types of companies. They were mainly start-ups or small \
companies with 20\[Dash]30 people. So, the interviews at the enterprise are \
strikingly different from theirs. Recruiters have a huge flow of vacancies \
and resumes, so wild options are possible at first sight. For example, after \
seven successful interviews, I was told that they could not find a position \
for me. WTF?! But as an excuse, I can say that they have streaming hiring. I \
mean, they're screwing everybody, \\\"and we're going to figure it out \
someday.\\\" And the processes are fully standardized. Whether you're a \
senior in Python with 15 years of referral experience or not, you still go \
through all the hell stages.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "The fate of fate I started to go to interviews again, and I want to share \
some observations. On this, I just give advice to everyone in enterprise \
companies about how the recruitment process should be structured.\n\n## \
Advice to candidates\n\nIn the last five years, I've been through several \
hundred interviews on both sides. So, some life hacking:\n\nYou're going to \
have to go through the windshields. Those you're not going to go to. You pump \
the skill, or suddenly something interesting turns out to be, or it'll be the \
only place with the offer. You never know what's in a box of candy.\n\n - Get \
some sleep and let yourself rest on the day of wrath. The same live coding is \
quite a dumb thing; the solution may not come during the call but will appear \
immediately after.\n- Take a glass of water. Drink in any unclear situation; \
it is a good and adequate filler.\n- Talk to me. It's good if you can talk to \
your cat or colleague about distracted topics before the call. It helps \
relieve some tension.\n- Take it easy. If they don't take you, nobody dies. \
Yeah, maybe it'll be harder, but in a year or two, you'll even say \"thank \
you.\" This attitude will help reduce the degree of stiffness a little.\n- Be \
sure to ask for feedback. Without feedback, it's very hard to learn.\n   I \
would like to remind you that refusal should be treated more easily. You just \
didn't fit this company for that position. It doesn't make you a bad person \
or a programmer. I received refusals with such words as \"overqualified\" and \
\"we thought you would fall somewhere and agree to the penny against \
quater,\" just flowers. Well, they don't have a job for me, maybe.\n\n## \
Advice to interviewers\n\nMore empathy. You are not a candidate, but a \
potential colleague. And you have no purpose in overthrowing him; your task \
is to understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\n\n## Instead of conviction\n\nIn my 10 years in IT, I have worked \
for many types of companies. They were mainly start-ups or small companies \
with 20\[Dash]30 people. So, the interviews at the enterprise are strikingly \
different from theirs. Recruiters have a huge flow of vacancies and resumes, \
so wild options are possible at first sight. For example, after seven \
successful interviews, I was told that they could not find a position for me. \
WTF?! But as an excuse, I can say that they have streaming hiring. I mean, \
they're screwing everybody, \"and we're going to figure it out someday.\" And \
the processes are fully standardized. Whether you're a senior in Python with \
15 years of referral experience or not, you still go through all the hell \
stages."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324896385278635`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"068144b3-544f-4b77-b10a-a25b171b8ebc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The fate of fate I started to go to interviews \
again, and I want to share some observations. On this, I just give advice to \
everyone in enterprise companies about how the recruitment process should be \
structured.\\n\\n## Advice to candidates\\n\\nIn the last five years, I've \
been through several hundred interviews on both sides. So, some life hacking:\
\\n\\nYou're going to have to go through the windshields. Those you're not \
going to go to. You pump the skill, or suddenly something interesting turns \
out to be, or it'll be the only place with the offer. You never know what's \
in a box of candy.\\n\\n - Get some sleep and let yourself rest on the day of \
wrath. The same live coding is quite a dumb thing; the solution may not come \
during the call but will appear immediately after.\\n- Take a glass of water. \
Drink in any unclear situation; it is a good and adequate filler.\\n- Talk to \
me. It's good if you can talk to your cat or colleague about distracted \
topics before the call. It helps relieve some tension.\\n- Take it easy. If \
they don't take you, nobody dies. Yeah, maybe it'll be harder, but in a year \
or two, you'll even say \\\"thank you.\\\" This attitude will help reduce the \
degree of stiffness a little.\\n- Be sure to ask for feedback. Without \
feedback, it's very hard to learn.\\n   I would like to remind you that \
refusal should be treated more easily. You just didn't fit this company for \
that position. It doesn't make you a bad person or a programmer. I received \
refusals with such words as \\\"overqualified\\\" and \\\"we thought you \
would fall somewhere and agree to the penny against quater,\\\" just flowers. \
Well, they don't have a job for me, maybe.\\n\\n## Advice to \
interviewers\\n\\nMore empathy. You are not a candidate, but a potential \
colleague. And you have no purpose in overthrowing him; your task is to \
understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\\n\\n## Instead of conviction\\n\\nIn my 10 years in IT, I have \
worked for many types of companies. They were mainly start-ups or small \
companies with 20\[Dash]30 people. So, the interviews at the enterprise are \
strikingly different from theirs. Recruiters have a huge flow of vacancies \
and resumes, so wild options are possible at first sight. For example, after \
seven successful interviews, I was told that they could not find a position \
for me. WTF?! But as an excuse, I can say that they have streaming hiring. I \
mean, they're screwing everybody, \\\"and we're going to figure it out \
someday.\\\" And the processes are fully standardized. Whether you're a \
senior in Python with 15 years of referral experience or not, you still go \
through all the hell stages.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The fate of fate I started to go to interviews again, and I want to share \
some observations. On this, I just give advice to everyone in enterprise \
companies about how the recruitment process should be structured.\n\n## \
Advice to candidates\n\nIn the last five years, I've been through several \
hundred interviews on both sides. So, some life hacking:\n\nYou're going to \
have to go through the windshields. Those you're not going to go to. You pump \
the skill, or suddenly something interesting turns out to be, or it'll be the \
only place with the offer. You never know what's in a box of candy.\n\n - Get \
some sleep and let yourself rest on the day of wrath. The same live coding is \
quite a dumb thing; the solution may not come during the call but will appear \
immediately after.\n- Take a glass of water. Drink in any unclear situation; \
it is a good and adequate filler.\n- Talk to me. It's good if you can talk to \
your cat or colleague about distracted topics before the call. It helps \
relieve some tension.\n- Take it easy. If they don't take you, nobody dies. \
Yeah, maybe it'll be harder, but in a year or two, you'll even say \"thank \
you.\" This attitude will help reduce the degree of stiffness a little.\n- Be \
sure to ask for feedback. Without feedback, it's very hard to learn.\n   I \
would like to remind you that refusal should be treated more easily. You just \
didn't fit this company for that position. It doesn't make you a bad person \
or a programmer. I received refusals with such words as \"overqualified\" and \
\"we thought you would fall somewhere and agree to the penny against \
quater,\" just flowers. Well, they don't have a job for me, maybe.\n\n## \
Advice to interviewers\n\nMore empathy. You are not a candidate, but a \
potential colleague. And you have no purpose in overthrowing him; your task \
is to understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\n\n## Instead of conviction\n\nIn my 10 years in IT, I have worked \
for many types of companies. They were mainly start-ups or small companies \
with 20\[Dash]30 people. So, the interviews at the enterprise are strikingly \
different from theirs. Recruiters have a huge flow of vacancies and resumes, \
so wild options are possible at first sight. For example, after seven \
successful interviews, I was told that they could not find a position for me. \
WTF?! But as an excuse, I can say that they have streaming hiring. I mean, \
they're screwing everybody, \"and we're going to figure it out someday.\" And \
the processes are fully standardized. Whether you're a senior in Python with \
15 years of referral experience or not, you still go through all the hell \
stages."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324897427197742`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9c27e9bf-be90-456e-8f6d-9ac9bd78c332"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The fate of fate I started to go to interviews \
again, and I want to share some observations. On this, I just give advice to \
everyone in enterprise companies about how the recruitment process should be \
structured.\\n\\n## Advice to candidates\\n\\nIn the last five years, I've \
been through several hundred interviews on both sides. So, some life hacking:\
\\n\\nYou're going to have to go through the windshields. Those you're not \
going to go to. You pump the skill, or suddenly something interesting turns \
out to be, or it'll be the only place with the offer. You never know what's \
in a box of candy.\\n\\n - Get some sleep and let yourself rest on the day of \
wrath. The same live coding is quite a dumb thing; the solution may not come \
during the call but will appear immediately after.\\n- Take a glass of water. \
Drink in any unclear situation; it is a good and adequate filler.\\n- Talk to \
me. It's good if you can talk to your cat or colleague about distracted \
topics before the call. It helps relieve some tension.\\n- Take it easy. If \
they don't take you, nobody dies. Yeah, maybe it'll be harder, but in a year \
or two, you'll even say \\\"thank you.\\\" This attitude will help reduce the \
degree of stiffness a little.\\n- Be sure to ask for feedback. Without \
feedback, it's very hard to learn.\\n   I would like to remind you that \
refusal should be treated more easily. You just didn't fit this company for \
that position. It doesn't make you a bad person or a programmer. I received \
refusals with such words as \\\"overqualified\\\" and \\\"we thought you \
would fall somewhere and agree to the penny against quater,\\\" just flowers. \
Well, they don't have a job for me, maybe.\\n\\n## Advice to \
interviewers\\n\\nMore empathy. You are not a candidate, but a potential \
colleague. And you have no purpose in overthrowing him; your task is to \
understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\\n\\n## Instead of conviction\\n\\nIn my 10 years in IT, I have \
worked for many types of companies. They were mainly start-ups or small \
companies with 20\[Dash]30 people. So, the interviews at the enterprise are \
strikingly different from theirs. Recruiters have a huge flow of vacancies \
and resumes, so wild options are possible at first sight. For example, after \
seven successful interviews, I was told that they could not find a position \
for me. WTF?! But as an excuse, I can say that they have streaming hiring. I \
mean, they're screwing everybody, \\\"and we're going to figure it out \
someday.\\\" And the processes are fully standardized. Whether you're a \
senior in Python with 15 years of referral experience or not, you still go \
through all the hell stages.\"\>"}],
  SequenceForm[
  "newText: ", 
   "The fate of fate I started to go to interviews again, and I want to share \
some observations. On this, I just give advice to everyone in enterprise \
companies about how the recruitment process should be structured.\n\n## \
Advice to candidates\n\nIn the last five years, I've been through several \
hundred interviews on both sides. So, some life hacking:\n\nYou're going to \
have to go through the windshields. Those you're not going to go to. You pump \
the skill, or suddenly something interesting turns out to be, or it'll be the \
only place with the offer. You never know what's in a box of candy.\n\n - Get \
some sleep and let yourself rest on the day of wrath. The same live coding is \
quite a dumb thing; the solution may not come during the call but will appear \
immediately after.\n- Take a glass of water. Drink in any unclear situation; \
it is a good and adequate filler.\n- Talk to me. It's good if you can talk to \
your cat or colleague about distracted topics before the call. It helps \
relieve some tension.\n- Take it easy. If they don't take you, nobody dies. \
Yeah, maybe it'll be harder, but in a year or two, you'll even say \"thank \
you.\" This attitude will help reduce the degree of stiffness a little.\n- Be \
sure to ask for feedback. Without feedback, it's very hard to learn.\n   I \
would like to remind you that refusal should be treated more easily. You just \
didn't fit this company for that position. It doesn't make you a bad person \
or a programmer. I received refusals with such words as \"overqualified\" and \
\"we thought you would fall somewhere and agree to the penny against \
quater,\" just flowers. Well, they don't have a job for me, maybe.\n\n## \
Advice to interviewers\n\nMore empathy. You are not a candidate, but a \
potential colleague. And you have no purpose in overthrowing him; your task \
is to understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\n\n## Instead of conviction\n\nIn my 10 years in IT, I have worked \
for many types of companies. They were mainly start-ups or small companies \
with 20\[Dash]30 people. So, the interviews at the enterprise are strikingly \
different from theirs. Recruiters have a huge flow of vacancies and resumes, \
so wild options are possible at first sight. For example, after seven \
successful interviews, I was told that they could not find a position for me. \
WTF?! But as an excuse, I can say that they have streaming hiring. I mean, \
they're screwing everybody, \"and we're going to figure it out someday.\" And \
the processes are fully standardized. Whether you're a senior in Python with \
15 years of referral experience or not, you still go through all the hell \
stages."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324897428571033`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"d28b2f8e-c86e-45ec-bc37-66eb438bf5b6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Interview tips'\\ndate = \
2024-07-07T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"python\\\"]\\ntags = [\\\"advice\\\", \\\"it\\\", \\\"wtf\\\", \
\\\"interviews\\\", \\\"years\\\", \\\"companies\\\", \
\\\"position\\\"]\\ncover_image='/images/cover/knoxwelle__2019-12-16T002054.\
000Z.jpg'\\n+++\\nThe fate of fate I started to go to interviews again, and I \
want to share some observations. On this, I just give advice to everyone in \
enterprise companies about how the recruitment process should be \
structured.\\n\\n## Advice to candidates\\n\\nIn the last five years, I've \
been through several hundred interviews on both sides. So, some life hacking:\
\\n\\nYou're going to have to go through the windshields. Those you're not \
going to go to. You pump the skill, or suddenly something interesting turns \
out to be, or it'll be the only place with the offer. You never know what's \
in a box of candy.\\n\\n - Get some sleep and let yourself rest on the day of \
wrath. The same live coding is quite a dumb thing; the solution may not come \
during the call but will appear immediately after.\\n- Take a glass of water. \
Drink in any unclear situation; it is a good and adequate filler.\\n- Talk to \
me. It's good if you can talk to your cat or colleague about distracted \
topics before the call. It helps relieve some tension.\\n- Take it easy. If \
they don't take you, nobody dies. Yeah, maybe it'll be harder, but in a year \
or two, you'll even say \\\"thank you.\\\" This attitude will help reduce the \
degree of stiffness a little.\\n- Be sure to ask for feedback. Without \
feedback, it's very hard to learn.\\n   I would like to remind you that \
refusal should be treated more easily. You just didn't fit this company for \
that position. It doesn't make you a bad person or a programmer. I received \
refusals with such words as \\\"overqualified\\\" and \\\"we thought you \
would fall somewhere and agree to the penny against quater,\\\" just flowers. \
Well, they don't have a job for me, maybe.\\n\\n## Advice to \
interviewers\\n\\nMore empathy. You are not a candidate, but a potential \
colleague. And you have no purpose in overthrowing him; your task is to \
understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\\n\\n## Instead of conviction\\n\\nIn my 10 years in IT, I have \
worked for many types of companies. They were mainly start-ups or small \
companies with 20\[Dash]30 people. So, the interviews at the enterprise are \
strikingly different from theirs. Recruiters have a huge flow of vacancies \
and resumes, so wild options are possible at first sight. For example, after \
seven successful interviews, I was told that they could not find a position \
for me. WTF?! But as an excuse, I can say that they have streaming hiring. I \
mean, they're screwing everybody, \\\"and we're going to figure it out \
someday.\\\" And the processes are fully standardized. Whether you're a \
senior in Python with 15 years of referral experience or not, you still go \
through all the hell stages.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Interview tips'\ndate = 2024-07-07T00:00:00-07:00\ndraft = \
false\ncategories = [\"recruiting\", \"python\"]\ntags = [\"advice\", \"it\", \
\"wtf\", \"interviews\", \"years\", \"companies\", \"position\"]\n\
cover_image='/images/cover/knoxwelle__2019-12-16T002054.000Z.jpg'\n+++\nThe \
fate of fate I started to go to interviews again, and I want to share some \
observations. On this, I just give advice to everyone in enterprise companies \
about how the recruitment process should be structured.\n\n## Advice to \
candidates\n\nIn the last five years, I've been through several hundred \
interviews on both sides. So, some life hacking:\n\nYou're going to have to \
go through the windshields. Those you're not going to go to. You pump the \
skill, or suddenly something interesting turns out to be, or it'll be the \
only place with the offer. You never know what's in a box of candy.\n\n - Get \
some sleep and let yourself rest on the day of wrath. The same live coding is \
quite a dumb thing; the solution may not come during the call but will appear \
immediately after.\n- Take a glass of water. Drink in any unclear situation; \
it is a good and adequate filler.\n- Talk to me. It's good if you can talk to \
your cat or colleague about distracted topics before the call. It helps \
relieve some tension.\n- Take it easy. If they don't take you, nobody dies. \
Yeah, maybe it'll be harder, but in a year or two, you'll even say \"thank \
you.\" This attitude will help reduce the degree of stiffness a little.\n- Be \
sure to ask for feedback. Without feedback, it's very hard to learn.\n   I \
would like to remind you that refusal should be treated more easily. You just \
didn't fit this company for that position. It doesn't make you a bad person \
or a programmer. I received refusals with such words as \"overqualified\" and \
\"we thought you would fall somewhere and agree to the penny against \
quater,\" just flowers. Well, they don't have a job for me, maybe.\n\n## \
Advice to interviewers\n\nMore empathy. You are not a candidate, but a \
potential colleague. And you have no purpose in overthrowing him; your task \
is to understand if he can perform the duties that he will have and if it is \
comfortable for you to communicate. It's impossible to do that in an hour and \
a half.\n\n## Instead of conviction\n\nIn my 10 years in IT, I have worked \
for many types of companies. They were mainly start-ups or small companies \
with 20\[Dash]30 people. So, the interviews at the enterprise are strikingly \
different from theirs. Recruiters have a huge flow of vacancies and resumes, \
so wild options are possible at first sight. For example, after seven \
successful interviews, I was told that they could not find a position for me. \
WTF?! But as an excuse, I can say that they have streaming hiring. I mean, \
they're screwing everybody, \"and we're going to figure it out someday.\" And \
the processes are fully standardized. Whether you're a senior in Python with \
15 years of referral experience or not, you still go through all the hell \
stages."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489742878113*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"cb274ab8-1bd6-45c0-8a05-4a143277cfdf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "15", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\It is never too early to think about \
productivity.md\"\>"}],
  SequenceForm[
  15, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\It \
is never too early to think about productivity.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324897428931074`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e4218be1-5665-4f34-8168-9d565c1fd253"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"The needs of users of business applications \
manifest primarily in functional requirements. Non-functional aspects of the \
system (such as performance, flexibility, downtime, support needs, etc.) are \
in the architect\[CloseCurlyQuote]s hands. At the same time, preliminary \
testing of non-functional requirements is often postponed to a very late \
stage of the development cycle and sometimes fully delegated to the system \
maintenance team.\\n\\nThis mistake is much more common than it should be. It \
can be based on various reasons.Worrying about the speed and flexibility of \
the program, which is not yet exactly performing the required function, may \
seem pointless. Test environments and tests themselves are quite \
complex.Early working versions of the system may not be exposed to a \
realistic load due to insufficient intensity of use.\\n\\nHowever, by putting \
performance out of sight to the later stages of a project's life cycle, you \
lose a huge amount of information about when performance changes occurred. If \
performance is one of the important criteria for evaluating system \
architecture and design, performance testing should start as early as \
possible.If you use a flexible development methodology with two-week \
iterations, then performance testing, in my opinion, should be included in \
the process no later than the third iteration.\\n\\nWhy is it so important? \
First of all, you will at least be aware of what changes have led to the \
sharp decline in productivity.If there are performance problems in the \
system, you don\[CloseCurlyQuote]t have to analyze the entire architecture; \
it\[CloseCurlyQuote]s enough to focus on the points that have changed \
recently. Starting performance testing early and performing it frequently \
narrows the range of changes that need to be analyzed.\\n\\nEven if you do \
not try to diagnose performance during early testing, you will at least get a \
set of basic indicators that you can reflect on in your future work.This \
information will then play a very important role in identifying and \
addressing the source of performance problems.\\n\\nThis approach also \
enables the decisions taken during the design and work on the system \
architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished \
system.\\n\\nIt is well known that organizing technical testing is not an \
easy task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "The needs of users of business applications manifest primarily in \
functional requirements. Non-functional aspects of the system (such as \
performance, flexibility, downtime, support needs, etc.) are in the architect\
\[CloseCurlyQuote]s hands. At the same time, preliminary testing of \
non-functional requirements is often postponed to a very late stage of the \
development cycle and sometimes fully delegated to the system maintenance \
team.\n\nThis mistake is much more common than it should be. It can be based \
on various reasons.Worrying about the speed and flexibility of the program, \
which is not yet exactly performing the required function, may seem \
pointless. Test environments and tests themselves are quite complex.Early \
working versions of the system may not be exposed to a realistic load due to \
insufficient intensity of use.\n\nHowever, by putting performance out of \
sight to the later stages of a project's life cycle, you lose a huge amount \
of information about when performance changes occurred. If performance is one \
of the important criteria for evaluating system architecture and design, \
performance testing should start as early as possible.If you use a flexible \
development methodology with two-week iterations, then performance testing, \
in my opinion, should be included in the process no later than the third \
iteration.\n\nWhy is it so important? First of all, you will at least be \
aware of what changes have led to the sharp decline in productivity.If there \
are performance problems in the system, you don\[CloseCurlyQuote]t have to \
analyze the entire architecture; it\[CloseCurlyQuote]s enough to focus on the \
points that have changed recently. Starting performance testing early and \
performing it frequently narrows the range of changes that need to be \
analyzed.\n\nEven if you do not try to diagnose performance during early \
testing, you will at least get a set of basic indicators that you can reflect \
on in your future work.This information will then play a very important role \
in identifying and addressing the source of performance problems.\n\nThis \
approach also enables the decisions taken during the design and work on the \
system architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished system.\n\n\
It is well known that organizing technical testing is not an easy \
task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324897527434397`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"4951fa0e-2035-4819-925c-8ab0d5d78be4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The needs of users of business applications \
manifest primarily in functional requirements. Non-functional aspects of the \
system (such as performance, flexibility, downtime, support needs, etc.) are \
in the architect\[CloseCurlyQuote]s hands. At the same time, preliminary \
testing of non-functional requirements is often postponed to a very late \
stage of the development cycle and sometimes fully delegated to the system \
maintenance team.\\n\\nThis mistake is much more common than it should be. It \
can be based on various reasons.Worrying about the speed and flexibility of \
the program, which is not yet exactly performing the required function, may \
seem pointless. Test environments and tests themselves are quite \
complex.Early working versions of the system may not be exposed to a \
realistic load due to insufficient intensity of use.\\n\\nHowever, by putting \
performance out of sight to the later stages of a project's life cycle, you \
lose a huge amount of information about when performance changes occurred. If \
performance is one of the important criteria for evaluating system \
architecture and design, performance testing should start as early as \
possible.If you use a flexible development methodology with two-week \
iterations, then performance testing, in my opinion, should be included in \
the process no later than the third iteration.\\n\\nWhy is it so important? \
First of all, you will at least be aware of what changes have led to the \
sharp decline in productivity.If there are performance problems in the \
system, you don\[CloseCurlyQuote]t have to analyze the entire architecture; \
it\[CloseCurlyQuote]s enough to focus on the points that have changed \
recently. Starting performance testing early and performing it frequently \
narrows the range of changes that need to be analyzed.\\n\\nEven if you do \
not try to diagnose performance during early testing, you will at least get a \
set of basic indicators that you can reflect on in your future work.This \
information will then play a very important role in identifying and \
addressing the source of performance problems.\\n\\nThis approach also \
enables the decisions taken during the design and work on the system \
architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished \
system.\\n\\nIt is well known that organizing technical testing is not an \
easy task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The needs of users of business applications manifest primarily in \
functional requirements. Non-functional aspects of the system (such as \
performance, flexibility, downtime, support needs, etc.) are in the architect\
\[CloseCurlyQuote]s hands. At the same time, preliminary testing of \
non-functional requirements is often postponed to a very late stage of the \
development cycle and sometimes fully delegated to the system maintenance \
team.\n\nThis mistake is much more common than it should be. It can be based \
on various reasons.Worrying about the speed and flexibility of the program, \
which is not yet exactly performing the required function, may seem \
pointless. Test environments and tests themselves are quite complex.Early \
working versions of the system may not be exposed to a realistic load due to \
insufficient intensity of use.\n\nHowever, by putting performance out of \
sight to the later stages of a project's life cycle, you lose a huge amount \
of information about when performance changes occurred. If performance is one \
of the important criteria for evaluating system architecture and design, \
performance testing should start as early as possible.If you use a flexible \
development methodology with two-week iterations, then performance testing, \
in my opinion, should be included in the process no later than the third \
iteration.\n\nWhy is it so important? First of all, you will at least be \
aware of what changes have led to the sharp decline in productivity.If there \
are performance problems in the system, you don\[CloseCurlyQuote]t have to \
analyze the entire architecture; it\[CloseCurlyQuote]s enough to focus on the \
points that have changed recently. Starting performance testing early and \
performing it frequently narrows the range of changes that need to be \
analyzed.\n\nEven if you do not try to diagnose performance during early \
testing, you will at least get a set of basic indicators that you can reflect \
on in your future work.This information will then play a very important role \
in identifying and addressing the source of performance problems.\n\nThis \
approach also enables the decisions taken during the design and work on the \
system architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished system.\n\n\
It is well known that organizing technical testing is not an easy \
task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489854398254*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"54471430-d272-41cf-82ed-a0a68e1e464d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The needs of users of business applications \
manifest primarily in functional requirements. Non-functional aspects of the \
system (such as performance, flexibility, downtime, support needs, etc.) are \
in the architect\[CloseCurlyQuote]s hands. At the same time, preliminary \
testing of non-functional requirements is often postponed to a very late \
stage of the development cycle and sometimes fully delegated to the system \
maintenance team.\\n\\nThis mistake is much more common than it should be. It \
can be based on various reasons.Worrying about the speed and flexibility of \
the program, which is not yet exactly performing the required function, may \
seem pointless. Test environments and tests themselves are quite \
complex.Early working versions of the system may not be exposed to a \
realistic load due to insufficient intensity of use.\\n\\nHowever, by putting \
performance out of sight to the later stages of a project's life cycle, you \
lose a huge amount of information about when performance changes occurred. If \
performance is one of the important criteria for evaluating system \
architecture and design, performance testing should start as early as \
possible.If you use a flexible development methodology with two-week \
iterations, then performance testing, in my opinion, should be included in \
the process no later than the third iteration.\\n\\nWhy is it so important? \
First of all, you will at least be aware of what changes have led to the \
sharp decline in productivity.If there are performance problems in the \
system, you don\[CloseCurlyQuote]t have to analyze the entire architecture; \
it\[CloseCurlyQuote]s enough to focus on the points that have changed \
recently. Starting performance testing early and performing it frequently \
narrows the range of changes that need to be analyzed.\\n\\nEven if you do \
not try to diagnose performance during early testing, you will at least get a \
set of basic indicators that you can reflect on in your future work.This \
information will then play a very important role in identifying and \
addressing the source of performance problems.\\n\\nThis approach also \
enables the decisions taken during the design and work on the system \
architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished \
system.\\n\\nIt is well known that organizing technical testing is not an \
easy task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage.\"\>"}],
  SequenceForm[
  "newText: ", 
   "The needs of users of business applications manifest primarily in \
functional requirements. Non-functional aspects of the system (such as \
performance, flexibility, downtime, support needs, etc.) are in the architect\
\[CloseCurlyQuote]s hands. At the same time, preliminary testing of \
non-functional requirements is often postponed to a very late stage of the \
development cycle and sometimes fully delegated to the system maintenance \
team.\n\nThis mistake is much more common than it should be. It can be based \
on various reasons.Worrying about the speed and flexibility of the program, \
which is not yet exactly performing the required function, may seem \
pointless. Test environments and tests themselves are quite complex.Early \
working versions of the system may not be exposed to a realistic load due to \
insufficient intensity of use.\n\nHowever, by putting performance out of \
sight to the later stages of a project's life cycle, you lose a huge amount \
of information about when performance changes occurred. If performance is one \
of the important criteria for evaluating system architecture and design, \
performance testing should start as early as possible.If you use a flexible \
development methodology with two-week iterations, then performance testing, \
in my opinion, should be included in the process no later than the third \
iteration.\n\nWhy is it so important? First of all, you will at least be \
aware of what changes have led to the sharp decline in productivity.If there \
are performance problems in the system, you don\[CloseCurlyQuote]t have to \
analyze the entire architecture; it\[CloseCurlyQuote]s enough to focus on the \
points that have changed recently. Starting performance testing early and \
performing it frequently narrows the range of changes that need to be \
analyzed.\n\nEven if you do not try to diagnose performance during early \
testing, you will at least get a set of basic indicators that you can reflect \
on in your future work.This information will then play a very important role \
in identifying and addressing the source of performance problems.\n\nThis \
approach also enables the decisions taken during the design and work on the \
system architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished system.\n\n\
It is well known that organizing technical testing is not an easy \
task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324898545441494`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"752462fc-a54f-406c-ab1d-460ed0938ca4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'It is never too early to think \
about productivity'\\ndate = 2024-06-30T00:00:00-07:00\\ndraft = \
false\\ncategories = []\\ntags = [\\\"first\\\", \\\"performance\\\", \
\\\"system\\\", \\\"testing\\\", \\\"problems\\\", \
\\\"architecture\\\"]\\ncover_image='/images/cover/knoxwelle__2017-12-\
29T205612.000Z.jpg'\\n+++\\nThe needs of users of business applications \
manifest primarily in functional requirements. Non-functional aspects of the \
system (such as performance, flexibility, downtime, support needs, etc.) are \
in the architect\[CloseCurlyQuote]s hands. At the same time, preliminary \
testing of non-functional requirements is often postponed to a very late \
stage of the development cycle and sometimes fully delegated to the system \
maintenance team.\\n\\nThis mistake is much more common than it should be. It \
can be based on various reasons.Worrying about the speed and flexibility of \
the program, which is not yet exactly performing the required function, may \
seem pointless. Test environments and tests themselves are quite \
complex.Early working versions of the system may not be exposed to a \
realistic load due to insufficient intensity of use.\\n\\nHowever, by putting \
performance out of sight to the later stages of a project's life cycle, you \
lose a huge amount of information about when performance changes occurred. If \
performance is one of the important criteria for evaluating system \
architecture and design, performance testing should start as early as \
possible.If you use a flexible development methodology with two-week \
iterations, then performance testing, in my opinion, should be included in \
the process no later than the third iteration.\\n\\nWhy is it so important? \
First of all, you will at least be aware of what changes have led to the \
sharp decline in productivity.If there are performance problems in the \
system, you don\[CloseCurlyQuote]t have to analyze the entire architecture; \
it\[CloseCurlyQuote]s enough to focus on the points that have changed \
recently. Starting performance testing early and performing it frequently \
narrows the range of changes that need to be analyzed.\\n\\nEven if you do \
not try to diagnose performance during early testing, you will at least get a \
set of basic indicators that you can reflect on in your future work.This \
information will then play a very important role in identifying and \
addressing the source of performance problems.\\n\\nThis approach also \
enables the decisions taken during the design and work on the system \
architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished \
system.\\n\\nIt is well known that organizing technical testing is not an \
easy task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'It is never too early to think about productivity'\ndate = \
2024-06-30T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"first\", \
\"performance\", \"system\", \"testing\", \"problems\", \"architecture\"]\n\
cover_image='/images/cover/knoxwelle__2017-12-29T205612.000Z.jpg'\n+++\nThe \
needs of users of business applications manifest primarily in functional \
requirements. Non-functional aspects of the system (such as performance, \
flexibility, downtime, support needs, etc.) are in the architect\
\[CloseCurlyQuote]s hands. At the same time, preliminary testing of \
non-functional requirements is often postponed to a very late stage of the \
development cycle and sometimes fully delegated to the system maintenance \
team.\n\nThis mistake is much more common than it should be. It can be based \
on various reasons.Worrying about the speed and flexibility of the program, \
which is not yet exactly performing the required function, may seem \
pointless. Test environments and tests themselves are quite complex.Early \
working versions of the system may not be exposed to a realistic load due to \
insufficient intensity of use.\n\nHowever, by putting performance out of \
sight to the later stages of a project's life cycle, you lose a huge amount \
of information about when performance changes occurred. If performance is one \
of the important criteria for evaluating system architecture and design, \
performance testing should start as early as possible.If you use a flexible \
development methodology with two-week iterations, then performance testing, \
in my opinion, should be included in the process no later than the third \
iteration.\n\nWhy is it so important? First of all, you will at least be \
aware of what changes have led to the sharp decline in productivity.If there \
are performance problems in the system, you don\[CloseCurlyQuote]t have to \
analyze the entire architecture; it\[CloseCurlyQuote]s enough to focus on the \
points that have changed recently. Starting performance testing early and \
performing it frequently narrows the range of changes that need to be \
analyzed.\n\nEven if you do not try to diagnose performance during early \
testing, you will at least get a set of basic indicators that you can reflect \
on in your future work.This information will then play a very important role \
in identifying and addressing the source of performance problems.\n\nThis \
approach also enables the decisions taken during the design and work on the \
system architecture to be tested in the context of actual performance \
requirements.If the system is subject to strict requirements, such early \
verification is important for the timely delivery of the finished system.\n\n\
It is well known that organizing technical testing is not an easy \
task.Configuring the environment, generating data sets, defining the \
necessary test cases\[LongDash]all this takes a lot of time. Early \
performance testing facilitates the phased development of the test \
environment, saving you significantly more time and effort to detect \
performance problems at a later stage."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324898545621653`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9c0c7504-b66b-42b8-b189-845ba2773caa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "16", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Knowledge test.md\"\>"}],
  SequenceForm[
  16, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Knowledge test.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.93248985457769*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e86244fa-9bb1-4b5c-bab7-7876bbd2f257"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time it is about testing knowledge in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Knowledge test\\n\\nSo, I talked about five stages of IT \
interviews. You probably thought I exaggerated. But no: recruiter, Python \
test, live coding, system design, soft skills. Then another call for the \
offer presentation. So, the second stage is just some kind of Facebook spam. \
Not only can it be combined with live coding if it is not just to code but to \
discuss the solution, but also the questions on it, softly speaking, are \
stupid. Primitive and old-fashioned. So, according to the company's logic, \
you can send soaps there, so you don't waste your gentlemen's time. I'm not, \
of course, Don Carleone, but Middle just can't appreciate the master's \
knowledge. Banally, he doesn't look there, but most importantly, \
superficially.\\n\\nFor example, the question of how to measure the running \
time of the program. Well, 'time.time' is complicated. Although I would have \
taken some more suitable tool. But the correct answer is to use \
'time.monotonic'. No questions\[LongDash]it's absolutely true, but will we \
really measure in the night of 30 June to 1 July 2024? And is monotonous time \
really monotone evenly? After clarifying questions, I realized that the \
interlocutor is aware of the monotonous time but has absolutely no idea about \
the NTP and the transitional second.\\n\\nAnd again, the NAC interview means \
that I can also know the level of who I'm going to have to work with. One of \
them said, \\\"Here I'm asking questions.\\\" For some reason, I immediately \
thought we didn't work.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time it is about testing knowledge in enterprise companies \
and how the recruitment process should be constructed.\n\n## Knowledge test\n\
\nSo, I talked about five stages of IT interviews. You probably thought I \
exaggerated. But no: recruiter, Python test, live coding, system design, soft \
skills. Then another call for the offer presentation. So, the second stage is \
just some kind of Facebook spam. Not only can it be combined with live coding \
if it is not just to code but to discuss the solution, but also the questions \
on it, softly speaking, are stupid. Primitive and old-fashioned. So, \
according to the company's logic, you can send soaps there, so you don't \
waste your gentlemen's time. I'm not, of course, Don Carleone, but Middle \
just can't appreciate the master's knowledge. Banally, he doesn't look there, \
but most importantly, superficially.\n\nFor example, the question of how to \
measure the running time of the program. Well, 'time.time' is complicated. \
Although I would have taken some more suitable tool. But the correct answer \
is to use 'time.monotonic'. No questions\[LongDash]it's absolutely true, but \
will we really measure in the night of 30 June to 1 July 2024? And is \
monotonous time really monotone evenly? After clarifying questions, I \
realized that the interlocutor is aware of the monotonous time but has \
absolutely no idea about the NTP and the transitional second.\n\nAnd again, \
the NAC interview means that I can also know the level of who I'm going to \
have to work with. One of them said, \"Here I'm asking questions.\" For some \
reason, I immediately thought we didn't work."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489864676177*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"25345bba-861a-41ca-8e53-b4787c05f126"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time it is about testing knowledge in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Knowledge test\\n\\nSo, I talked about five stages of IT \
interviews. You probably thought I exaggerated. But no: recruiter, Python \
test, live coding, system design, soft skills. Then another call for the \
offer presentation. So, the second stage is just some kind of Facebook spam. \
Not only can it be combined with live coding if it is not just to code but to \
discuss the solution, but also the questions on it, softly speaking, are \
stupid. Primitive and old-fashioned. So, according to the company's logic, \
you can send soaps there, so you don't waste your gentlemen's time. I'm not, \
of course, Don Carleone, but Middle just can't appreciate the master's \
knowledge. Banally, he doesn't look there, but most importantly, \
superficially.\\n\\nFor example, the question of how to measure the running \
time of the program. Well, 'time.time' is complicated. Although I would have \
taken some more suitable tool. But the correct answer is to use \
'time.monotonic'. No questions\[LongDash]it's absolutely true, but will we \
really measure in the night of 30 June to 1 July 2024? And is monotonous time \
really monotone evenly? After clarifying questions, I realized that the \
interlocutor is aware of the monotonous time but has absolutely no idea about \
the NTP and the transitional second.\\n\\nAnd again, the NAC interview means \
that I can also know the level of who I'm going to have to work with. One of \
them said, \\\"Here I'm asking questions.\\\" For some reason, I immediately \
thought we didn't work.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time it is about testing knowledge in enterprise companies \
and how the recruitment process should be constructed.\n\n## Knowledge test\n\
\nSo, I talked about five stages of IT interviews. You probably thought I \
exaggerated. But no: recruiter, Python test, live coding, system design, soft \
skills. Then another call for the offer presentation. So, the second stage is \
just some kind of Facebook spam. Not only can it be combined with live coding \
if it is not just to code but to discuss the solution, but also the questions \
on it, softly speaking, are stupid. Primitive and old-fashioned. So, \
according to the company's logic, you can send soaps there, so you don't \
waste your gentlemen's time. I'm not, of course, Don Carleone, but Middle \
just can't appreciate the master's knowledge. Banally, he doesn't look there, \
but most importantly, superficially.\n\nFor example, the question of how to \
measure the running time of the program. Well, 'time.time' is complicated. \
Although I would have taken some more suitable tool. But the correct answer \
is to use 'time.monotonic'. No questions\[LongDash]it's absolutely true, but \
will we really measure in the night of 30 June to 1 July 2024? And is \
monotonous time really monotone evenly? After clarifying questions, I \
realized that the interlocutor is aware of the monotonous time but has \
absolutely no idea about the NTP and the transitional second.\n\nAnd again, \
the NAC interview means that I can also know the level of who I'm going to \
have to work with. One of them said, \"Here I'm asking questions.\" For some \
reason, I immediately thought we didn't work."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489935915642*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"4094f69d-4d8d-412b-a6e6-1e5fd69f1c87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time it is about testing knowledge in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Knowledge test\\n\\nSo, I talked about five stages of IT \
interviews. You probably thought I exaggerated. But no: recruiter, Python \
test, live coding, system design, soft skills. Then another call for the \
offer presentation. So, the second stage is just some kind of Facebook spam. \
Not only can it be combined with live coding if it is not just to code but to \
discuss the solution, but also the questions on it, softly speaking, are \
stupid. Primitive and old-fashioned. So, according to the company's logic, \
you can send soaps there, so you don't waste your gentlemen's time. I'm not, \
of course, Don Carleone, but Middle just can't appreciate the master's \
knowledge. Banally, he doesn't look there, but most importantly, \
superficially.\\n\\nFor example, the question of how to measure the running \
time of the program. Well, 'time.time' is complicated. Although I would have \
taken some more suitable tool. But the correct answer is to use \
'time.monotonic'. No questions\[LongDash]it's absolutely true, but will we \
really measure in the night of 30 June to 1 July 2024? And is monotonous time \
really monotone evenly? After clarifying questions, I realized that the \
interlocutor is aware of the monotonous time but has absolutely no idea about \
the NTP and the transitional second.\\n\\nAnd again, the NAC interview means \
that I can also know the level of who I'm going to have to work with. One of \
them said, \\\"Here I'm asking questions.\\\" For some reason, I immediately \
thought we didn't work.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time it is about testing knowledge in enterprise companies \
and how the recruitment process should be constructed.\n\n## Knowledge test\n\
\nSo, I talked about five stages of IT interviews. You probably thought I \
exaggerated. But no: recruiter, Python test, live coding, system design, soft \
skills. Then another call for the offer presentation. So, the second stage is \
just some kind of Facebook spam. Not only can it be combined with live coding \
if it is not just to code but to discuss the solution, but also the questions \
on it, softly speaking, are stupid. Primitive and old-fashioned. So, \
according to the company's logic, you can send soaps there, so you don't \
waste your gentlemen's time. I'm not, of course, Don Carleone, but Middle \
just can't appreciate the master's knowledge. Banally, he doesn't look there, \
but most importantly, superficially.\n\nFor example, the question of how to \
measure the running time of the program. Well, 'time.time' is complicated. \
Although I would have taken some more suitable tool. But the correct answer \
is to use 'time.monotonic'. No questions\[LongDash]it's absolutely true, but \
will we really measure in the night of 30 June to 1 July 2024? And is \
monotonous time really monotone evenly? After clarifying questions, I \
realized that the interlocutor is aware of the monotonous time but has \
absolutely no idea about the NTP and the transitional second.\n\nAnd again, \
the NAC interview means that I can also know the level of who I'm going to \
have to work with. One of them said, \"Here I'm asking questions.\" For some \
reason, I immediately thought we didn't work."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489936262457*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b7342139-0be7-4dff-ab0f-948b702c8857"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Knowledge test'\\ndate = \
2024-07-24T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"carleone\\\", \\\"nac\\\", \\\"python\\\"]\\ntags = [\\\"python\\\", \
\\\"facebook\\\", \\\"don carleone\\\", \\\"middle\\\", \\\"june\\\", \
\\\"july\\\", \\\"ntp\\\", \\\"time\\\", \\\"questions\\\", \
\\\"knowledge\\\", \\\"work\\\", \
\\\"measure\\\"]\\ncover_image='/images/cover/knoxwelle__2018-10-24T220947.\
000Z.jpg'\\n+++\\nI've been going to interviews again, and I'd like to share \
some observations. This time it is about testing knowledge in enterprise \
companies and how the recruitment process should be constructed.\\n\\n## \
Knowledge test\\n\\nSo, I talked about five stages of IT interviews. You \
probably thought I exaggerated. But no: recruiter, Python test, live coding, \
system design, soft skills. Then another call for the offer presentation. So, \
the second stage is just some kind of Facebook spam. Not only can it be \
combined with live coding if it is not just to code but to discuss the \
solution, but also the questions on it, softly speaking, are stupid. \
Primitive and old-fashioned. So, according to the company's logic, you can \
send soaps there, so you don't waste your gentlemen's time. I'm not, of \
course, Don Carleone, but Middle just can't appreciate the master's \
knowledge. Banally, he doesn't look there, but most importantly, \
superficially.\\n\\nFor example, the question of how to measure the running \
time of the program. Well, 'time.time' is complicated. Although I would have \
taken some more suitable tool. But the correct answer is to use \
'time.monotonic'. No questions\[LongDash]it's absolutely true, but will we \
really measure in the night of 30 June to 1 July 2024? And is monotonous time \
really monotone evenly? After clarifying questions, I realized that the \
interlocutor is aware of the monotonous time but has absolutely no idea about \
the NTP and the transitional second.\\n\\nAnd again, the NAC interview means \
that I can also know the level of who I'm going to have to work with. One of \
them said, \\\"Here I'm asking questions.\\\" For some reason, I immediately \
thought we didn't work.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Knowledge test'\ndate = 2024-07-24T00:00:00-07:00\ndraft = \
false\ncategories = [\"recruiting\", \"carleone\", \"nac\", \"python\"]\ntags \
= [\"python\", \"facebook\", \"don carleone\", \"middle\", \"june\", \
\"july\", \"ntp\", \"time\", \"questions\", \"knowledge\", \"work\", \
\"measure\"]\n\
cover_image='/images/cover/knoxwelle__2018-10-24T220947.000Z.jpg'\n+++\nI've \
been going to interviews again, and I'd like to share some observations. This \
time it is about testing knowledge in enterprise companies and how the \
recruitment process should be constructed.\n\n## Knowledge test\n\nSo, I \
talked about five stages of IT interviews. You probably thought I \
exaggerated. But no: recruiter, Python test, live coding, system design, soft \
skills. Then another call for the offer presentation. So, the second stage is \
just some kind of Facebook spam. Not only can it be combined with live coding \
if it is not just to code but to discuss the solution, but also the questions \
on it, softly speaking, are stupid. Primitive and old-fashioned. So, \
according to the company's logic, you can send soaps there, so you don't \
waste your gentlemen's time. I'm not, of course, Don Carleone, but Middle \
just can't appreciate the master's knowledge. Banally, he doesn't look there, \
but most importantly, superficially.\n\nFor example, the question of how to \
measure the running time of the program. Well, 'time.time' is complicated. \
Although I would have taken some more suitable tool. But the correct answer \
is to use 'time.monotonic'. No questions\[LongDash]it's absolutely true, but \
will we really measure in the night of 30 June to 1 July 2024? And is \
monotonous time really monotone evenly? After clarifying questions, I \
realized that the interlocutor is aware of the monotonous time but has \
absolutely no idea about the NTP and the transitional second.\n\nAnd again, \
the NAC interview means that I can also know the level of who I'm going to \
have to work with. One of them said, \"Here I'm asking questions.\" For some \
reason, I immediately thought we didn't work."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932489936278981*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b35953fb-7690-4d4e-924b-3ca66207f6fa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "17", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Live Coding.md\"\>"}],
  SequenceForm[
  17, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Live Coding.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324899362944584`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"6e6b5500-8677-42ba-a322-fbce65e31fa5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about live coding in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Live Coding\\n\\nThere's always a lot of noise around \
him. Some people like it (interviews), some people don't like it at all \
(candidates), and someone goes to a psychologist after him for six months. \
This is not really to understand that the candidate is able to code; there \
are not enough extensive projects on Github, profile articles with code, \
reports after all. As I was told, this is done to ensure that everyone is \
treated equally in recruitment. Well, good luck hiring a leader or a \
gentleman in five rounds. At the second, he'll ask himself, \\\"Do I really \
need this? Well, there are already three offers,\\\" and it will fall off.\\n\
\\nAll right, live coding. Usually, you get two tasks to program. Yeah, turn \
the trees. Do you know what roffle is? You come to them later, and they don't \
have any trees at all. There's an hour for everything. And how this hour will \
pass depends very much on the interlocutor. There are those who help reason, \
elaborate the IDE, set up a two-point, and, if forgotten, show some kind of \
empathy and support\[LongDash]the candidate is still stressed. Take care of \
them! Much more often, I get those who don't even turn on the cameras. They \
just give it a job and watch the attempts. At one of these sessions, I solved \
a three-hour task. Did I get an offer? (No.) \\\"Because you probably have a \
choice, so we're not going to communicate.\\\" Epic ~~fail~~win!\\n\\nThe \
most interesting live coding experience I've ever had was with one Canadian. \
We discussed and solved the problem together. Literally together, he wrote \
one part and I wrote the second, more complicated. And that's when I realized \
another problem of this session: one-sidedness. We have a co-interview at the \
end of the day. That is, the candidate should look after future colleagues. \
Can they code too? Working at \\\"Big4\\\" does not always involve \
this.\\n\\nAnd in a well-known company, they are asked to solve the problems \
for O(1), but it does not care about the amount of additional memory. It's \
easy to understand why their app weighs so much, but it still breaks. But the \
nuance is that in practice, such code is much more difficult to write and \
maintain because of the problems of synchronization of these very data \
structures. And it turns out that the interview turns into an Olympiad, and \
there is how lucky you are\[LongDash]if you slept, come up with a solution; \
no, nothing; you come up before sleeping.\\n\\nAnother reason why people do \
not like online programming is that the interviewer is not prepared. Encoding \
in a notebook with a scratched screen still occurs. Most often, of course, \
just some kind of online editor, and good if with syntax lighting. But to \
find such another half-business, you have to come up with a challenge. The \
strangest thing I had was \\\"Transfer money from account A to account B\\\"\
\[LongDash]and the white screen. No interfaces, no templates, not even a hint \
on the BD... And you just spend 10 minutes telling them what they want to \
see. What about writing classes? What fields? In short, all this support \
code, which is not directly related to the task,.\\n\\nAnd now what do we \
need to do? What I liked most was the discussion of some kind of PR. Here, \
without sarcasm, it is immediately clear how a person will behave in a \
working situation. What he is paying attention to, what he is missing, and \
why. For example, gentlemen usually ignore formatting because it's the work \
of linters and focus more on APIs, races, and optimum work with the base. I \
highly recommend trying.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about live coding in enterprise companies and \
how the recruitment process should be constructed.\n\n## Live Coding\n\n\
There's always a lot of noise around him. Some people like it (interviews), \
some people don't like it at all (candidates), and someone goes to a \
psychologist after him for six months. This is not really to understand that \
the candidate is able to code; there are not enough extensive projects on \
Github, profile articles with code, reports after all. As I was told, this is \
done to ensure that everyone is treated equally in recruitment. Well, good \
luck hiring a leader or a gentleman in five rounds. At the second, he'll ask \
himself, \"Do I really need this? Well, there are already three offers,\" and \
it will fall off.\n\nAll right, live coding. Usually, you get two tasks to \
program. Yeah, turn the trees. Do you know what roffle is? You come to them \
later, and they don't have any trees at all. There's an hour for everything. \
And how this hour will pass depends very much on the interlocutor. There are \
those who help reason, elaborate the IDE, set up a two-point, and, if \
forgotten, show some kind of empathy and support\[LongDash]the candidate is \
still stressed. Take care of them! Much more often, I get those who don't \
even turn on the cameras. They just give it a job and watch the attempts. At \
one of these sessions, I solved a three-hour task. Did I get an offer? (No.) \
\"Because you probably have a choice, so we're not going to communicate.\" \
Epic ~~fail~~win!\n\nThe most interesting live coding experience I've ever \
had was with one Canadian. We discussed and solved the problem together. \
Literally together, he wrote one part and I wrote the second, more \
complicated. And that's when I realized another problem of this session: \
one-sidedness. We have a co-interview at the end of the day. That is, the \
candidate should look after future colleagues. Can they code too? Working at \
\"Big4\" does not always involve this.\n\nAnd in a well-known company, they \
are asked to solve the problems for O(1), but it does not care about the \
amount of additional memory. It's easy to understand why their app weighs so \
much, but it still breaks. But the nuance is that in practice, such code is \
much more difficult to write and maintain because of the problems of \
synchronization of these very data structures. And it turns out that the \
interview turns into an Olympiad, and there is how lucky you are\[LongDash]if \
you slept, come up with a solution; no, nothing; you come up before sleeping.\
\n\nAnother reason why people do not like online programming is that the \
interviewer is not prepared. Encoding in a notebook with a scratched screen \
still occurs. Most often, of course, just some kind of online editor, and \
good if with syntax lighting. But to find such another half-business, you \
have to come up with a challenge. The strangest thing I had was \"Transfer \
money from account A to account B\"\[LongDash]and the white screen. No \
interfaces, no templates, not even a hint on the BD... And you just spend 10 \
minutes telling them what they want to see. What about writing classes? What \
fields? In short, all this support code, which is not directly related to the \
task,.\n\nAnd now what do we need to do? What I liked most was the discussion \
of some kind of PR. Here, without sarcasm, it is immediately clear how a \
person will behave in a working situation. What he is paying attention to, \
what he is missing, and why. For example, gentlemen usually ignore formatting \
because it's the work of linters and focus more on APIs, races, and optimum \
work with the base. I highly recommend trying."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324899454114213`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7b74f879-6b79-4c33-a5a6-ca56f6891c45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about live coding in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Live Coding\\n\\nThere's always a lot of noise around \
him. Some people like it (interviews), some people don't like it at all \
(candidates), and someone goes to a psychologist after him for six months. \
This is not really to understand that the candidate is able to code; there \
are not enough extensive projects on Github, profile articles with code, \
reports after all. As I was told, this is done to ensure that everyone is \
treated equally in recruitment. Well, good luck hiring a leader or a \
gentleman in five rounds. At the second, he'll ask himself, \\\"Do I really \
need this? Well, there are already three offers,\\\" and it will fall off.\\n\
\\nAll right, live coding. Usually, you get two tasks to program. Yeah, turn \
the trees. Do you know what roffle is? You come to them later, and they don't \
have any trees at all. There's an hour for everything. And how this hour will \
pass depends very much on the interlocutor. There are those who help reason, \
elaborate the IDE, set up a two-point, and, if forgotten, show some kind of \
empathy and support\[LongDash]the candidate is still stressed. Take care of \
them! Much more often, I get those who don't even turn on the cameras. They \
just give it a job and watch the attempts. At one of these sessions, I solved \
a three-hour task. Did I get an offer? (No.) \\\"Because you probably have a \
choice, so we're not going to communicate.\\\" Epic ~~fail~~win!\\n\\nThe \
most interesting live coding experience I've ever had was with one Canadian. \
We discussed and solved the problem together. Literally together, he wrote \
one part and I wrote the second, more complicated. And that's when I realized \
another problem of this session: one-sidedness. We have a co-interview at the \
end of the day. That is, the candidate should look after future colleagues. \
Can they code too? Working at \\\"Big4\\\" does not always involve \
this.\\n\\nAnd in a well-known company, they are asked to solve the problems \
for O(1), but it does not care about the amount of additional memory. It's \
easy to understand why their app weighs so much, but it still breaks. But the \
nuance is that in practice, such code is much more difficult to write and \
maintain because of the problems of synchronization of these very data \
structures. And it turns out that the interview turns into an Olympiad, and \
there is how lucky you are\[LongDash]if you slept, come up with a solution; \
no, nothing; you come up before sleeping.\\n\\nAnother reason why people do \
not like online programming is that the interviewer is not prepared. Encoding \
in a notebook with a scratched screen still occurs. Most often, of course, \
just some kind of online editor, and good if with syntax lighting. But to \
find such another half-business, you have to come up with a challenge. The \
strangest thing I had was \\\"Transfer money from account A to account B\\\"\
\[LongDash]and the white screen. No interfaces, no templates, not even a hint \
on the BD... And you just spend 10 minutes telling them what they want to \
see. What about writing classes? What fields? In short, all this support \
code, which is not directly related to the task,.\\n\\nAnd now what do we \
need to do? What I liked most was the discussion of some kind of PR. Here, \
without sarcasm, it is immediately clear how a person will behave in a \
working situation. What he is paying attention to, what he is missing, and \
why. For example, gentlemen usually ignore formatting because it's the work \
of linters and focus more on APIs, races, and optimum work with the base. I \
highly recommend trying.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about live coding in enterprise companies and \
how the recruitment process should be constructed.\n\n## Live Coding\n\n\
There's always a lot of noise around him. Some people like it (interviews), \
some people don't like it at all (candidates), and someone goes to a \
psychologist after him for six months. This is not really to understand that \
the candidate is able to code; there are not enough extensive projects on \
Github, profile articles with code, reports after all. As I was told, this is \
done to ensure that everyone is treated equally in recruitment. Well, good \
luck hiring a leader or a gentleman in five rounds. At the second, he'll ask \
himself, \"Do I really need this? Well, there are already three offers,\" and \
it will fall off.\n\nAll right, live coding. Usually, you get two tasks to \
program. Yeah, turn the trees. Do you know what roffle is? You come to them \
later, and they don't have any trees at all. There's an hour for everything. \
And how this hour will pass depends very much on the interlocutor. There are \
those who help reason, elaborate the IDE, set up a two-point, and, if \
forgotten, show some kind of empathy and support\[LongDash]the candidate is \
still stressed. Take care of them! Much more often, I get those who don't \
even turn on the cameras. They just give it a job and watch the attempts. At \
one of these sessions, I solved a three-hour task. Did I get an offer? (No.) \
\"Because you probably have a choice, so we're not going to communicate.\" \
Epic ~~fail~~win!\n\nThe most interesting live coding experience I've ever \
had was with one Canadian. We discussed and solved the problem together. \
Literally together, he wrote one part and I wrote the second, more \
complicated. And that's when I realized another problem of this session: \
one-sidedness. We have a co-interview at the end of the day. That is, the \
candidate should look after future colleagues. Can they code too? Working at \
\"Big4\" does not always involve this.\n\nAnd in a well-known company, they \
are asked to solve the problems for O(1), but it does not care about the \
amount of additional memory. It's easy to understand why their app weighs so \
much, but it still breaks. But the nuance is that in practice, such code is \
much more difficult to write and maintain because of the problems of \
synchronization of these very data structures. And it turns out that the \
interview turns into an Olympiad, and there is how lucky you are\[LongDash]if \
you slept, come up with a solution; no, nothing; you come up before sleeping.\
\n\nAnother reason why people do not like online programming is that the \
interviewer is not prepared. Encoding in a notebook with a scratched screen \
still occurs. Most often, of course, just some kind of online editor, and \
good if with syntax lighting. But to find such another half-business, you \
have to come up with a challenge. The strangest thing I had was \"Transfer \
money from account A to account B\"\[LongDash]and the white screen. No \
interfaces, no templates, not even a hint on the BD... And you just spend 10 \
minutes telling them what they want to see. What about writing classes? What \
fields? In short, all this support code, which is not directly related to the \
task,.\n\nAnd now what do we need to do? What I liked most was the discussion \
of some kind of PR. Here, without sarcasm, it is immediately clear how a \
person will behave in a working situation. What he is paying attention to, \
what he is missing, and why. For example, gentlemen usually ignore formatting \
because it's the work of linters and focus more on APIs, races, and optimum \
work with the base. I highly recommend trying."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324900757101345`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b12893b9-752b-4715-8509-dd8351af210a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about live coding in \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## Live Coding\\n\\nThere's always a lot of noise around \
him. Some people like it (interviews), some people don't like it at all \
(candidates), and someone goes to a psychologist after him for six months. \
This is not really to understand that the candidate is able to code; there \
are not enough extensive projects on Github, profile articles with code, \
reports after all. As I was told, this is done to ensure that everyone is \
treated equally in recruitment. Well, good luck hiring a leader or a \
gentleman in five rounds. At the second, he'll ask himself, \\\"Do I really \
need this? Well, there are already three offers,\\\" and it will fall off.\\n\
\\nAll right, live coding. Usually, you get two tasks to program. Yeah, turn \
the trees. Do you know what roffle is? You come to them later, and they don't \
have any trees at all. There's an hour for everything. And how this hour will \
pass depends very much on the interlocutor. There are those who help reason, \
elaborate the IDE, set up a two-point, and, if forgotten, show some kind of \
empathy and support\[LongDash]the candidate is still stressed. Take care of \
them! Much more often, I get those who don't even turn on the cameras. They \
just give it a job and watch the attempts. At one of these sessions, I solved \
a three-hour task. Did I get an offer? (No.) \\\"Because you probably have a \
choice, so we're not going to communicate.\\\" Epic ~~fail~~win!\\n\\nThe \
most interesting live coding experience I've ever had was with one Canadian. \
We discussed and solved the problem together. Literally together, he wrote \
one part and I wrote the second, more complicated. And that's when I realized \
another problem of this session: one-sidedness. We have a co-interview at the \
end of the day. That is, the candidate should look after future colleagues. \
Can they code too? Working at \\\"Big4\\\" does not always involve \
this.\\n\\nAnd in a well-known company, they are asked to solve the problems \
for O(1), but it does not care about the amount of additional memory. It's \
easy to understand why their app weighs so much, but it still breaks. But the \
nuance is that in practice, such code is much more difficult to write and \
maintain because of the problems of synchronization of these very data \
structures. And it turns out that the interview turns into an Olympiad, and \
there is how lucky you are\[LongDash]if you slept, come up with a solution; \
no, nothing; you come up before sleeping.\\n\\nAnother reason why people do \
not like online programming is that the interviewer is not prepared. Encoding \
in a notebook with a scratched screen still occurs. Most often, of course, \
just some kind of online editor, and good if with syntax lighting. But to \
find such another half-business, you have to come up with a challenge. The \
strangest thing I had was \\\"Transfer money from account A to account B\\\"\
\[LongDash]and the white screen. No interfaces, no templates, not even a hint \
on the BD... And you just spend 10 minutes telling them what they want to \
see. What about writing classes? What fields? In short, all this support \
code, which is not directly related to the task,.\\n\\nAnd now what do we \
need to do? What I liked most was the discussion of some kind of PR. Here, \
without sarcasm, it is immediately clear how a person will behave in a \
working situation. What he is paying attention to, what he is missing, and \
why. For example, gentlemen usually ignore formatting because it's the work \
of linters and focus more on APIs, races, and optimum work with the base. I \
highly recommend trying.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about live coding in enterprise companies and \
how the recruitment process should be constructed.\n\n## Live Coding\n\n\
There's always a lot of noise around him. Some people like it (interviews), \
some people don't like it at all (candidates), and someone goes to a \
psychologist after him for six months. This is not really to understand that \
the candidate is able to code; there are not enough extensive projects on \
Github, profile articles with code, reports after all. As I was told, this is \
done to ensure that everyone is treated equally in recruitment. Well, good \
luck hiring a leader or a gentleman in five rounds. At the second, he'll ask \
himself, \"Do I really need this? Well, there are already three offers,\" and \
it will fall off.\n\nAll right, live coding. Usually, you get two tasks to \
program. Yeah, turn the trees. Do you know what roffle is? You come to them \
later, and they don't have any trees at all. There's an hour for everything. \
And how this hour will pass depends very much on the interlocutor. There are \
those who help reason, elaborate the IDE, set up a two-point, and, if \
forgotten, show some kind of empathy and support\[LongDash]the candidate is \
still stressed. Take care of them! Much more often, I get those who don't \
even turn on the cameras. They just give it a job and watch the attempts. At \
one of these sessions, I solved a three-hour task. Did I get an offer? (No.) \
\"Because you probably have a choice, so we're not going to communicate.\" \
Epic ~~fail~~win!\n\nThe most interesting live coding experience I've ever \
had was with one Canadian. We discussed and solved the problem together. \
Literally together, he wrote one part and I wrote the second, more \
complicated. And that's when I realized another problem of this session: \
one-sidedness. We have a co-interview at the end of the day. That is, the \
candidate should look after future colleagues. Can they code too? Working at \
\"Big4\" does not always involve this.\n\nAnd in a well-known company, they \
are asked to solve the problems for O(1), but it does not care about the \
amount of additional memory. It's easy to understand why their app weighs so \
much, but it still breaks. But the nuance is that in practice, such code is \
much more difficult to write and maintain because of the problems of \
synchronization of these very data structures. And it turns out that the \
interview turns into an Olympiad, and there is how lucky you are\[LongDash]if \
you slept, come up with a solution; no, nothing; you come up before sleeping.\
\n\nAnother reason why people do not like online programming is that the \
interviewer is not prepared. Encoding in a notebook with a scratched screen \
still occurs. Most often, of course, just some kind of online editor, and \
good if with syntax lighting. But to find such another half-business, you \
have to come up with a challenge. The strangest thing I had was \"Transfer \
money from account A to account B\"\[LongDash]and the white screen. No \
interfaces, no templates, not even a hint on the BD... And you just spend 10 \
minutes telling them what they want to see. What about writing classes? What \
fields? In short, all this support code, which is not directly related to the \
task,.\n\nAnd now what do we need to do? What I liked most was the discussion \
of some kind of PR. Here, without sarcasm, it is immediately clear how a \
person will behave in a working situation. What he is paying attention to, \
what he is missing, and why. For example, gentlemen usually ignore formatting \
because it's the work of linters and focus more on APIs, races, and optimum \
work with the base. I highly recommend trying."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324900758845196`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"69e5f884-9a6d-4dc5-b589-8882d3c0bf08"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Live Coding'\\ndate = \
2024-05-13T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"github\\\", \\\"canadian\\\", \\\"big4\\\", \\\"pr\\\"]\\ntags = \
[\\\"github\\\", \\\"code\\\", \\\"kind\\\", \\\"candidate\\\", \
\\\"people\\\", \
\\\"work\\\"]\\ncover_image='/images/cover/knoxwelle__2021-06-01T075855.000Z.\
jpg'\\n+++\\nI've been going to interviews again, and I'd like to share some \
observations. This time we talk about live coding in enterprise companies and \
how the recruitment process should be constructed.\\n\\n## Live \
Coding\\n\\nThere's always a lot of noise around him. Some people like it \
(interviews), some people don't like it at all (candidates), and someone goes \
to a psychologist after him for six months. This is not really to understand \
that the candidate is able to code; there are not enough extensive projects \
on Github, profile articles with code, reports after all. As I was told, this \
is done to ensure that everyone is treated equally in recruitment. Well, good \
luck hiring a leader or a gentleman in five rounds. At the second, he'll ask \
himself, \\\"Do I really need this? Well, there are already three offers,\\\" \
and it will fall off.\\n\\nAll right, live coding. Usually, you get two tasks \
to program. Yeah, turn the trees. Do you know what roffle is? You come to \
them later, and they don't have any trees at all. There's an hour for \
everything. And how this hour will pass depends very much on the \
interlocutor. There are those who help reason, elaborate the IDE, set up a \
two-point, and, if forgotten, show some kind of empathy and \
support\[LongDash]the candidate is still stressed. Take care of them! Much \
more often, I get those who don't even turn on the cameras. They just give it \
a job and watch the attempts. At one of these sessions, I solved a three-hour \
task. Did I get an offer? (No.) \\\"Because you probably have a choice, so \
we're not going to communicate.\\\" Epic ~~fail~~win!\\n\\nThe most \
interesting live coding experience I've ever had was with one Canadian. We \
discussed and solved the problem together. Literally together, he wrote one \
part and I wrote the second, more complicated. And that's when I realized \
another problem of this session: one-sidedness. We have a co-interview at the \
end of the day. That is, the candidate should look after future colleagues. \
Can they code too? Working at \\\"Big4\\\" does not always involve \
this.\\n\\nAnd in a well-known company, they are asked to solve the problems \
for O(1), but it does not care about the amount of additional memory. It's \
easy to understand why their app weighs so much, but it still breaks. But the \
nuance is that in practice, such code is much more difficult to write and \
maintain because of the problems of synchronization of these very data \
structures. And it turns out that the interview turns into an Olympiad, and \
there is how lucky you are\[LongDash]if you slept, come up with a solution; \
no, nothing; you come up before sleeping.\\n\\nAnother reason why people do \
not like online programming is that the interviewer is not prepared. Encoding \
in a notebook with a scratched screen still occurs. Most often, of course, \
just some kind of online editor, and good if with syntax lighting. But to \
find such another half-business, you have to come up with a challenge. The \
strangest thing I had was \\\"Transfer money from account A to account B\\\"\
\[LongDash]and the white screen. No interfaces, no templates, not even a hint \
on the BD... And you just spend 10 minutes telling them what they want to \
see. What about writing classes? What fields? In short, all this support \
code, which is not directly related to the task,.\\n\\nAnd now what do we \
need to do? What I liked most was the discussion of some kind of PR. Here, \
without sarcasm, it is immediately clear how a person will behave in a \
working situation. What he is paying attention to, what he is missing, and \
why. For example, gentlemen usually ignore formatting because it's the work \
of linters and focus more on APIs, races, and optimum work with the base. I \
highly recommend trying.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Live Coding'\ndate = 2024-05-13T00:00:00-07:00\ndraft = \
false\ncategories = [\"recruiting\", \"github\", \"canadian\", \"big4\", \"pr\
\"]\ntags = [\"github\", \"code\", \"kind\", \"candidate\", \"people\", \
\"work\"]\ncover_image='/images/cover/knoxwelle__2021-06-01T075855.000Z.jpg'\n\
+++\nI've been going to interviews again, and I'd like to share some \
observations. This time we talk about live coding in enterprise companies and \
how the recruitment process should be constructed.\n\n## Live Coding\n\n\
There's always a lot of noise around him. Some people like it (interviews), \
some people don't like it at all (candidates), and someone goes to a \
psychologist after him for six months. This is not really to understand that \
the candidate is able to code; there are not enough extensive projects on \
Github, profile articles with code, reports after all. As I was told, this is \
done to ensure that everyone is treated equally in recruitment. Well, good \
luck hiring a leader or a gentleman in five rounds. At the second, he'll ask \
himself, \"Do I really need this? Well, there are already three offers,\" and \
it will fall off.\n\nAll right, live coding. Usually, you get two tasks to \
program. Yeah, turn the trees. Do you know what roffle is? You come to them \
later, and they don't have any trees at all. There's an hour for everything. \
And how this hour will pass depends very much on the interlocutor. There are \
those who help reason, elaborate the IDE, set up a two-point, and, if \
forgotten, show some kind of empathy and support\[LongDash]the candidate is \
still stressed. Take care of them! Much more often, I get those who don't \
even turn on the cameras. They just give it a job and watch the attempts. At \
one of these sessions, I solved a three-hour task. Did I get an offer? (No.) \
\"Because you probably have a choice, so we're not going to communicate.\" \
Epic ~~fail~~win!\n\nThe most interesting live coding experience I've ever \
had was with one Canadian. We discussed and solved the problem together. \
Literally together, he wrote one part and I wrote the second, more \
complicated. And that's when I realized another problem of this session: \
one-sidedness. We have a co-interview at the end of the day. That is, the \
candidate should look after future colleagues. Can they code too? Working at \
\"Big4\" does not always involve this.\n\nAnd in a well-known company, they \
are asked to solve the problems for O(1), but it does not care about the \
amount of additional memory. It's easy to understand why their app weighs so \
much, but it still breaks. But the nuance is that in practice, such code is \
much more difficult to write and maintain because of the problems of \
synchronization of these very data structures. And it turns out that the \
interview turns into an Olympiad, and there is how lucky you are\[LongDash]if \
you slept, come up with a solution; no, nothing; you come up before sleeping.\
\n\nAnother reason why people do not like online programming is that the \
interviewer is not prepared. Encoding in a notebook with a scratched screen \
still occurs. Most often, of course, just some kind of online editor, and \
good if with syntax lighting. But to find such another half-business, you \
have to come up with a challenge. The strangest thing I had was \"Transfer \
money from account A to account B\"\[LongDash]and the white screen. No \
interfaces, no templates, not even a hint on the BD... And you just spend 10 \
minutes telling them what they want to see. What about writing classes? What \
fields? In short, all this support code, which is not directly related to the \
task,.\n\nAnd now what do we need to do? What I liked most was the discussion \
of some kind of PR. Here, without sarcasm, it is immediately clear how a \
person will behave in a working situation. What he is paying attention to, \
what he is missing, and why. For example, gentlemen usually ignore formatting \
because it's the work of linters and focus more on APIs, races, and optimum \
work with the base. I highly recommend trying."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324900759095354`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"059747be-2f08-49e7-b5e0-af128ae35431"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "18", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Never prioritize your resume over the needs of the \
client.md\"\>"}],
  SequenceForm[
  18, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Never prioritize your resume over the needs of the client.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324900759305496`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9f1266fd-b000-4bd2-a6f6-e062e5f0b8d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"We, technicians, choose to use certain \
technologies, methodologies and approaches to solve problems not because they \
provide the optimal solution, but only because in the depths of our heart we \
want to mention them in our summary. Such a choice very rarely leads to a \
positive result. \\n\\nThe most powerful catalyst for your career will be \
grateful customers who are in a long queue to recommend you to others \[Dash] \
because you have worked so well for them. The kindness of the customers will \
serve you better than any new-fashioned object of the new language and any \
newly invented paradigm. While it is very important (and even vital) for an \
architect to be up to date with the latest trends and technologies, never try \
to expand your horizons at the expense of the client. As architects, you \
should always keep in mind that your company's success is entrusted to you. \
As such, you should behave with integrity and competence in the best \
interests of your clients, abstaining from conflicts of interest, and showing \
complete dedication to your company. If the proposed project is not relevant \
or promising enough for your current career goals, find another project.  \\n\
\\nWhat if it's not possible, and you're still forced to participate in such \
a project? It will be better for you and everyone else if you choose \
technology for the benefit of the customer rather than your resume. Sometimes \
it is difficult to resist the temptation to apply a new fashionable solution, \
even if it does not fit the current situation. \\n\\nWith the right solution \
you get a satisfied team and satisfied client, and the overall stress of work \
on the project is noticeably decreases. Often this allows you to study a \
already familiar technology in depth or engage in the development of novelty \
in your spare time. Or maybe you even have free time to attend the painting \
courses you have always dreamed of. Your loved ones will appreciate it too \
\[Dash] they will notice the difference in your condition when you come home \
after work.  \\n\\nAlways put a customer\[CloseCurlyQuote]s long-term needs \
above your own short-term requirements \[Dash] and you will not be \
mistaken.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "We, technicians, choose to use certain technologies, methodologies and \
approaches to solve problems not because they provide the optimal solution, \
but only because in the depths of our heart we want to mention them in our \
summary. Such a choice very rarely leads to a positive result. \n\nThe most \
powerful catalyst for your career will be grateful customers who are in a \
long queue to recommend you to others \[Dash] because you have worked so well \
for them. The kindness of the customers will serve you better than any \
new-fashioned object of the new language and any newly invented paradigm. \
While it is very important (and even vital) for an architect to be up to date \
with the latest trends and technologies, never try to expand your horizons at \
the expense of the client. As architects, you should always keep in mind that \
your company's success is entrusted to you. As such, you should behave with \
integrity and competence in the best interests of your clients, abstaining \
from conflicts of interest, and showing complete dedication to your company. \
If the proposed project is not relevant or promising enough for your current \
career goals, find another project.  \n\nWhat if it's not possible, and \
you're still forced to participate in such a project? It will be better for \
you and everyone else if you choose technology for the benefit of the \
customer rather than your resume. Sometimes it is difficult to resist the \
temptation to apply a new fashionable solution, even if it does not fit the \
current situation. \n\nWith the right solution you get a satisfied team and \
satisfied client, and the overall stress of work on the project is noticeably \
decreases. Often this allows you to study a already familiar technology in \
depth or engage in the development of novelty in your spare time. Or maybe \
you even have free time to attend the painting courses you have always \
dreamed of. Your loved ones will appreciate it too \[Dash] they will notice \
the difference in your condition when you come home after work.  \n\nAlways \
put a customer\[CloseCurlyQuote]s long-term needs above your own short-term \
requirements \[Dash] and you will not be mistaken."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324900850342455`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f36feaed-ee8b-4de9-ae0e-53d8884e8e28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"We, technicians, choose to use certain \
technologies, methodologies and approaches to solve problems not because they \
provide the optimal solution, but only because in the depths of our heart we \
want to mention them in our summary. Such a choice very rarely leads to a \
positive result. \\n\\nThe most powerful catalyst for your career will be \
grateful customers who are in a long queue to recommend you to others \[Dash] \
because you have worked so well for them. The kindness of the customers will \
serve you better than any new-fashioned object of the new language and any \
newly invented paradigm. While it is very important (and even vital) for an \
architect to be up to date with the latest trends and technologies, never try \
to expand your horizons at the expense of the client. As architects, you \
should always keep in mind that your company's success is entrusted to you. \
As such, you should behave with integrity and competence in the best \
interests of your clients, abstaining from conflicts of interest, and showing \
complete dedication to your company. If the proposed project is not relevant \
or promising enough for your current career goals, find another project.  \\n\
\\nWhat if it's not possible, and you're still forced to participate in such \
a project? It will be better for you and everyone else if you choose \
technology for the benefit of the customer rather than your resume. Sometimes \
it is difficult to resist the temptation to apply a new fashionable solution, \
even if it does not fit the current situation. \\n\\nWith the right solution \
you get a satisfied team and satisfied client, and the overall stress of work \
on the project is noticeably decreases. Often this allows you to study a \
already familiar technology in depth or engage in the development of novelty \
in your spare time. Or maybe you even have free time to attend the painting \
courses you have always dreamed of. Your loved ones will appreciate it too \
\[Dash] they will notice the difference in your condition when you come home \
after work.  \\n\\nAlways put a customer\[CloseCurlyQuote]s long-term needs \
above your own short-term requirements \[Dash] and you will not be \
mistaken.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "We, technicians, choose to use certain technologies, methodologies and \
approaches to solve problems not because they provide the optimal solution, \
but only because in the depths of our heart we want to mention them in our \
summary. Such a choice very rarely leads to a positive result. \n\nThe most \
powerful catalyst for your career will be grateful customers who are in a \
long queue to recommend you to others \[Dash] because you have worked so well \
for them. The kindness of the customers will serve you better than any \
new-fashioned object of the new language and any newly invented paradigm. \
While it is very important (and even vital) for an architect to be up to date \
with the latest trends and technologies, never try to expand your horizons at \
the expense of the client. As architects, you should always keep in mind that \
your company's success is entrusted to you. As such, you should behave with \
integrity and competence in the best interests of your clients, abstaining \
from conflicts of interest, and showing complete dedication to your company. \
If the proposed project is not relevant or promising enough for your current \
career goals, find another project.  \n\nWhat if it's not possible, and \
you're still forced to participate in such a project? It will be better for \
you and everyone else if you choose technology for the benefit of the \
customer rather than your resume. Sometimes it is difficult to resist the \
temptation to apply a new fashionable solution, even if it does not fit the \
current situation. \n\nWith the right solution you get a satisfied team and \
satisfied client, and the overall stress of work on the project is noticeably \
decreases. Often this allows you to study a already familiar technology in \
depth or engage in the development of novelty in your spare time. Or maybe \
you even have free time to attend the painting courses you have always \
dreamed of. Your loved ones will appreciate it too \[Dash] they will notice \
the difference in your condition when you come home after work.  \n\nAlways \
put a customer\[CloseCurlyQuote]s long-term needs above your own short-term \
requirements \[Dash] and you will not be mistaken."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324901714072013`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"daf8d80e-7f36-4ce2-8372-00c7906fa927"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"We, technicians, choose to use certain \
technologies, methodologies and approaches to solve problems not because they \
provide the optimal solution, but only because in the depths of our heart we \
want to mention them in our summary. Such a choice very rarely leads to a \
positive result. \\n\\nThe most powerful catalyst for your career will be \
grateful customers who are in a long queue to recommend you to others \[Dash] \
because you have worked so well for them. The kindness of the customers will \
serve you better than any new-fashioned object of the new language and any \
newly invented paradigm. While it is very important (and even vital) for an \
architect to be up to date with the latest trends and technologies, never try \
to expand your horizons at the expense of the client. As architects, you \
should always keep in mind that your company's success is entrusted to you. \
As such, you should behave with integrity and competence in the best \
interests of your clients, abstaining from conflicts of interest, and showing \
complete dedication to your company. If the proposed project is not relevant \
or promising enough for your current career goals, find another project.  \\n\
\\nWhat if it's not possible, and you're still forced to participate in such \
a project? It will be better for you and everyone else if you choose \
technology for the benefit of the customer rather than your resume. Sometimes \
it is difficult to resist the temptation to apply a new fashionable solution, \
even if it does not fit the current situation. \\n\\nWith the right solution \
you get a satisfied team and satisfied client, and the overall stress of work \
on the project is noticeably decreases. Often this allows you to study a \
already familiar technology in depth or engage in the development of novelty \
in your spare time. Or maybe you even have free time to attend the painting \
courses you have always dreamed of. Your loved ones will appreciate it too \
\[Dash] they will notice the difference in your condition when you come home \
after work.  \\n\\nAlways put a customer\[CloseCurlyQuote]s long-term needs \
above your own short-term requirements \[Dash] and you will not be \
mistaken.\"\>"}],
  SequenceForm[
  "newText: ", 
   "We, technicians, choose to use certain technologies, methodologies and \
approaches to solve problems not because they provide the optimal solution, \
but only because in the depths of our heart we want to mention them in our \
summary. Such a choice very rarely leads to a positive result. \n\nThe most \
powerful catalyst for your career will be grateful customers who are in a \
long queue to recommend you to others \[Dash] because you have worked so well \
for them. The kindness of the customers will serve you better than any \
new-fashioned object of the new language and any newly invented paradigm. \
While it is very important (and even vital) for an architect to be up to date \
with the latest trends and technologies, never try to expand your horizons at \
the expense of the client. As architects, you should always keep in mind that \
your company's success is entrusted to you. As such, you should behave with \
integrity and competence in the best interests of your clients, abstaining \
from conflicts of interest, and showing complete dedication to your company. \
If the proposed project is not relevant or promising enough for your current \
career goals, find another project.  \n\nWhat if it's not possible, and \
you're still forced to participate in such a project? It will be better for \
you and everyone else if you choose technology for the benefit of the \
customer rather than your resume. Sometimes it is difficult to resist the \
temptation to apply a new fashionable solution, even if it does not fit the \
current situation. \n\nWith the right solution you get a satisfied team and \
satisfied client, and the overall stress of work on the project is noticeably \
decreases. Often this allows you to study a already familiar technology in \
depth or engage in the development of novelty in your spare time. Or maybe \
you even have free time to attend the painting courses you have always \
dreamed of. Your loved ones will appreciate it too \[Dash] they will notice \
the difference in your condition when you come home after work.  \n\nAlways \
put a customer\[CloseCurlyQuote]s long-term needs above your own short-term \
requirements \[Dash] and you will not be mistaken."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324901715649157`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b246bf4e-03ed-4831-9939-a60fae30db62"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Never prioritize your resume over \
the needs of the client'\\ndate = 2024-07-11T00:00:00-07:00\\ndraft = \
false\\ncategories = []\\ntags = [\\\"project\\\", \\\"solution\\\", \\\"time\
\\\", \\\"work\\\", \\\"technology\\\", \
\\\"always\\\"]\\ncover_image='/images/cover/knoxwelle__2020-03-31T173917.\
000Z.jpg'\\n+++\\nWe, technicians, choose to use certain technologies, \
methodologies and approaches to solve problems not because they provide the \
optimal solution, but only because in the depths of our heart we want to \
mention them in our summary. Such a choice very rarely leads to a positive \
result. \\n\\nThe most powerful catalyst for your career will be grateful \
customers who are in a long queue to recommend you to others \[Dash] because \
you have worked so well for them. The kindness of the customers will serve \
you better than any new-fashioned object of the new language and any newly \
invented paradigm. While it is very important (and even vital) for an \
architect to be up to date with the latest trends and technologies, never try \
to expand your horizons at the expense of the client. As architects, you \
should always keep in mind that your company's success is entrusted to you. \
As such, you should behave with integrity and competence in the best \
interests of your clients, abstaining from conflicts of interest, and showing \
complete dedication to your company. If the proposed project is not relevant \
or promising enough for your current career goals, find another project.  \\n\
\\nWhat if it's not possible, and you're still forced to participate in such \
a project? It will be better for you and everyone else if you choose \
technology for the benefit of the customer rather than your resume. Sometimes \
it is difficult to resist the temptation to apply a new fashionable solution, \
even if it does not fit the current situation. \\n\\nWith the right solution \
you get a satisfied team and satisfied client, and the overall stress of work \
on the project is noticeably decreases. Often this allows you to study a \
already familiar technology in depth or engage in the development of novelty \
in your spare time. Or maybe you even have free time to attend the painting \
courses you have always dreamed of. Your loved ones will appreciate it too \
\[Dash] they will notice the difference in your condition when you come home \
after work.  \\n\\nAlways put a customer\[CloseCurlyQuote]s long-term needs \
above your own short-term requirements \[Dash] and you will not be \
mistaken.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Never prioritize your resume over the needs of the client'\n\
date = 2024-07-11T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"project\", \"solution\", \"time\", \"work\", \"technology\", \"always\"]\n\
cover_image='/images/cover/knoxwelle__2020-03-31T173917.000Z.jpg'\n+++\nWe, \
technicians, choose to use certain technologies, methodologies and approaches \
to solve problems not because they provide the optimal solution, but only \
because in the depths of our heart we want to mention them in our summary. \
Such a choice very rarely leads to a positive result. \n\nThe most powerful \
catalyst for your career will be grateful customers who are in a long queue \
to recommend you to others \[Dash] because you have worked so well for them. \
The kindness of the customers will serve you better than any new-fashioned \
object of the new language and any newly invented paradigm. While it is very \
important (and even vital) for an architect to be up to date with the latest \
trends and technologies, never try to expand your horizons at the expense of \
the client. As architects, you should always keep in mind that your company's \
success is entrusted to you. As such, you should behave with integrity and \
competence in the best interests of your clients, abstaining from conflicts \
of interest, and showing complete dedication to your company. If the proposed \
project is not relevant or promising enough for your current career goals, \
find another project.  \n\nWhat if it's not possible, and you're still forced \
to participate in such a project? It will be better for you and everyone else \
if you choose technology for the benefit of the customer rather than your \
resume. Sometimes it is difficult to resist the temptation to apply a new \
fashionable solution, even if it does not fit the current situation. \n\nWith \
the right solution you get a satisfied team and satisfied client, and the \
overall stress of work on the project is noticeably decreases. Often this \
allows you to study a already familiar technology in depth or engage in the \
development of novelty in your spare time. Or maybe you even have free time \
to attend the painting courses you have always dreamed of. Your loved ones \
will appreciate it too \[Dash] they will notice the difference in your \
condition when you come home after work.  \n\nAlways put a customer\
\[CloseCurlyQuote]s long-term needs above your own short-term requirements \
\[Dash] and you will not be mistaken."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490171638153*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"1f560519-b616-4132-a632-e422e025122c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\One line of working code costs 500 lines of \
specification.md\"\>"}],
  SequenceForm[
  19, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\One \
line of working code costs 500 lines of specification.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490171966679*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9c9cab94-1621-4028-995a-7af4a90d4c20"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Proecting is a beautiful thing. A systematic, \
detailed presentation of the space of the problem and its solution reveals \
mistakes and reveals opportunities for improvement, sometimes in a very \
radical way.Specifications play an important role in this, as they define the \
pattern for building the system.It is very important to think about the \
entire architecture\[LongDash]both at the macro level, considering the \
interaction between the components, and at the micro level, penetrating the \
behavior of components themselves.\\n\\nUnfortunately, architects are often \
fascinated by the design process, falling under the charm of architectural \
abstractions. However, the specifications themselves have no value. The \
ultimate objective of the software project is a really functioning system.The \
architect should always keep this goal in mind and remember that design is \
only a means, not the end result. The architect of the skyscraper \
disregarding the laws of physics for the sake of the elegance of the building \
is destined to soon regret it. One should lose sight of the ultimate goal\
\[LongDash]the working code\[LongDash]and the project begins to get into \
serious trouble.\\n\\nIf they have problems with your design, it is possible \
that they are right and the design is wrong or at least unclear. In such \
cases, bringing the design into line with practical requirements is your \
immediate task, and you can solve it by talking to your team members, who \
will help you determine what works and what doesn't. No design is perfect \
from the start; any design is subject to change as it is implemented. \
\\n\\nIf you are involved in a project and as a developer, learn to \
appreciate the time spent writing the code, and do not believe those who say \
that it only takes time to create the architecture. You will get a much more \
accurate vision of the project at the macro- and micro-levels after you try \
to breathe life into your creation.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Proecting is a beautiful thing. A systematic, detailed presentation of \
the space of the problem and its solution reveals mistakes and reveals \
opportunities for improvement, sometimes in a very radical way.Specifications \
play an important role in this, as they define the pattern for building the \
system.It is very important to think about the entire \
architecture\[LongDash]both at the macro level, considering the interaction \
between the components, and at the micro level, penetrating the behavior of \
components themselves.\n\nUnfortunately, architects are often fascinated by \
the design process, falling under the charm of architectural abstractions. \
However, the specifications themselves have no value. The ultimate objective \
of the software project is a really functioning system.The architect should \
always keep this goal in mind and remember that design is only a means, not \
the end result. The architect of the skyscraper disregarding the laws of \
physics for the sake of the elegance of the building is destined to soon \
regret it. One should lose sight of the ultimate goal\[LongDash]the working \
code\[LongDash]and the project begins to get into serious trouble.\n\nIf they \
have problems with your design, it is possible that they are right and the \
design is wrong or at least unclear. In such cases, bringing the design into \
line with practical requirements is your immediate task, and you can solve it \
by talking to your team members, who will help you determine what works and \
what doesn't. No design is perfect from the start; any design is subject to \
change as it is implemented. \n\nIf you are involved in a project and as a \
developer, learn to appreciate the time spent writing the code, and do not \
believe those who say that it only takes time to create the architecture. You \
will get a much more accurate vision of the project at the macro- and \
micro-levels after you try to breathe life into your creation."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324901808482237`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"68ee9d88-cd4a-449a-9416-ccb74c8c990d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Proecting is a beautiful thing. A systematic, \
detailed presentation of the space of the problem and its solution reveals \
mistakes and reveals opportunities for improvement, sometimes in a very \
radical way.Specifications play an important role in this, as they define the \
pattern for building the system.It is very important to think about the \
entire architecture\[LongDash]both at the macro level, considering the \
interaction between the components, and at the micro level, penetrating the \
behavior of components themselves.\\n\\nUnfortunately, architects are often \
fascinated by the design process, falling under the charm of architectural \
abstractions. However, the specifications themselves have no value. The \
ultimate objective of the software project is a really functioning system.The \
architect should always keep this goal in mind and remember that design is \
only a means, not the end result. The architect of the skyscraper \
disregarding the laws of physics for the sake of the elegance of the building \
is destined to soon regret it. One should lose sight of the ultimate goal\
\[LongDash]the working code\[LongDash]and the project begins to get into \
serious trouble.\\n\\nIf they have problems with your design, it is possible \
that they are right and the design is wrong or at least unclear. In such \
cases, bringing the design into line with practical requirements is your \
immediate task, and you can solve it by talking to your team members, who \
will help you determine what works and what doesn't. No design is perfect \
from the start; any design is subject to change as it is implemented. \
\\n\\nIf you are involved in a project and as a developer, learn to \
appreciate the time spent writing the code, and do not believe those who say \
that it only takes time to create the architecture. You will get a much more \
accurate vision of the project at the macro- and micro-levels after you try \
to breathe life into your creation.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Proecting is a beautiful thing. A systematic, detailed presentation of \
the space of the problem and its solution reveals mistakes and reveals \
opportunities for improvement, sometimes in a very radical way.Specifications \
play an important role in this, as they define the pattern for building the \
system.It is very important to think about the entire \
architecture\[LongDash]both at the macro level, considering the interaction \
between the components, and at the micro level, penetrating the behavior of \
components themselves.\n\nUnfortunately, architects are often fascinated by \
the design process, falling under the charm of architectural abstractions. \
However, the specifications themselves have no value. The ultimate objective \
of the software project is a really functioning system.The architect should \
always keep this goal in mind and remember that design is only a means, not \
the end result. The architect of the skyscraper disregarding the laws of \
physics for the sake of the elegance of the building is destined to soon \
regret it. One should lose sight of the ultimate goal\[LongDash]the working \
code\[LongDash]and the project begins to get into serious trouble.\n\nIf they \
have problems with your design, it is possible that they are right and the \
design is wrong or at least unclear. In such cases, bringing the design into \
line with practical requirements is your immediate task, and you can solve it \
by talking to your team members, who will help you determine what works and \
what doesn't. No design is perfect from the start; any design is subject to \
change as it is implemented. \n\nIf you are involved in a project and as a \
developer, learn to appreciate the time spent writing the code, and do not \
believe those who say that it only takes time to create the architecture. You \
will get a much more accurate vision of the project at the macro- and \
micro-levels after you try to breathe life into your creation."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490263129228*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"a689298e-51e1-4549-9b5c-40d3abd7555a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Proecting is a beautiful thing. A systematic, \
detailed presentation of the space of the problem and its solution reveals \
mistakes and reveals opportunities for improvement, sometimes in a very \
radical way.Specifications play an important role in this, as they define the \
pattern for building the system.It is very important to think about the \
entire architecture\[LongDash]both at the macro level, considering the \
interaction between the components, and at the micro level, penetrating the \
behavior of components themselves.\\n\\nUnfortunately, architects are often \
fascinated by the design process, falling under the charm of architectural \
abstractions. However, the specifications themselves have no value. The \
ultimate objective of the software project is a really functioning system.The \
architect should always keep this goal in mind and remember that design is \
only a means, not the end result. The architect of the skyscraper \
disregarding the laws of physics for the sake of the elegance of the building \
is destined to soon regret it. One should lose sight of the ultimate goal\
\[LongDash]the working code\[LongDash]and the project begins to get into \
serious trouble.\\n\\nIf they have problems with your design, it is possible \
that they are right and the design is wrong or at least unclear. In such \
cases, bringing the design into line with practical requirements is your \
immediate task, and you can solve it by talking to your team members, who \
will help you determine what works and what doesn't. No design is perfect \
from the start; any design is subject to change as it is implemented. \
\\n\\nIf you are involved in a project and as a developer, learn to \
appreciate the time spent writing the code, and do not believe those who say \
that it only takes time to create the architecture. You will get a much more \
accurate vision of the project at the macro- and micro-levels after you try \
to breathe life into your creation.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Proecting is a beautiful thing. A systematic, detailed presentation of \
the space of the problem and its solution reveals mistakes and reveals \
opportunities for improvement, sometimes in a very radical way.Specifications \
play an important role in this, as they define the pattern for building the \
system.It is very important to think about the entire \
architecture\[LongDash]both at the macro level, considering the interaction \
between the components, and at the micro level, penetrating the behavior of \
components themselves.\n\nUnfortunately, architects are often fascinated by \
the design process, falling under the charm of architectural abstractions. \
However, the specifications themselves have no value. The ultimate objective \
of the software project is a really functioning system.The architect should \
always keep this goal in mind and remember that design is only a means, not \
the end result. The architect of the skyscraper disregarding the laws of \
physics for the sake of the elegance of the building is destined to soon \
regret it. One should lose sight of the ultimate goal\[LongDash]the working \
code\[LongDash]and the project begins to get into serious trouble.\n\nIf they \
have problems with your design, it is possible that they are right and the \
design is wrong or at least unclear. In such cases, bringing the design into \
line with practical requirements is your immediate task, and you can solve it \
by talking to your team members, who will help you determine what works and \
what doesn't. No design is perfect from the start; any design is subject to \
change as it is implemented. \n\nIf you are involved in a project and as a \
developer, learn to appreciate the time spent writing the code, and do not \
believe those who say that it only takes time to create the architecture. You \
will get a much more accurate vision of the project at the macro- and \
micro-levels after you try to breathe life into your creation."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324902632541156`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5a6f2646-2125-4536-aad3-0645aea8440e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'One line of working code costs \
500 lines of specification'\\ndate = 2024-06-03T00:00:00-07:00\\ndraft = \
false\\ncategories = []\\ntags = [\\\"proecting\\\", \\\"design\\\", \
\\\"project\\\", \\\"time\\\", \\\"code\\\", \
\\\"goal\\\"]\\ncover_image='/images/cover/knoxwelle__2021-07-21T041637.000Z.\
jpg'\\n+++\\nProecting is a beautiful thing. A systematic, detailed \
presentation of the space of the problem and its solution reveals mistakes \
and reveals opportunities for improvement, sometimes in a very radical \
way.Specifications play an important role in this, as they define the pattern \
for building the system.It is very important to think about the entire \
architecture\[LongDash]both at the macro level, considering the interaction \
between the components, and at the micro level, penetrating the behavior of \
components themselves.\\n\\nUnfortunately, architects are often fascinated by \
the design process, falling under the charm of architectural abstractions. \
However, the specifications themselves have no value. The ultimate objective \
of the software project is a really functioning system.The architect should \
always keep this goal in mind and remember that design is only a means, not \
the end result. The architect of the skyscraper disregarding the laws of \
physics for the sake of the elegance of the building is destined to soon \
regret it. One should lose sight of the ultimate goal\[LongDash]the working \
code\[LongDash]and the project begins to get into serious trouble.\\n\\nIf \
they have problems with your design, it is possible that they are right and \
the design is wrong or at least unclear. In such cases, bringing the design \
into line with practical requirements is your immediate task, and you can \
solve it by talking to your team members, who will help you determine what \
works and what doesn't. No design is perfect from the start; any design is \
subject to change as it is implemented. \\n\\nIf you are involved in a \
project and as a developer, learn to appreciate the time spent writing the \
code, and do not believe those who say that it only takes time to create the \
architecture. You will get a much more accurate vision of the project at the \
macro- and micro-levels after you try to breathe life into your \
creation.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'One line of working code costs 500 lines of specification'\n\
date = 2024-06-03T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"proecting\", \"design\", \"project\", \"time\", \"code\", \"goal\"]\n\
cover_image='/images/cover/knoxwelle__2021-07-21T041637.000Z.jpg'\n+++\n\
Proecting is a beautiful thing. A systematic, detailed presentation of the \
space of the problem and its solution reveals mistakes and reveals \
opportunities for improvement, sometimes in a very radical way.Specifications \
play an important role in this, as they define the pattern for building the \
system.It is very important to think about the entire \
architecture\[LongDash]both at the macro level, considering the interaction \
between the components, and at the micro level, penetrating the behavior of \
components themselves.\n\nUnfortunately, architects are often fascinated by \
the design process, falling under the charm of architectural abstractions. \
However, the specifications themselves have no value. The ultimate objective \
of the software project is a really functioning system.The architect should \
always keep this goal in mind and remember that design is only a means, not \
the end result. The architect of the skyscraper disregarding the laws of \
physics for the sake of the elegance of the building is destined to soon \
regret it. One should lose sight of the ultimate goal\[LongDash]the working \
code\[LongDash]and the project begins to get into serious trouble.\n\nIf they \
have problems with your design, it is possible that they are right and the \
design is wrong or at least unclear. In such cases, bringing the design into \
line with practical requirements is your immediate task, and you can solve it \
by talking to your team members, who will help you determine what works and \
what doesn't. No design is perfect from the start; any design is subject to \
change as it is implemented. \n\nIf you are involved in a project and as a \
developer, learn to appreciate the time spent writing the code, and do not \
believe those who say that it only takes time to create the architecture. You \
will get a much more accurate vision of the project at the macro- and \
micro-levels after you try to breathe life into your creation."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490263272114*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"a273d07a-e014-4b80-b5f9-3eba56b11a71"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "20", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Perhaps your main problem is not technology.md\"\>"}],
  SequenceForm[
  20, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Perhaps your main problem is not technology.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490263286107*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"22702625-f603-4438-ae3c-298658f40a8f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Right now, somewhere is suffering the disaster \
of another project of a wage calculation system... And probably not alone.\\n\
\\nWhy did that happen? Because the developers chose Ruby instead of Java or \
Python instead of Smalltalk? Because you decided to use Postgres instead of \
Oracle? or because, although you ought to have selected Linux, you liked the \
Windows platform better? As you know, all project failures are usually blamed \
on technology. But was your task really so complex that the Java capabilities \
were not enough for it?\\n\\nProjects are usually created by people, and it \
is these people that determine the success or failure of the whole project. \
And once that's the case, we need to think a little bit about how to help \
them succeed.\\n\\nPer, there is someone in the team who, from your point of \
view, is not doing his job and hindering the success of the project. The \
technology used to solve such problems is very old and time-tested; in fact, \
it is the most important technological achievement in human history. What you \
need is communication.\[NonBreakingSpace]  \\nAt the same time, simply \
possessing the techniques of communication as a technology is not enough. \
Respect for people and the ability to give them credit and trust are \
essential skills that turn a smart leader into an effective one.\
\[NonBreakingSpace]  \\nOf course, the matter is not exhausted, but a few \
simple tips will significantly increase the effectiveness of your \
communication with subordinates:\[NonBreakingSpace]\\n\\n- Consider the \
discussion of problems as a constructive dialogue rather than a conflict \
situation.  \\n- Start from positive assumptions about people and view \
communication as an opportunity to ask questions that interest you, so you \
will definitely be able to get more useful information, and your \
interlocutors will not take a defensive position.\[NonBreakingSpace]  \\n- \
Start the conversation only in a mood suitable for communication.\
\[NonBreakingSpace]  \\n- If you are angry, irritated, upset, and out of \
balance in general, your interlocutor is likely to interpret your non-verbal \
manifestations as a sign of attack.\[NonBreakingSpace]  \\n- Use situations \
such as an opportunity to mutual benefit.\\n\\nDon't tell the developer to be \
quiet at meetings because he doesn't let anyone talk; ask him if he can help \
you get involved in other people's discussions. Explain that an introvert \
needs a longer break to start a conversation, and if he holds a five-second \
break before he pronounces the first words, it will help you a lot.\
\[NonBreakingSpace]  \\nIf you are focused on a common goal, view the \
\[OpenCurlyDoubleQuote]problems\[CloseCurlyDoubleQuote] of your interlocutors \
as an opportunity to learn something, and manage your emotions, you will not \
only improve your efficiency but also learn something new every time.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Right now, somewhere is suffering the disaster of another project of a \
wage calculation system... And probably not alone.\n\nWhy did that happen? \
Because the developers chose Ruby instead of Java or Python instead of \
Smalltalk? Because you decided to use Postgres instead of Oracle? or because, \
although you ought to have selected Linux, you liked the Windows platform \
better? As you know, all project failures are usually blamed on technology. \
But was your task really so complex that the Java capabilities were not \
enough for it?\n\nProjects are usually created by people, and it is these \
people that determine the success or failure of the whole project. And once \
that's the case, we need to think a little bit about how to help them \
succeed.\n\nPer, there is someone in the team who, from your point of view, \
is not doing his job and hindering the success of the project. The technology \
used to solve such problems is very old and time-tested; in fact, it is the \
most important technological achievement in human history. What you need is \
communication.\[NonBreakingSpace]  \nAt the same time, simply possessing the \
techniques of communication as a technology is not enough. Respect for people \
and the ability to give them credit and trust are essential skills that turn \
a smart leader into an effective one.\[NonBreakingSpace]  \nOf course, the \
matter is not exhausted, but a few simple tips will significantly increase \
the effectiveness of your communication with subordinates:\[NonBreakingSpace]\
\n\n- Consider the discussion of problems as a constructive dialogue rather \
than a conflict situation.  \n- Start from positive assumptions about people \
and view communication as an opportunity to ask questions that interest you, \
so you will definitely be able to get more useful information, and your \
interlocutors will not take a defensive position.\[NonBreakingSpace]  \n- \
Start the conversation only in a mood suitable for communication.\
\[NonBreakingSpace]  \n- If you are angry, irritated, upset, and out of \
balance in general, your interlocutor is likely to interpret your non-verbal \
manifestations as a sign of attack.\[NonBreakingSpace]  \n- Use situations \
such as an opportunity to mutual benefit.\n\nDon't tell the developer to be \
quiet at meetings because he doesn't let anyone talk; ask him if he can help \
you get involved in other people's discussions. Explain that an introvert \
needs a longer break to start a conversation, and if he holds a five-second \
break before he pronounces the first words, it will help you a lot.\
\[NonBreakingSpace]  \nIf you are focused on a common goal, view the \
\[OpenCurlyDoubleQuote]problems\[CloseCurlyDoubleQuote] of your interlocutors \
as an opportunity to learn something, and manage your emotions, you will not \
only improve your efficiency but also learn something new every time."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490273102703*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9777a78e-1b0f-466a-8231-4651b41e48da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Right now, somewhere is suffering the disaster \
of another project of a wage calculation system... And probably not alone.\\n\
\\nWhy did that happen? Because the developers chose Ruby instead of Java or \
Python instead of Smalltalk? Because you decided to use Postgres instead of \
Oracle? or because, although you ought to have selected Linux, you liked the \
Windows platform better? As you know, all project failures are usually blamed \
on technology. But was your task really so complex that the Java capabilities \
were not enough for it?\\n\\nProjects are usually created by people, and it \
is these people that determine the success or failure of the whole project. \
And once that's the case, we need to think a little bit about how to help \
them succeed.\\n\\nPer, there is someone in the team who, from your point of \
view, is not doing his job and hindering the success of the project. The \
technology used to solve such problems is very old and time-tested; in fact, \
it is the most important technological achievement in human history. What you \
need is communication.   \\nAt the same time, simply possessing the \
techniques of communication as a technology is not enough. Respect for people \
and the ability to give them credit and trust are essential skills that turn \
a smart leader into an effective one.   \\nOf course, the matter is not \
exhausted, but a few simple tips will significantly increase the \
effectiveness of your communication with subordinates: \\n\\n- Consider the \
discussion of problems as a constructive dialogue rather than a conflict \
situation.  \\n- Start from positive assumptions about people and view \
communication as an opportunity to ask questions that interest you, so you \
will definitely be able to get more useful information, and your \
interlocutors will not take a defensive position.   \\n- Start the \
conversation only in a mood suitable for communication.   \\n- If you are \
angry, irritated, upset, and out of balance in general, your interlocutor is \
likely to interpret your non-verbal manifestations as a sign of attack.   \
\\n- Use situations such as an opportunity to mutual benefit.\\n\\nDon't tell \
the developer to be quiet at meetings because he doesn't let anyone talk; ask \
him if he can help you get involved in other people's discussions. Explain \
that an introvert needs a longer break to start a conversation, and if he \
holds a five-second break before he pronounces the first words, it will help \
you a lot.   \\nIf you are focused on a common goal, view the \
\[OpenCurlyDoubleQuote]problems\[CloseCurlyDoubleQuote] of your interlocutors \
as an opportunity to learn something, and manage your emotions, you will not \
only improve your efficiency but also learn something new every time.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Right now, somewhere is suffering the disaster of another project of a \
wage calculation system... And probably not alone.\n\nWhy did that happen? \
Because the developers chose Ruby instead of Java or Python instead of \
Smalltalk? Because you decided to use Postgres instead of Oracle? or because, \
although you ought to have selected Linux, you liked the Windows platform \
better? As you know, all project failures are usually blamed on technology. \
But was your task really so complex that the Java capabilities were not \
enough for it?\n\nProjects are usually created by people, and it is these \
people that determine the success or failure of the whole project. And once \
that's the case, we need to think a little bit about how to help them \
succeed.\n\nPer, there is someone in the team who, from your point of view, \
is not doing his job and hindering the success of the project. The technology \
used to solve such problems is very old and time-tested; in fact, it is the \
most important technological achievement in human history. What you need is \
communication.   \nAt the same time, simply possessing the techniques of \
communication as a technology is not enough. Respect for people and the \
ability to give them credit and trust are essential skills that turn a smart \
leader into an effective one.   \nOf course, the matter is not exhausted, but \
a few simple tips will significantly increase the effectiveness of your \
communication with subordinates: \n\n- Consider the discussion of problems as \
a constructive dialogue rather than a conflict situation.  \n- Start from \
positive assumptions about people and view communication as an opportunity to \
ask questions that interest you, so you will definitely be able to get more \
useful information, and your interlocutors will not take a defensive \
position.   \n- Start the conversation only in a mood suitable for \
communication.   \n- If you are angry, irritated, upset, and out of balance \
in general, your interlocutor is likely to interpret your non-verbal \
manifestations as a sign of attack.   \n- Use situations such as an \
opportunity to mutual benefit.\n\nDon't tell the developer to be quiet at \
meetings because he doesn't let anyone talk; ask him if he can help you get \
involved in other people's discussions. Explain that an introvert needs a \
longer break to start a conversation, and if he holds a five-second break \
before he pronounces the first words, it will help you a lot.   \nIf you are \
focused on a common goal, view the \[OpenCurlyDoubleQuote]problems\
\[CloseCurlyDoubleQuote] of your interlocutors as an opportunity to learn \
something, and manage your emotions, you will not only improve your \
efficiency but also learn something new every time."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324903760223293`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5cad619a-fe31-4c48-84c0-4096486841ab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Right now, somewhere is suffering the disaster \
of another project of a wage calculation system... And probably not alone.\\n\
\\nWhy did that happen? Because the developers chose Ruby instead of Java or \
Python instead of Smalltalk? Because you decided to use Postgres instead of \
Oracle? or because, although you ought to have selected Linux, you liked the \
Windows platform better? As you know, all project failures are usually blamed \
on technology. But was your task really so complex that the Java capabilities \
were not enough for it?\\n\\nProjects are usually created by people, and it \
is these people that determine the success or failure of the whole project. \
And once that's the case, we need to think a little bit about how to help \
them succeed.\\n\\nPer, there is someone in the team who, from your point of \
view, is not doing his job and hindering the success of the project. The \
technology used to solve such problems is very old and time-tested; in fact, \
it is the most important technological achievement in human history. What you \
need is communication.   \\nAt the same time, simply possessing the \
techniques of communication as a technology is not enough. Respect for people \
and the ability to give them credit and trust are essential skills that turn \
a smart leader into an effective one.   \\nOf course, the matter is not \
exhausted, but a few simple tips will significantly increase the \
effectiveness of your communication with subordinates: \\n\\n- Consider the \
discussion of problems as a constructive dialogue rather than a conflict \
situation.  \\n- Start from positive assumptions about people and view \
communication as an opportunity to ask questions that interest you, so you \
will definitely be able to get more useful information, and your \
interlocutors will not take a defensive position.   \\n- Start the \
conversation only in a mood suitable for communication.   \\n- If you are \
angry, irritated, upset, and out of balance in general, your interlocutor is \
likely to interpret your non-verbal manifestations as a sign of attack.   \
\\n- Use situations such as an opportunity to mutual benefit.\\n\\nDon't tell \
the developer to be quiet at meetings because he doesn't let anyone talk; ask \
him if he can help you get involved in other people's discussions. Explain \
that an introvert needs a longer break to start a conversation, and if he \
holds a five-second break before he pronounces the first words, it will help \
you a lot.   \\nIf you are focused on a common goal, view the \
\[OpenCurlyDoubleQuote]problems\[CloseCurlyDoubleQuote] of your interlocutors \
as an opportunity to learn something, and manage your emotions, you will not \
only improve your efficiency but also learn something new every time.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Right now, somewhere is suffering the disaster of another project of a \
wage calculation system... And probably not alone.\n\nWhy did that happen? \
Because the developers chose Ruby instead of Java or Python instead of \
Smalltalk? Because you decided to use Postgres instead of Oracle? or because, \
although you ought to have selected Linux, you liked the Windows platform \
better? As you know, all project failures are usually blamed on technology. \
But was your task really so complex that the Java capabilities were not \
enough for it?\n\nProjects are usually created by people, and it is these \
people that determine the success or failure of the whole project. And once \
that's the case, we need to think a little bit about how to help them \
succeed.\n\nPer, there is someone in the team who, from your point of view, \
is not doing his job and hindering the success of the project. The technology \
used to solve such problems is very old and time-tested; in fact, it is the \
most important technological achievement in human history. What you need is \
communication.   \nAt the same time, simply possessing the techniques of \
communication as a technology is not enough. Respect for people and the \
ability to give them credit and trust are essential skills that turn a smart \
leader into an effective one.   \nOf course, the matter is not exhausted, but \
a few simple tips will significantly increase the effectiveness of your \
communication with subordinates: \n\n- Consider the discussion of problems as \
a constructive dialogue rather than a conflict situation.  \n- Start from \
positive assumptions about people and view communication as an opportunity to \
ask questions that interest you, so you will definitely be able to get more \
useful information, and your interlocutors will not take a defensive \
position.   \n- Start the conversation only in a mood suitable for \
communication.   \n- If you are angry, irritated, upset, and out of balance \
in general, your interlocutor is likely to interpret your non-verbal \
manifestations as a sign of attack.   \n- Use situations such as an \
opportunity to mutual benefit.\n\nDon't tell the developer to be quiet at \
meetings because he doesn't let anyone talk; ask him if he can help you get \
involved in other people's discussions. Explain that an introvert needs a \
longer break to start a conversation, and if he holds a five-second break \
before he pronounces the first words, it will help you a lot.   \nIf you are \
focused on a common goal, view the \[OpenCurlyDoubleQuote]problems\
\[CloseCurlyDoubleQuote] of your interlocutors as an opportunity to learn \
something, and manage your emotions, you will not only improve your \
efficiency but also learn something new every time."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324903761631923`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3590f239-50bb-406e-b4bc-f3fab1cc0d3a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Perhaps your main problem is not \
technology'\\ndate = 2024-05-22T00:00:00-07:00\\ndraft = false\\ncategories = \
[\\\"ruby\\\", \\\"java\\\", \\\"python\\\", \\\"smalltalk\\\"]\\ntags = \
[\\\"ruby\\\", \\\"java\\\", \\\"python\\\", \\\"smalltalk\\\", \
\\\"postgres\\\", \\\"oracle\\\", \\\"windows\\\", \\\"linux\\\", \\\"start\\\
\", \\\"communication\\\", \\\"people\\\", \\\"opportunity\\\", \
\\\"problems\\\", \\\"projects\\\", \\\"project\\\", \
\\\"explain\\\"]\\ncover_image='/images/cover/knoxwelle__2017-06-18T221428.\
000Z.jpg'\\n+++\\nRight now, somewhere is suffering the disaster of another \
project of a wage calculation system... And probably not alone.\\n\\nWhy did \
that happen? Because the developers chose Ruby instead of Java or Python \
instead of Smalltalk? Because you decided to use Postgres instead of Oracle? \
or because, although you ought to have selected Linux, you liked the Windows \
platform better? As you know, all project failures are usually blamed on \
technology. But was your task really so complex that the Java capabilities \
were not enough for it?\\n\\nProjects are usually created by people, and it \
is these people that determine the success or failure of the whole project. \
And once that's the case, we need to think a little bit about how to help \
them succeed.\\n\\nPer, there is someone in the team who, from your point of \
view, is not doing his job and hindering the success of the project. The \
technology used to solve such problems is very old and time-tested; in fact, \
it is the most important technological achievement in human history. What you \
need is communication.   \\nAt the same time, simply possessing the \
techniques of communication as a technology is not enough. Respect for people \
and the ability to give them credit and trust are essential skills that turn \
a smart leader into an effective one.   \\nOf course, the matter is not \
exhausted, but a few simple tips will significantly increase the \
effectiveness of your communication with subordinates: \\n\\n- Consider the \
discussion of problems as a constructive dialogue rather than a conflict \
situation.  \\n- Start from positive assumptions about people and view \
communication as an opportunity to ask questions that interest you, so you \
will definitely be able to get more useful information, and your \
interlocutors will not take a defensive position.   \\n- Start the \
conversation only in a mood suitable for communication.   \\n- If you are \
angry, irritated, upset, and out of balance in general, your interlocutor is \
likely to interpret your non-verbal manifestations as a sign of attack.   \
\\n- Use situations such as an opportunity to mutual benefit.\\n\\nDon't tell \
the developer to be quiet at meetings because he doesn't let anyone talk; ask \
him if he can help you get involved in other people's discussions. Explain \
that an introvert needs a longer break to start a conversation, and if he \
holds a five-second break before he pronounces the first words, it will help \
you a lot.   \\nIf you are focused on a common goal, view the \
\[OpenCurlyDoubleQuote]problems\[CloseCurlyDoubleQuote] of your interlocutors \
as an opportunity to learn something, and manage your emotions, you will not \
only improve your efficiency but also learn something new every time.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Perhaps your main problem is not technology'\ndate = \
2024-05-22T00:00:00-07:00\ndraft = false\ncategories = [\"ruby\", \"java\", \
\"python\", \"smalltalk\"]\ntags = [\"ruby\", \"java\", \"python\", \
\"smalltalk\", \"postgres\", \"oracle\", \"windows\", \"linux\", \"start\", \
\"communication\", \"people\", \"opportunity\", \"problems\", \"projects\", \
\"project\", \"explain\"]\n\
cover_image='/images/cover/knoxwelle__2017-06-18T221428.000Z.jpg'\n+++\nRight \
now, somewhere is suffering the disaster of another project of a wage \
calculation system... And probably not alone.\n\nWhy did that happen? Because \
the developers chose Ruby instead of Java or Python instead of Smalltalk? \
Because you decided to use Postgres instead of Oracle? or because, although \
you ought to have selected Linux, you liked the Windows platform better? As \
you know, all project failures are usually blamed on technology. But was your \
task really so complex that the Java capabilities were not enough for it?\n\n\
Projects are usually created by people, and it is these people that determine \
the success or failure of the whole project. And once that's the case, we \
need to think a little bit about how to help them succeed.\n\nPer, there is \
someone in the team who, from your point of view, is not doing his job and \
hindering the success of the project. The technology used to solve such \
problems is very old and time-tested; in fact, it is the most important \
technological achievement in human history. What you need is communication.   \
\nAt the same time, simply possessing the techniques of communication as a \
technology is not enough. Respect for people and the ability to give them \
credit and trust are essential skills that turn a smart leader into an \
effective one.   \nOf course, the matter is not exhausted, but a few simple \
tips will significantly increase the effectiveness of your communication with \
subordinates: \n\n- Consider the discussion of problems as a constructive \
dialogue rather than a conflict situation.  \n- Start from positive \
assumptions about people and view communication as an opportunity to ask \
questions that interest you, so you will definitely be able to get more \
useful information, and your interlocutors will not take a defensive \
position.   \n- Start the conversation only in a mood suitable for \
communication.   \n- If you are angry, irritated, upset, and out of balance \
in general, your interlocutor is likely to interpret your non-verbal \
manifestations as a sign of attack.   \n- Use situations such as an \
opportunity to mutual benefit.\n\nDon't tell the developer to be quiet at \
meetings because he doesn't let anyone talk; ask him if he can help you get \
involved in other people's discussions. Explain that an introvert needs a \
longer break to start a conversation, and if he holds a five-second break \
before he pronounces the first words, it will help you a lot.   \nIf you are \
focused on a common goal, view the \[OpenCurlyDoubleQuote]problems\
\[CloseCurlyDoubleQuote] of your interlocutors as an opportunity to learn \
something, and manage your emotions, you will not only improve your \
efficiency but also learn something new every time."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324903761841936`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5a4d4ab3-1eac-4801-9bd7-982d085cb152"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "21", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Problems can be more than their reflection in the \
mirror.md\"\>"}],
  SequenceForm[
  21, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Problems can be more than their reflection in the mirror.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324903762012067`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"8d15dcfc-36ce-4635-9268-974b548d823b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been working on a bunch of programming \
projects.Each of them encountered problems that caused more trouble than the \
developer team expected.This often occurred as follows: some team members \
noticed such problems early, but most staff rejected or ignored all symptoms \
because they did not realize their importance until it was too \
late.\\n\\nThis happens for a variety of reasons:\\n\\n- Problems that seem \
trivial at an early stage of the project become critical when ix is too late \
to fix.The story of a welded frog is probably an exaggeration, but it \
perfectly illustrates what is happening in many projects.\\n\\n- Some \
employees often encounter resistance when other team members do not have \
similar experience or knowledge.Overcoming this resistance requires \
exceptional courage, confidence and persistence, and these qualities are \
rarely possessed even by highly paid experienced consultants hired \
specifically to prevent such problems.\\n\\n- Most developers are optimistic. \
Bitter life experiences teach us to moderate our optimism, but neophytes tend \
to look at the world optimistically. People who are naturally pessimistic are \
usually unpopular in teams, even if they are right over and over again.Few \
will want to risk their reputation and go against the majority without very \
serious grounds.Many of us are familiar with the feeling \\\"I don't like all \
this, but I can't explain why,\\\" but it rarely becomes an effective \
argument in a dispute.\\n\\n- Every member of the team has their own opinion \
about what is important and what is not.At the same time, their attention is \
focused on what they are personally responsible for, rather than the \
objectives of the project.\\n\\n- Each of us has our own \\\"blind spots\\\" \
- weaknesses and shortcomings that are difficult for us to realize or accept.\
\\n\\nHere are possible strategies to counter these factors:\\n\\n- Develop \
an organized approach to risk management. One of the easiest solutions is to \
monitor risks in the same way that you do with software errors. Anyone can \
identify a risk, and then every risk is monitored until it ceases to be a \
risk.When the risk status changes or new information appears, the risks are \
reviewed and re-ranked.This helps to remove unnecessary emotions from \
discussions and reminds us of the need for periodic risk reassessment.\\n\\n- \
Speaking against the majority, think about how to help the other members of \
the team understand you.In any team you are a member of, promote freedom of \
opinion and try to discuss controversial topics as quietly as \
possible.\\n\\n- Feelings like \\\"I don't like all this\\\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\\n\\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\\n\\n- To see your \\\"blind \
spots\\\" is difficult by definition.The people from whom you are willing to \
hear the unpleasant truth when you need it are your precious resource.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been working on a bunch of programming projects.Each of them \
encountered problems that caused more trouble than the developer team \
expected.This often occurred as follows: some team members noticed such \
problems early, but most staff rejected or ignored all symptoms because they \
did not realize their importance until it was too late.\n\nThis happens for a \
variety of reasons:\n\n- Problems that seem trivial at an early stage of the \
project become critical when ix is too late to fix.The story of a welded frog \
is probably an exaggeration, but it perfectly illustrates what is happening \
in many projects.\n\n- Some employees often encounter resistance when other \
team members do not have similar experience or knowledge.Overcoming this \
resistance requires exceptional courage, confidence and persistence, and \
these qualities are rarely possessed even by highly paid experienced \
consultants hired specifically to prevent such problems.\n\n- Most developers \
are optimistic. Bitter life experiences teach us to moderate our optimism, \
but neophytes tend to look at the world optimistically. People who are \
naturally pessimistic are usually unpopular in teams, even if they are right \
over and over again.Few will want to risk their reputation and go against the \
majority without very serious grounds.Many of us are familiar with the \
feeling \"I don't like all this, but I can't explain why,\" but it rarely \
becomes an effective argument in a dispute.\n\n- Every member of the team has \
their own opinion about what is important and what is not.At the same time, \
their attention is focused on what they are personally responsible for, \
rather than the objectives of the project.\n\n- Each of us has our own \
\"blind spots\" - weaknesses and shortcomings that are difficult for us to \
realize or accept.\n\nHere are possible strategies to counter these factors:\n\
\n- Develop an organized approach to risk management. One of the easiest \
solutions is to monitor risks in the same way that you do with software \
errors. Anyone can identify a risk, and then every risk is monitored until it \
ceases to be a risk.When the risk status changes or new information appears, \
the risks are reviewed and re-ranked.This helps to remove unnecessary \
emotions from discussions and reminds us of the need for periodic risk \
reassessment.\n\n- Speaking against the majority, think about how to help the \
other members of the team understand you.In any team you are a member of, \
promote freedom of opinion and try to discuss controversial topics as quietly \
as possible.\n\n- Feelings like \"I don't like all this\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\n\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\n\n- To see your \"blind spots\" \
is difficult by definition.The people from whom you are willing to hear the \
unpleasant truth when you need it are your precious resource."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324903852800655`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"961e869b-b1ad-4136-ac25-51ed8292fea0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been working on a bunch of programming \
projects.Each of them encountered problems that caused more trouble than the \
developer team expected.This often occurred as follows: some team members \
noticed such problems early, but most staff rejected or ignored all symptoms \
because they did not realize their importance until it was too \
late.\\n\\nThis happens for a variety of reasons:\\n\\n- Problems that seem \
trivial at an early stage of the project become critical when ix is too late \
to fix.The story of a welded frog is probably an exaggeration, but it \
perfectly illustrates what is happening in many projects.\\n\\n- Some \
employees often encounter resistance when other team members do not have \
similar experience or knowledge.Overcoming this resistance requires \
exceptional courage, confidence and persistence, and these qualities are \
rarely possessed even by highly paid experienced consultants hired \
specifically to prevent such problems.\\n\\n- Most developers are optimistic. \
Bitter life experiences teach us to moderate our optimism, but neophytes tend \
to look at the world optimistically. People who are naturally pessimistic are \
usually unpopular in teams, even if they are right over and over again.Few \
will want to risk their reputation and go against the majority without very \
serious grounds.Many of us are familiar with the feeling \\\"I don't like all \
this, but I can't explain why,\\\" but it rarely becomes an effective \
argument in a dispute.\\n\\n- Every member of the team has their own opinion \
about what is important and what is not.At the same time, their attention is \
focused on what they are personally responsible for, rather than the \
objectives of the project.\\n\\n- Each of us has our own \\\"blind spots\\\" \
- weaknesses and shortcomings that are difficult for us to realize or accept.\
\\n\\nHere are possible strategies to counter these factors:\\n\\n- Develop \
an organized approach to risk management. One of the easiest solutions is to \
monitor risks in the same way that you do with software errors. Anyone can \
identify a risk, and then every risk is monitored until it ceases to be a \
risk.When the risk status changes or new information appears, the risks are \
reviewed and re-ranked.This helps to remove unnecessary emotions from \
discussions and reminds us of the need for periodic risk reassessment.\\n\\n- \
Speaking against the majority, think about how to help the other members of \
the team understand you.In any team you are a member of, promote freedom of \
opinion and try to discuss controversial topics as quietly as \
possible.\\n\\n- Feelings like \\\"I don't like all this\\\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\\n\\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\\n\\n- To see your \\\"blind \
spots\\\" is difficult by definition.The people from whom you are willing to \
hear the unpleasant truth when you need it are your precious resource.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been working on a bunch of programming projects.Each of them \
encountered problems that caused more trouble than the developer team \
expected.This often occurred as follows: some team members noticed such \
problems early, but most staff rejected or ignored all symptoms because they \
did not realize their importance until it was too late.\n\nThis happens for a \
variety of reasons:\n\n- Problems that seem trivial at an early stage of the \
project become critical when ix is too late to fix.The story of a welded frog \
is probably an exaggeration, but it perfectly illustrates what is happening \
in many projects.\n\n- Some employees often encounter resistance when other \
team members do not have similar experience or knowledge.Overcoming this \
resistance requires exceptional courage, confidence and persistence, and \
these qualities are rarely possessed even by highly paid experienced \
consultants hired specifically to prevent such problems.\n\n- Most developers \
are optimistic. Bitter life experiences teach us to moderate our optimism, \
but neophytes tend to look at the world optimistically. People who are \
naturally pessimistic are usually unpopular in teams, even if they are right \
over and over again.Few will want to risk their reputation and go against the \
majority without very serious grounds.Many of us are familiar with the \
feeling \"I don't like all this, but I can't explain why,\" but it rarely \
becomes an effective argument in a dispute.\n\n- Every member of the team has \
their own opinion about what is important and what is not.At the same time, \
their attention is focused on what they are personally responsible for, \
rather than the objectives of the project.\n\n- Each of us has our own \
\"blind spots\" - weaknesses and shortcomings that are difficult for us to \
realize or accept.\n\nHere are possible strategies to counter these factors:\n\
\n- Develop an organized approach to risk management. One of the easiest \
solutions is to monitor risks in the same way that you do with software \
errors. Anyone can identify a risk, and then every risk is monitored until it \
ceases to be a risk.When the risk status changes or new information appears, \
the risks are reviewed and re-ranked.This helps to remove unnecessary \
emotions from discussions and reminds us of the need for periodic risk \
reassessment.\n\n- Speaking against the majority, think about how to help the \
other members of the team understand you.In any team you are a member of, \
promote freedom of opinion and try to discuss controversial topics as quietly \
as possible.\n\n- Feelings like \"I don't like all this\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\n\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\n\n- To see your \"blind spots\" \
is difficult by definition.The people from whom you are willing to hear the \
unpleasant truth when you need it are your precious resource."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324904978280277`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"85763dd0-17ee-4561-be15-5426d82502c2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been working on a bunch of programming \
projects.Each of them encountered problems that caused more trouble than the \
developer team expected.This often occurred as follows: some team members \
noticed such problems early, but most staff rejected or ignored all symptoms \
because they did not realize their importance until it was too \
late.\\n\\nThis happens for a variety of reasons:\\n\\n- Problems that seem \
trivial at an early stage of the project become critical when ix is too late \
to fix.The story of a welded frog is probably an exaggeration, but it \
perfectly illustrates what is happening in many projects.\\n\\n- Some \
employees often encounter resistance when other team members do not have \
similar experience or knowledge.Overcoming this resistance requires \
exceptional courage, confidence and persistence, and these qualities are \
rarely possessed even by highly paid experienced consultants hired \
specifically to prevent such problems.\\n\\n- Most developers are optimistic. \
Bitter life experiences teach us to moderate our optimism, but neophytes tend \
to look at the world optimistically. People who are naturally pessimistic are \
usually unpopular in teams, even if they are right over and over again.Few \
will want to risk their reputation and go against the majority without very \
serious grounds.Many of us are familiar with the feeling \\\"I don't like all \
this, but I can't explain why,\\\" but it rarely becomes an effective \
argument in a dispute.\\n\\n- Every member of the team has their own opinion \
about what is important and what is not.At the same time, their attention is \
focused on what they are personally responsible for, rather than the \
objectives of the project.\\n\\n- Each of us has our own \\\"blind spots\\\" \
- weaknesses and shortcomings that are difficult for us to realize or accept.\
\\n\\nHere are possible strategies to counter these factors:\\n\\n- Develop \
an organized approach to risk management. One of the easiest solutions is to \
monitor risks in the same way that you do with software errors. Anyone can \
identify a risk, and then every risk is monitored until it ceases to be a \
risk.When the risk status changes or new information appears, the risks are \
reviewed and re-ranked.This helps to remove unnecessary emotions from \
discussions and reminds us of the need for periodic risk reassessment.\\n\\n- \
Speaking against the majority, think about how to help the other members of \
the team understand you.In any team you are a member of, promote freedom of \
opinion and try to discuss controversial topics as quietly as \
possible.\\n\\n- Feelings like \\\"I don't like all this\\\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\\n\\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\\n\\n- To see your \\\"blind \
spots\\\" is difficult by definition.The people from whom you are willing to \
hear the unpleasant truth when you need it are your precious resource.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been working on a bunch of programming projects.Each of them \
encountered problems that caused more trouble than the developer team \
expected.This often occurred as follows: some team members noticed such \
problems early, but most staff rejected or ignored all symptoms because they \
did not realize their importance until it was too late.\n\nThis happens for a \
variety of reasons:\n\n- Problems that seem trivial at an early stage of the \
project become critical when ix is too late to fix.The story of a welded frog \
is probably an exaggeration, but it perfectly illustrates what is happening \
in many projects.\n\n- Some employees often encounter resistance when other \
team members do not have similar experience or knowledge.Overcoming this \
resistance requires exceptional courage, confidence and persistence, and \
these qualities are rarely possessed even by highly paid experienced \
consultants hired specifically to prevent such problems.\n\n- Most developers \
are optimistic. Bitter life experiences teach us to moderate our optimism, \
but neophytes tend to look at the world optimistically. People who are \
naturally pessimistic are usually unpopular in teams, even if they are right \
over and over again.Few will want to risk their reputation and go against the \
majority without very serious grounds.Many of us are familiar with the \
feeling \"I don't like all this, but I can't explain why,\" but it rarely \
becomes an effective argument in a dispute.\n\n- Every member of the team has \
their own opinion about what is important and what is not.At the same time, \
their attention is focused on what they are personally responsible for, \
rather than the objectives of the project.\n\n- Each of us has our own \
\"blind spots\" - weaknesses and shortcomings that are difficult for us to \
realize or accept.\n\nHere are possible strategies to counter these factors:\n\
\n- Develop an organized approach to risk management. One of the easiest \
solutions is to monitor risks in the same way that you do with software \
errors. Anyone can identify a risk, and then every risk is monitored until it \
ceases to be a risk.When the risk status changes or new information appears, \
the risks are reviewed and re-ranked.This helps to remove unnecessary \
emotions from discussions and reminds us of the need for periodic risk \
reassessment.\n\n- Speaking against the majority, think about how to help the \
other members of the team understand you.In any team you are a member of, \
promote freedom of opinion and try to discuss controversial topics as quietly \
as possible.\n\n- Feelings like \"I don't like all this\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\n\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\n\n- To see your \"blind spots\" \
is difficult by definition.The people from whom you are willing to hear the \
unpleasant truth when you need it are your precious resource."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.93249049802984*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"a33889be-11e8-44c5-9049-122223ce736a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Problems can be more than their \
reflection in the mirror'\\ndate = 2024-05-27T00:00:00-07:00\\ndraft = \
false\\ncategories = []\\ntags = [\\\"team\\\", \\\"risk\\\", \
\\\"problems\\\", \\\"members\\\", \
\\\"need\\\"]\\ncover_image='/images/cover/knoxwelle__2024-07-22T064944.000Z.\
jpg'\\n+++\\nI've been working on a bunch of programming projects.Each of \
them encountered problems that caused more trouble than the developer team \
expected.This often occurred as follows: some team members noticed such \
problems early, but most staff rejected or ignored all symptoms because they \
did not realize their importance until it was too late.\\n\\nThis happens for \
a variety of reasons:\\n\\n- Problems that seem trivial at an early stage of \
the project become critical when ix is too late to fix.The story of a welded \
frog is probably an exaggeration, but it perfectly illustrates what is \
happening in many projects.\\n\\n- Some employees often encounter resistance \
when other team members do not have similar experience or \
knowledge.Overcoming this resistance requires exceptional courage, confidence \
and persistence, and these qualities are rarely possessed even by highly paid \
experienced consultants hired specifically to prevent such problems.\\n\\n- \
Most developers are optimistic. Bitter life experiences teach us to moderate \
our optimism, but neophytes tend to look at the world optimistically. People \
who are naturally pessimistic are usually unpopular in teams, even if they \
are right over and over again.Few will want to risk their reputation and go \
against the majority without very serious grounds.Many of us are familiar \
with the feeling \\\"I don't like all this, but I can't explain why,\\\" but \
it rarely becomes an effective argument in a dispute.\\n\\n- Every member of \
the team has their own opinion about what is important and what is not.At the \
same time, their attention is focused on what they are personally responsible \
for, rather than the objectives of the project.\\n\\n- Each of us has our own \
\\\"blind spots\\\" - weaknesses and shortcomings that are difficult for us \
to realize or accept.\\n\\nHere are possible strategies to counter these \
factors:\\n\\n- Develop an organized approach to risk management. One of the \
easiest solutions is to monitor risks in the same way that you do with \
software errors. Anyone can identify a risk, and then every risk is monitored \
until it ceases to be a risk.When the risk status changes or new information \
appears, the risks are reviewed and re-ranked.This helps to remove \
unnecessary emotions from discussions and reminds us of the need for periodic \
risk reassessment.\\n\\n- Speaking against the majority, think about how to \
help the other members of the team understand you.In any team you are a \
member of, promote freedom of opinion and try to discuss controversial topics \
as quietly as possible.\\n\\n- Feelings like \\\"I don't like all this\\\" \
deserve attention.If there are no reliable facts yet, try to come up with the \
easiest way to verify that will provide them.\\n\\n- Constantly relate your \
vision of the system to the representations of the team and the \
customer.Tools such as a priority-rated list of informal requirements are \
useful, but do not replace regular customer communication and \
openness.\\n\\n- To see your \\\"blind spots\\\" is difficult by \
definition.The people from whom you are willing to hear the unpleasant truth \
when you need it are your precious resource.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Problems can be more than their reflection in the mirror'\n\
date = 2024-05-27T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"team\", \"risk\", \"problems\", \"members\", \"need\"]\n\
cover_image='/images/cover/knoxwelle__2024-07-22T064944.000Z.jpg'\n+++\nI've \
been working on a bunch of programming projects.Each of them encountered \
problems that caused more trouble than the developer team expected.This often \
occurred as follows: some team members noticed such problems early, but most \
staff rejected or ignored all symptoms because they did not realize their \
importance until it was too late.\n\nThis happens for a variety of reasons:\n\
\n- Problems that seem trivial at an early stage of the project become \
critical when ix is too late to fix.The story of a welded frog is probably an \
exaggeration, but it perfectly illustrates what is happening in many \
projects.\n\n- Some employees often encounter resistance when other team \
members do not have similar experience or knowledge.Overcoming this \
resistance requires exceptional courage, confidence and persistence, and \
these qualities are rarely possessed even by highly paid experienced \
consultants hired specifically to prevent such problems.\n\n- Most developers \
are optimistic. Bitter life experiences teach us to moderate our optimism, \
but neophytes tend to look at the world optimistically. People who are \
naturally pessimistic are usually unpopular in teams, even if they are right \
over and over again.Few will want to risk their reputation and go against the \
majority without very serious grounds.Many of us are familiar with the \
feeling \"I don't like all this, but I can't explain why,\" but it rarely \
becomes an effective argument in a dispute.\n\n- Every member of the team has \
their own opinion about what is important and what is not.At the same time, \
their attention is focused on what they are personally responsible for, \
rather than the objectives of the project.\n\n- Each of us has our own \
\"blind spots\" - weaknesses and shortcomings that are difficult for us to \
realize or accept.\n\nHere are possible strategies to counter these factors:\n\
\n- Develop an organized approach to risk management. One of the easiest \
solutions is to monitor risks in the same way that you do with software \
errors. Anyone can identify a risk, and then every risk is monitored until it \
ceases to be a risk.When the risk status changes or new information appears, \
the risks are reviewed and re-ranked.This helps to remove unnecessary \
emotions from discussions and reminds us of the need for periodic risk \
reassessment.\n\n- Speaking against the majority, think about how to help the \
other members of the team understand you.In any team you are a member of, \
promote freedom of opinion and try to discuss controversial topics as quietly \
as possible.\n\n- Feelings like \"I don't like all this\" deserve \
attention.If there are no reliable facts yet, try to come up with the easiest \
way to verify that will provide them.\n\n- Constantly relate your vision of \
the system to the representations of the team and the customer.Tools such as \
a priority-rated list of informal requirements are useful, but do not replace \
regular customer communication and openness.\n\n- To see your \"blind spots\" \
is difficult by definition.The people from whom you are willing to hear the \
unpleasant truth when you need it are your precious resource."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.93249049805273*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"963501bf-be8a-47e0-83ca-0183e4891afc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "22", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Reduce the intrinsic complexity and eliminate the \
incidental complexity.md\"\>"}],
  SequenceForm[
  22, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Reduce the intrinsic complexity and eliminate the incidental complexity.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324904980708723`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b50cf8c2-4dcc-49d1-b289-c327cd10d912"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"Essential complexity is a problem inherent in \
any task. For example, the task of coordinating air traffic at the national \
level is complex in itself. The control system must monitor in real time the \
precise location of each aircraft (including altitude), its speed, direction \
and destination, in order to prevent collisions in the air and on the \
runways. It is also necessary to manage flight schedules promptly to avoid \
congestion at airports in constantly changing conditions \[Dash] when the \
weather changes sharply the entire schedule has to be revised. \\n\\nOn the \
other hand, accidental complexity is caused by challenges that we think need \
to be solved in order to reduce the inherent complexity. An example of a \
minor complexity is the outdated flight management system still in use.The \
system was designed to solve the complex problem of managing the movement of \
thousands of aircraft, but this solution creates its own problems. Modern \
flight control systems are so complex that upgrading them is difficult, if \
not impossible.Flight management is carried out around the world with more \
than 30 years of technology.  \\n\\n\[OpenCurlyDoubleQuote]Secondary \
complexity syndrome\[CloseCurlyDoubleQuote] is manifested in many \
infrastructures (framework) and firm \[OpenCurlyDoubleQuote]solutions\
\[CloseCurlyDoubleQuote] .Real benefits come from infrastructures designed to \
handle specific, limited problems; overly complicated infrastructures \
actually make matters worse.\\n\\nComplex solutions attract developers just \
as flames attract moths, and often with the same result. Solving complex \
tasks is interesting, and the work of a programmer is essentially consisting \
of solving puzzles. Who hasn't experienced the charm of solving an incredibly \
difficult task? However, in large-scale projects, it is very difficult to \
avoid secondary complexity by focusing on work with intrinsic complexity.  \
\\n\\nHow do we that? Prefer working-code infrastructures to ivory \
towers.Relate the amount of code intended to solve the immediate task to the \
amount that simply serves the user's interaction with the application. Be \
careful with the solutions promoted by the developers: such solutions are not \
always bad at first, but they often have a secondary complexity. Check the \
compliance of the solution with the task.  \\n\\nThe duty of the architect is \
to solve problems that lie in the plane of intrinsic complexity, without \
introducing secondary complexity.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "Essential complexity is a problem inherent in any task. For example, the \
task of coordinating air traffic at the national level is complex in itself. \
The control system must monitor in real time the precise location of each \
aircraft (including altitude), its speed, direction and destination, in order \
to prevent collisions in the air and on the runways. It is also necessary to \
manage flight schedules promptly to avoid congestion at airports in \
constantly changing conditions \[Dash] when the weather changes sharply the \
entire schedule has to be revised. \n\nOn the other hand, accidental \
complexity is caused by challenges that we think need to be solved in order \
to reduce the inherent complexity. An example of a minor complexity is the \
outdated flight management system still in use.The system was designed to \
solve the complex problem of managing the movement of thousands of aircraft, \
but this solution creates its own problems. Modern flight control systems are \
so complex that upgrading them is difficult, if not impossible.Flight \
management is carried out around the world with more than 30 years of \
technology.  \n\n\[OpenCurlyDoubleQuote]Secondary complexity syndrome\
\[CloseCurlyDoubleQuote] is manifested in many infrastructures (framework) \
and firm \[OpenCurlyDoubleQuote]solutions\[CloseCurlyDoubleQuote] .Real \
benefits come from infrastructures designed to handle specific, limited \
problems; overly complicated infrastructures actually make matters worse.\n\n\
Complex solutions attract developers just as flames attract moths, and often \
with the same result. Solving complex tasks is interesting, and the work of a \
programmer is essentially consisting of solving puzzles. Who hasn't \
experienced the charm of solving an incredibly difficult task? However, in \
large-scale projects, it is very difficult to avoid secondary complexity by \
focusing on work with intrinsic complexity.  \n\nHow do we that? Prefer \
working-code infrastructures to ivory towers.Relate the amount of code \
intended to solve the immediate task to the amount that simply serves the \
user's interaction with the application. Be careful with the solutions \
promoted by the developers: such solutions are not always bad at first, but \
they often have a secondary complexity. Check the compliance of the solution \
with the task.  \n\nThe duty of the architect is to solve problems that lie \
in the plane of intrinsic complexity, without introducing secondary \
complexity."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324905081951714`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"bc6334b6-45bd-4c60-8502-1e7a7e2f231c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"Essential complexity is a problem inherent in \
any task. For example, the task of coordinating air traffic at the national \
level is complex in itself. The control system must monitor in real time the \
precise location of each aircraft (including altitude), its speed, direction \
and destination, in order to prevent collisions in the air and on the \
runways. It is also necessary to manage flight schedules promptly to avoid \
congestion at airports in constantly changing conditions \[Dash] when the \
weather changes sharply the entire schedule has to be revised. \\n\\nOn the \
other hand, accidental complexity is caused by challenges that we think need \
to be solved in order to reduce the inherent complexity. An example of a \
minor complexity is the outdated flight management system still in use.The \
system was designed to solve the complex problem of managing the movement of \
thousands of aircraft, but this solution creates its own problems. Modern \
flight control systems are so complex that upgrading them is difficult, if \
not impossible.Flight management is carried out around the world with more \
than 30 years of technology.  \\n\\n\[OpenCurlyDoubleQuote]Secondary \
complexity syndrome\[CloseCurlyDoubleQuote] is manifested in many \
infrastructures (framework) and firm \[OpenCurlyDoubleQuote]solutions\
\[CloseCurlyDoubleQuote] .Real benefits come from infrastructures designed to \
handle specific, limited problems; overly complicated infrastructures \
actually make matters worse.\\n\\nComplex solutions attract developers just \
as flames attract moths, and often with the same result. Solving complex \
tasks is interesting, and the work of a programmer is essentially consisting \
of solving puzzles. Who hasn't experienced the charm of solving an incredibly \
difficult task? However, in large-scale projects, it is very difficult to \
avoid secondary complexity by focusing on work with intrinsic complexity.  \
\\n\\nHow do we that? Prefer working-code infrastructures to ivory \
towers.Relate the amount of code intended to solve the immediate task to the \
amount that simply serves the user's interaction with the application. Be \
careful with the solutions promoted by the developers: such solutions are not \
always bad at first, but they often have a secondary complexity. Check the \
compliance of the solution with the task.  \\n\\nThe duty of the architect is \
to solve problems that lie in the plane of intrinsic complexity, without \
introducing secondary complexity.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "Essential complexity is a problem inherent in any task. For example, the \
task of coordinating air traffic at the national level is complex in itself. \
The control system must monitor in real time the precise location of each \
aircraft (including altitude), its speed, direction and destination, in order \
to prevent collisions in the air and on the runways. It is also necessary to \
manage flight schedules promptly to avoid congestion at airports in \
constantly changing conditions \[Dash] when the weather changes sharply the \
entire schedule has to be revised. \n\nOn the other hand, accidental \
complexity is caused by challenges that we think need to be solved in order \
to reduce the inherent complexity. An example of a minor complexity is the \
outdated flight management system still in use.The system was designed to \
solve the complex problem of managing the movement of thousands of aircraft, \
but this solution creates its own problems. Modern flight control systems are \
so complex that upgrading them is difficult, if not impossible.Flight \
management is carried out around the world with more than 30 years of \
technology.  \n\n\[OpenCurlyDoubleQuote]Secondary complexity syndrome\
\[CloseCurlyDoubleQuote] is manifested in many infrastructures (framework) \
and firm \[OpenCurlyDoubleQuote]solutions\[CloseCurlyDoubleQuote] .Real \
benefits come from infrastructures designed to handle specific, limited \
problems; overly complicated infrastructures actually make matters worse.\n\n\
Complex solutions attract developers just as flames attract moths, and often \
with the same result. Solving complex tasks is interesting, and the work of a \
programmer is essentially consisting of solving puzzles. Who hasn't \
experienced the charm of solving an incredibly difficult task? However, in \
large-scale projects, it is very difficult to avoid secondary complexity by \
focusing on work with intrinsic complexity.  \n\nHow do we that? Prefer \
working-code infrastructures to ivory towers.Relate the amount of code \
intended to solve the immediate task to the amount that simply serves the \
user's interaction with the application. Be careful with the solutions \
promoted by the developers: such solutions are not always bad at first, but \
they often have a secondary complexity. Check the compliance of the solution \
with the task.  \n\nThe duty of the architect is to solve problems that lie \
in the plane of intrinsic complexity, without introducing secondary \
complexity."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324906125283175`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c15211c0-63d8-4080-a959-c8f5d2bc6e29"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"Essential complexity is a problem inherent in \
any task. For example, the task of coordinating air traffic at the national \
level is complex in itself. The control system must monitor in real time the \
precise location of each aircraft (including altitude), its speed, direction \
and destination, in order to prevent collisions in the air and on the \
runways. It is also necessary to manage flight schedules promptly to avoid \
congestion at airports in constantly changing conditions \[Dash] when the \
weather changes sharply the entire schedule has to be revised. \\n\\nOn the \
other hand, accidental complexity is caused by challenges that we think need \
to be solved in order to reduce the inherent complexity. An example of a \
minor complexity is the outdated flight management system still in use.The \
system was designed to solve the complex problem of managing the movement of \
thousands of aircraft, but this solution creates its own problems. Modern \
flight control systems are so complex that upgrading them is difficult, if \
not impossible.Flight management is carried out around the world with more \
than 30 years of technology.  \\n\\n\[OpenCurlyDoubleQuote]Secondary \
complexity syndrome\[CloseCurlyDoubleQuote] is manifested in many \
infrastructures (framework) and firm \[OpenCurlyDoubleQuote]solutions\
\[CloseCurlyDoubleQuote] .Real benefits come from infrastructures designed to \
handle specific, limited problems; overly complicated infrastructures \
actually make matters worse.\\n\\nComplex solutions attract developers just \
as flames attract moths, and often with the same result. Solving complex \
tasks is interesting, and the work of a programmer is essentially consisting \
of solving puzzles. Who hasn't experienced the charm of solving an incredibly \
difficult task? However, in large-scale projects, it is very difficult to \
avoid secondary complexity by focusing on work with intrinsic complexity.  \
\\n\\nHow do we that? Prefer working-code infrastructures to ivory \
towers.Relate the amount of code intended to solve the immediate task to the \
amount that simply serves the user's interaction with the application. Be \
careful with the solutions promoted by the developers: such solutions are not \
always bad at first, but they often have a secondary complexity. Check the \
compliance of the solution with the task.  \\n\\nThe duty of the architect is \
to solve problems that lie in the plane of intrinsic complexity, without \
introducing secondary complexity.\"\>"}],
  SequenceForm[
  "newText: ", 
   "Essential complexity is a problem inherent in any task. For example, the \
task of coordinating air traffic at the national level is complex in itself. \
The control system must monitor in real time the precise location of each \
aircraft (including altitude), its speed, direction and destination, in order \
to prevent collisions in the air and on the runways. It is also necessary to \
manage flight schedules promptly to avoid congestion at airports in \
constantly changing conditions \[Dash] when the weather changes sharply the \
entire schedule has to be revised. \n\nOn the other hand, accidental \
complexity is caused by challenges that we think need to be solved in order \
to reduce the inherent complexity. An example of a minor complexity is the \
outdated flight management system still in use.The system was designed to \
solve the complex problem of managing the movement of thousands of aircraft, \
but this solution creates its own problems. Modern flight control systems are \
so complex that upgrading them is difficult, if not impossible.Flight \
management is carried out around the world with more than 30 years of \
technology.  \n\n\[OpenCurlyDoubleQuote]Secondary complexity syndrome\
\[CloseCurlyDoubleQuote] is manifested in many infrastructures (framework) \
and firm \[OpenCurlyDoubleQuote]solutions\[CloseCurlyDoubleQuote] .Real \
benefits come from infrastructures designed to handle specific, limited \
problems; overly complicated infrastructures actually make matters worse.\n\n\
Complex solutions attract developers just as flames attract moths, and often \
with the same result. Solving complex tasks is interesting, and the work of a \
programmer is essentially consisting of solving puzzles. Who hasn't \
experienced the charm of solving an incredibly difficult task? However, in \
large-scale projects, it is very difficult to avoid secondary complexity by \
focusing on work with intrinsic complexity.  \n\nHow do we that? Prefer \
working-code infrastructures to ivory towers.Relate the amount of code \
intended to solve the immediate task to the amount that simply serves the \
user's interaction with the application. Be careful with the solutions \
promoted by the developers: such solutions are not always bad at first, but \
they often have a secondary complexity. Check the compliance of the solution \
with the task.  \n\nThe duty of the architect is to solve problems that lie \
in the plane of intrinsic complexity, without introducing secondary \
complexity."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490612692625*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"115fdcbe-782a-4d9d-8ce0-9b27910a9bfd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Reduce the intrinsic complexity \
and eliminate the incidental complexity'\\ndate = \
2024-08-04T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"modern\\\", \\\"flight\\\", \\\"complexity\\\", \\\"complex\\\", \
\\\"solutions\\\", \\\"infrastructures\\\", \
\\\"task\\\"]\\ncover_image='/images/cover/knoxwelle__2023-10-23T051419.000Z.\
jpg'\\n+++\\nEssential complexity is a problem inherent in any task. For \
example, the task of coordinating air traffic at the national level is \
complex in itself. The control system must monitor in real time the precise \
location of each aircraft (including altitude), its speed, direction and \
destination, in order to prevent collisions in the air and on the runways. It \
is also necessary to manage flight schedules promptly to avoid congestion at \
airports in constantly changing conditions \[Dash] when the weather changes \
sharply the entire schedule has to be revised. \\n\\nOn the other hand, \
accidental complexity is caused by challenges that we think need to be solved \
in order to reduce the inherent complexity. An example of a minor complexity \
is the outdated flight management system still in use.The system was designed \
to solve the complex problem of managing the movement of thousands of \
aircraft, but this solution creates its own problems. Modern flight control \
systems are so complex that upgrading them is difficult, if not \
impossible.Flight management is carried out around the world with more than \
30 years of technology.  \\n\\n\[OpenCurlyDoubleQuote]Secondary complexity \
syndrome\[CloseCurlyDoubleQuote] is manifested in many infrastructures \
(framework) and firm \[OpenCurlyDoubleQuote]solutions\[CloseCurlyDoubleQuote] \
.Real benefits come from infrastructures designed to handle specific, limited \
problems; overly complicated infrastructures actually make matters \
worse.\\n\\nComplex solutions attract developers just as flames attract \
moths, and often with the same result. Solving complex tasks is interesting, \
and the work of a programmer is essentially consisting of solving puzzles. \
Who hasn't experienced the charm of solving an incredibly difficult task? \
However, in large-scale projects, it is very difficult to avoid secondary \
complexity by focusing on work with intrinsic complexity.  \\n\\nHow do we \
that? Prefer working-code infrastructures to ivory towers.Relate the amount \
of code intended to solve the immediate task to the amount that simply serves \
the user's interaction with the application. Be careful with the solutions \
promoted by the developers: such solutions are not always bad at first, but \
they often have a secondary complexity. Check the compliance of the solution \
with the task.  \\n\\nThe duty of the architect is to solve problems that lie \
in the plane of intrinsic complexity, without introducing secondary \
complexity.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Reduce the intrinsic complexity and eliminate the \
incidental complexity'\ndate = 2024-08-04T00:00:00-07:00\ndraft = false\n\
categories = []\ntags = [\"modern\", \"flight\", \"complexity\", \"complex\", \
\"solutions\", \"infrastructures\", \"task\"]\n\
cover_image='/images/cover/knoxwelle__2023-10-23T051419.000Z.jpg'\n+++\n\
Essential complexity is a problem inherent in any task. For example, the task \
of coordinating air traffic at the national level is complex in itself. The \
control system must monitor in real time the precise location of each \
aircraft (including altitude), its speed, direction and destination, in order \
to prevent collisions in the air and on the runways. It is also necessary to \
manage flight schedules promptly to avoid congestion at airports in \
constantly changing conditions \[Dash] when the weather changes sharply the \
entire schedule has to be revised. \n\nOn the other hand, accidental \
complexity is caused by challenges that we think need to be solved in order \
to reduce the inherent complexity. An example of a minor complexity is the \
outdated flight management system still in use.The system was designed to \
solve the complex problem of managing the movement of thousands of aircraft, \
but this solution creates its own problems. Modern flight control systems are \
so complex that upgrading them is difficult, if not impossible.Flight \
management is carried out around the world with more than 30 years of \
technology.  \n\n\[OpenCurlyDoubleQuote]Secondary complexity syndrome\
\[CloseCurlyDoubleQuote] is manifested in many infrastructures (framework) \
and firm \[OpenCurlyDoubleQuote]solutions\[CloseCurlyDoubleQuote] .Real \
benefits come from infrastructures designed to handle specific, limited \
problems; overly complicated infrastructures actually make matters worse.\n\n\
Complex solutions attract developers just as flames attract moths, and often \
with the same result. Solving complex tasks is interesting, and the work of a \
programmer is essentially consisting of solving puzzles. Who hasn't \
experienced the charm of solving an incredibly difficult task? However, in \
large-scale projects, it is very difficult to avoid secondary complexity by \
focusing on work with intrinsic complexity.  \n\nHow do we that? Prefer \
working-code infrastructures to ivory towers.Relate the amount of code \
intended to solve the immediate task to the amount that simply serves the \
user's interaction with the application. Be careful with the solutions \
promoted by the developers: such solutions are not always bad at first, but \
they often have a secondary complexity. Check the compliance of the solution \
with the task.  \n\nThe duty of the architect is to solve problems that lie \
in the plane of intrinsic complexity, without introducing secondary \
complexity."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324906127109814`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"519dc5d2-1134-4db8-b36c-e95b308af6c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "23", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Screening.md\"\>"}],
  SequenceForm[
  23, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Screening.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324906127261405`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"388d96f2-0fe3-45d0-8862-ae33c8e00bc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about Screening in \
enterprise companies, and how the recruitment process should be \
constructed.\\n\\n## Screening\\n\\nIt all starts with it, and tech-screening \
becomes the norm. Recruiter directly on the first call asks cavernous \
questions and checks with sparkling. For example:\\n\\n- how to stop the \
container?\\n- unchanged data typesx in python?\\n- What's the PID of the \
Linux kernel?\\n- how do you decipher CAP and PACELC?\\n- ...\\n \\nSome of \
them go even further and create an entire platform with small pieces of code \
that can be run. 20 questions in 20 minutes. \\\"How do I send a message to \
the generator?\\\" or \\\"What does this code do?\\\" Well, he knows, I't \
just miss that code on a review, because it's wild. Well, yes, I forgot that \
sorted's second argument is only named, so we get a minus. And the system \
doesn't care what Google does in 25 seconds, I checked.\\n\\nWill you have \
such a screening or not? I don't know, but be prepared. One such conversation \
caught me on the Skytrain, it was a little weird. But it seems to me that \
even recruiters are tired of the outcasts, who do not know anything, but send \
resumes to all available places.\\n\\nBut at the same time the magic of the \
calendar was mastered by ~20% of them. They are somehow convinced that by the \
phrase \\\"I made a call on Friday at 1:30 pm, here's the link...\\\" the \
communication is over. No, damn it! Calendar! Because I:\\n\\n- I'll \
forget\\n- I'll lose links\\n- I'll take a timeslot\\n- I'll count for an \
hour and a half instead of an hour.\\n- I don't get to know the interlocutor \
off-the-shelf.\\n- and generally 1:30 pm it was UTC (not PST)\\n\\nThere \
should be a mandatory test when setting up a recruiter for work. And in one \
big company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\\\"I put on Monday?\\\" - \\\"Oh, free all day\\\" - and \
silence...). And if you ask to transfer because of illness, you will be \
forgotten at all. With the calendar of facaps will be less.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about Screening in enterprise companies, and \
how the recruitment process should be constructed.\n\n## Screening\n\nIt all \
starts with it, and tech-screening becomes the norm. Recruiter directly on \
the first call asks cavernous questions and checks with sparkling. For \
example:\n\n- how to stop the container?\n- unchanged data typesx in python?\n\
- What's the PID of the Linux kernel?\n- how do you decipher CAP and PACELC?\n\
- ...\n \nSome of them go even further and create an entire platform with \
small pieces of code that can be run. 20 questions in 20 minutes. \"How do I \
send a message to the generator?\" or \"What does this code do?\" Well, he \
knows, I't just miss that code on a review, because it's wild. Well, yes, I \
forgot that sorted's second argument is only named, so we get a minus. And \
the system doesn't care what Google does in 25 seconds, I checked.\n\nWill \
you have such a screening or not? I don't know, but be prepared. One such \
conversation caught me on the Skytrain, it was a little weird. But it seems \
to me that even recruiters are tired of the outcasts, who do not know \
anything, but send resumes to all available places.\n\nBut at the same time \
the magic of the calendar was mastered by ~20% of them. They are somehow \
convinced that by the phrase \"I made a call on Friday at 1:30 pm, here's the \
link...\" the communication is over. No, damn it! Calendar! Because I:\n\n- \
I'll forget\n- I'll lose links\n- I'll take a timeslot\n- I'll count for an \
hour and a half instead of an hour.\n- I don't get to know the interlocutor \
off-the-shelf.\n- and generally 1:30 pm it was UTC (not PST)\n\nThere should \
be a mandatory test when setting up a recruiter for work. And in one big \
company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\"I put on Monday?\" - \"Oh, free all day\" - and silence...). \
And if you ask to transfer because of illness, you will be forgotten at all. \
With the calendar of facaps will be less."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324906218356347`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"01daa410-eecc-436e-958b-86a0c8c3d3ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about Screening in \
enterprise companies, and how the recruitment process should be \
constructed.\\n\\n## Screening\\n\\nIt all starts with it, and tech-screening \
becomes the norm. Recruiter directly on the first call asks cavernous \
questions and checks with sparkling. For example:\\n\\n- how to stop the \
container?\\n- unchanged data typesx in python?\\n- What's the PID of the \
Linux kernel?\\n- how do you decipher CAP and PACELC?\\n- ...\\n Some of them \
go even further and create an entire platform with small pieces of code that \
can be run. 20 questions in 20 minutes. \\\"How do I send a message to the \
generator?\\\" or \\\"What does this code do?\\\" Well, he knows, I't just \
miss that code on a review, because it's wild. Well, yes, I forgot that \
sorted's second argument is only named, so we get a minus. And the system \
doesn't care what Google does in 25 seconds, I checked.\\n\\nWill you have \
such a screening or not? I don't know, but be prepared. One such conversation \
caught me on the Skytrain, it was a little weird. But it seems to me that \
even recruiters are tired of the outcasts, who do not know anything, but send \
resumes to all available places.\\n\\nBut at the same time the magic of the \
calendar was mastered by ~20% of them. They are somehow convinced that by the \
phrase \\\"I made a call on Friday at 1:30 pm, here's the link...\\\" the \
communication is over. No, damn it! Calendar! Because I:\\n\\n- I'll \
forget\\n- I'll lose links\\n- I'll take a timeslot\\n- I'll count for an \
hour and a half instead of an hour.\\n- I don't get to know the interlocutor \
off-the-shelf.\\n- and generally 1:30 pm it was UTC (not PST)\\n\\nThere \
should be a mandatory test when setting up a recruiter for work. And in one \
big company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\\\"I put on Monday?\\\" - \\\"Oh, free all day\\\" - and \
silence...). And if you ask to transfer because of illness, you will be \
forgotten at all. With the calendar of facaps will be less.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about Screening in enterprise companies, and \
how the recruitment process should be constructed.\n\n## Screening\n\nIt all \
starts with it, and tech-screening becomes the norm. Recruiter directly on \
the first call asks cavernous questions and checks with sparkling. For \
example:\n\n- how to stop the container?\n- unchanged data typesx in python?\n\
- What's the PID of the Linux kernel?\n- how do you decipher CAP and PACELC?\n\
- ...\n Some of them go even further and create an entire platform with small \
pieces of code that can be run. 20 questions in 20 minutes. \"How do I send a \
message to the generator?\" or \"What does this code do?\" Well, he knows, \
I't just miss that code on a review, because it's wild. Well, yes, I forgot \
that sorted's second argument is only named, so we get a minus. And the \
system doesn't care what Google does in 25 seconds, I checked.\n\nWill you \
have such a screening or not? I don't know, but be prepared. One such \
conversation caught me on the Skytrain, it was a little weird. But it seems \
to me that even recruiters are tired of the outcasts, who do not know \
anything, but send resumes to all available places.\n\nBut at the same time \
the magic of the calendar was mastered by ~20% of them. They are somehow \
convinced that by the phrase \"I made a call on Friday at 1:30 pm, here's the \
link...\" the communication is over. No, damn it! Calendar! Because I:\n\n- \
I'll forget\n- I'll lose links\n- I'll take a timeslot\n- I'll count for an \
hour and a half instead of an hour.\n- I don't get to know the interlocutor \
off-the-shelf.\n- and generally 1:30 pm it was UTC (not PST)\n\nThere should \
be a mandatory test when setting up a recruiter for work. And in one big \
company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\"I put on Monday?\" - \"Oh, free all day\" - and silence...). \
And if you ask to transfer because of illness, you will be forgotten at all. \
With the calendar of facaps will be less."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324907086183996`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b9710736-a5dc-4215-896a-624f77b98b0f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about Screening in \
enterprise companies, and how the recruitment process should be \
constructed.\\n\\n## Screening\\n\\nIt all starts with it, and tech-screening \
becomes the norm. Recruiter directly on the first call asks cavernous \
questions and checks with sparkling. For example:\\n\\n- how to stop the \
container?\\n- unchanged data typesx in python?\\n- What's the PID of the \
Linux kernel?\\n- how do you decipher CAP and PACELC?\\n- ...\\n Some of them \
go even further and create an entire platform with small pieces of code that \
can be run. 20 questions in 20 minutes. \\\"How do I send a message to the \
generator?\\\" or \\\"What does this code do?\\\" Well, he knows, I't just \
miss that code on a review, because it's wild. Well, yes, I forgot that \
sorted's second argument is only named, so we get a minus. And the system \
doesn't care what Google does in 25 seconds, I checked.\\n\\nWill you have \
such a screening or not? I don't know, but be prepared. One such conversation \
caught me on the Skytrain, it was a little weird. But it seems to me that \
even recruiters are tired of the outcasts, who do not know anything, but send \
resumes to all available places.\\n\\nBut at the same time the magic of the \
calendar was mastered by ~20% of them. They are somehow convinced that by the \
phrase \\\"I made a call on Friday at 1:30 pm, here's the link...\\\" the \
communication is over. No, damn it! Calendar! Because I:\\n\\n- I'll \
forget\\n- I'll lose links\\n- I'll take a timeslot\\n- I'll count for an \
hour and a half instead of an hour.\\n- I don't get to know the interlocutor \
off-the-shelf.\\n- and generally 1:30 pm it was UTC (not PST)\\n\\nThere \
should be a mandatory test when setting up a recruiter for work. And in one \
big company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\\\"I put on Monday?\\\" - \\\"Oh, free all day\\\" - and \
silence...). And if you ask to transfer because of illness, you will be \
forgotten at all. With the calendar of facaps will be less.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about Screening in enterprise companies, and \
how the recruitment process should be constructed.\n\n## Screening\n\nIt all \
starts with it, and tech-screening becomes the norm. Recruiter directly on \
the first call asks cavernous questions and checks with sparkling. For \
example:\n\n- how to stop the container?\n- unchanged data typesx in python?\n\
- What's the PID of the Linux kernel?\n- how do you decipher CAP and PACELC?\n\
- ...\n Some of them go even further and create an entire platform with small \
pieces of code that can be run. 20 questions in 20 minutes. \"How do I send a \
message to the generator?\" or \"What does this code do?\" Well, he knows, \
I't just miss that code on a review, because it's wild. Well, yes, I forgot \
that sorted's second argument is only named, so we get a minus. And the \
system doesn't care what Google does in 25 seconds, I checked.\n\nWill you \
have such a screening or not? I don't know, but be prepared. One such \
conversation caught me on the Skytrain, it was a little weird. But it seems \
to me that even recruiters are tired of the outcasts, who do not know \
anything, but send resumes to all available places.\n\nBut at the same time \
the magic of the calendar was mastered by ~20% of them. They are somehow \
convinced that by the phrase \"I made a call on Friday at 1:30 pm, here's the \
link...\" the communication is over. No, damn it! Calendar! Because I:\n\n- \
I'll forget\n- I'll lose links\n- I'll take a timeslot\n- I'll count for an \
hour and a half instead of an hour.\n- I don't get to know the interlocutor \
off-the-shelf.\n- and generally 1:30 pm it was UTC (not PST)\n\nThere should \
be a mandatory test when setting up a recruiter for work. And in one big \
company with circles came to the fact that in 2 weeks we agreed on the \
interview 3 times, but in the end the interviewer did not come, then the time \
did not set (\"I put on Monday?\" - \"Oh, free all day\" - and silence...). \
And if you ask to transfer because of illness, you will be forgotten at all. \
With the calendar of facaps will be less."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324907087725863`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"56e31300-51a9-47d5-b472-750d92392eaf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Screening'\\ndate = \
2024-06-29T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"skytrain\\\", \\\"utc\\\", \\\"python\\\"]\\ntags = [\\\"recruiter\\\", \
\\\"google\\\", \\\"skytrain\\\", \\\"friday\\\", \\\"utc\\\", \
\\\"monday\\\", \\\"calendar\\\", \\\"code\\\", \\\"screening\\\", \\\"time\\\
\", \\\"hour\\\"]\\ncover_image='/images/cover/knoxwelle__2021-02-19T035136.\
000Z.jpg'\\n+++\\nI've been going to interviews again, and I'd like to share \
some observations. This time we talk about Screening in enterprise companies, \
and how the recruitment process should be constructed.\\n\\n## \
Screening\\n\\nIt all starts with it, and tech-screening becomes the norm. \
Recruiter directly on the first call asks cavernous questions and checks with \
sparkling. For example:\\n\\n- how to stop the container?\\n- unchanged data \
typesx in python?\\n- What's the PID of the Linux kernel?\\n- how do you \
decipher CAP and PACELC?\\n- ...\\n Some of them go even further and create \
an entire platform with small pieces of code that can be run. 20 questions in \
20 minutes. \\\"How do I send a message to the generator?\\\" or \\\"What \
does this code do?\\\" Well, he knows, I't just miss that code on a review, \
because it's wild. Well, yes, I forgot that sorted's second argument is only \
named, so we get a minus. And the system doesn't care what Google does in 25 \
seconds, I checked.\\n\\nWill you have such a screening or not? I don't know, \
but be prepared. One such conversation caught me on the Skytrain, it was a \
little weird. But it seems to me that even recruiters are tired of the \
outcasts, who do not know anything, but send resumes to all available places.\
\\n\\nBut at the same time the magic of the calendar was mastered by ~20% of \
them. They are somehow convinced that by the phrase \\\"I made a call on \
Friday at 1:30 pm, here's the link...\\\" the communication is over. No, damn \
it! Calendar! Because I:\\n\\n- I'll forget\\n- I'll lose links\\n- I'll take \
a timeslot\\n- I'll count for an hour and a half instead of an hour.\\n- I \
don't get to know the interlocutor off-the-shelf.\\n- and generally 1:30 pm \
it was UTC (not PST)\\n\\nThere should be a mandatory test when setting up a \
recruiter for work. And in one big company with circles came to the fact that \
in 2 weeks we agreed on the interview 3 times, but in the end the interviewer \
did not come, then the time did not set (\\\"I put on Monday?\\\" - \\\"Oh, \
free all day\\\" - and silence...). And if you ask to transfer because of \
illness, you will be forgotten at all. With the calendar of facaps will be \
less.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Screening'\ndate = 2024-06-29T00:00:00-07:00\ndraft = false\
\ncategories = [\"recruiting\", \"skytrain\", \"utc\", \"python\"]\ntags = \
[\"recruiter\", \"google\", \"skytrain\", \"friday\", \"utc\", \"monday\", \
\"calendar\", \"code\", \"screening\", \"time\", \"hour\"]\n\
cover_image='/images/cover/knoxwelle__2021-02-19T035136.000Z.jpg'\n+++\nI've \
been going to interviews again, and I'd like to share some observations. This \
time we talk about Screening in enterprise companies, and how the recruitment \
process should be constructed.\n\n## Screening\n\nIt all starts with it, and \
tech-screening becomes the norm. Recruiter directly on the first call asks \
cavernous questions and checks with sparkling. For example:\n\n- how to stop \
the container?\n- unchanged data typesx in python?\n- What's the PID of the \
Linux kernel?\n- how do you decipher CAP and PACELC?\n- ...\n Some of them go \
even further and create an entire platform with small pieces of code that can \
be run. 20 questions in 20 minutes. \"How do I send a message to the \
generator?\" or \"What does this code do?\" Well, he knows, I't just miss \
that code on a review, because it's wild. Well, yes, I forgot that sorted's \
second argument is only named, so we get a minus. And the system doesn't care \
what Google does in 25 seconds, I checked.\n\nWill you have such a screening \
or not? I don't know, but be prepared. One such conversation caught me on the \
Skytrain, it was a little weird. But it seems to me that even recruiters are \
tired of the outcasts, who do not know anything, but send resumes to all \
available places.\n\nBut at the same time the magic of the calendar was \
mastered by ~20% of them. They are somehow convinced that by the phrase \"I \
made a call on Friday at 1:30 pm, here's the link...\" the communication is \
over. No, damn it! Calendar! Because I:\n\n- I'll forget\n- I'll lose links\n\
- I'll take a timeslot\n- I'll count for an hour and a half instead of an \
hour.\n- I don't get to know the interlocutor off-the-shelf.\n- and generally \
1:30 pm it was UTC (not PST)\n\nThere should be a mandatory test when setting \
up a recruiter for work. And in one big company with circles came to the fact \
that in 2 weeks we agreed on the interview 3 times, but in the end the \
interviewer did not come, then the time did not set (\"I put on Monday?\" - \
\"Oh, free all day\" - and silence...). And if you ask to transfer because of \
illness, you will be forgotten at all. With the calendar of facaps will be \
less."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490708793113*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3d39071c-dc0a-4fd6-a9eb-0c0e4c21676e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "24", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Simplicity is better than versatility.md\"\>"}],
  SequenceForm[
  24, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
Simplicity is better than versatility.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324907088091116`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c58fbbe7-0786-4bde-8296-2bf9bde7056f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"A typical problem with many frameworks, class \
libraries, basic services and other infrastructure code is that they are \
designed for universal use, without attachment to specific applications. As a \
result, we get a staggering set of features and settings that are often not \
used at all or used for the wrong purpose, or even simply turned out to be \
useless.Most developers work on specific systems, and the pursuit of \
unlimited versatility rarely serves them well.The best way to universality \
lies through an in-depth understanding of known concrete examples and \
analysis of their essence in order to find a fundamental common solution: \
simplicity as a result of practical experience, rather than universality \
based on conjecture.\\n\\nThe priority of simplicity over versatility helps \
to make a choice between two architectural alternatives, equal in other \
respects.When two solutions are possible, prefer a simpler and more \
needs-oriented one rather than a more sophisticated and versatile one. Of \
course, it is quite possible (and not so rarely) that a simpler solution in \
practice will be more versatile.But, even if that doesn\[CloseCurlyQuote]t \
happen, it\[CloseCurlyQuote]s easier to change a simple solution when you \
have a good idea of what you need, than to adapt a \
\[OpenCurlyDoubleQuote]universal\[CloseCurlyDoubleQuote] solution, which has \
proved to be not universal enough.\\n\\nDespite the architect's good \
intentions, many solutions designed for universal application end up \
inadequate for anything specific.Software components must first be designed \
for a specific task, and they must cope well with that task.Effective \
universality is born of understanding, and understanding leads to \
simplification.\\n\\nGeneralization sometimes allows to bring the problem to \
a more fundamental look; the created solution embodies the patterns of \
several well-known examples \[Dash] clear, compact and well-founded.However, \
excessive generalization itself turns into a challenge that leads in the \
opposite direction and increases complexity instead of reducing it.The desire \
for abstract generalization often leads to solutions that are not tied to the \
realities of actual development.Such generalizations are based on assumptions \
that later turn out to be false, suggest options that later become unwanted, \
and create a ballast that is then difficult or impossible to remove.In the \
end, this only increases the secondary complexity that future developers and \
architects will face.\\n\\nMany architects value universality, but this \
attitude should not be unconditional.As a rule, people are unwilling to pay \
for universal fattening (or do not need it): they are usually faced with a \
very specific challenge, and they value a specific solution to that \
challenge.Versatility and flexibility can appear in the creation of concrete \
solutions, but if at the same time we get off the anchor too quickly and \
forget about the concrete, then we begin to drift into a sea of unlimited \
possibilities \[Dash] a sea full of cunning settings, bulky (not just \
extensive) lists of parameters, infinite interfaces and irregular \
abstractions.In the pursuit of abstract flexibility, often (accidentally or \
deliberately) the valuable properties of alternative, simpler solutions are \
lost.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "A typical problem with many frameworks, class libraries, basic services \
and other infrastructure code is that they are designed for universal use, \
without attachment to specific applications. As a result, we get a staggering \
set of features and settings that are often not used at all or used for the \
wrong purpose, or even simply turned out to be useless.Most developers work \
on specific systems, and the pursuit of unlimited versatility rarely serves \
them well.The best way to universality lies through an in-depth understanding \
of known concrete examples and analysis of their essence in order to find a \
fundamental common solution: simplicity as a result of practical experience, \
rather than universality based on conjecture.\n\nThe priority of simplicity \
over versatility helps to make a choice between two architectural \
alternatives, equal in other respects.When two solutions are possible, prefer \
a simpler and more needs-oriented one rather than a more sophisticated and \
versatile one. Of course, it is quite possible (and not so rarely) that a \
simpler solution in practice will be more versatile.But, even if that doesn\
\[CloseCurlyQuote]t happen, it\[CloseCurlyQuote]s easier to change a simple \
solution when you have a good idea of what you need, than to adapt a \
\[OpenCurlyDoubleQuote]universal\[CloseCurlyDoubleQuote] solution, which has \
proved to be not universal enough.\n\nDespite the architect's good \
intentions, many solutions designed for universal application end up \
inadequate for anything specific.Software components must first be designed \
for a specific task, and they must cope well with that task.Effective \
universality is born of understanding, and understanding leads to \
simplification.\n\nGeneralization sometimes allows to bring the problem to a \
more fundamental look; the created solution embodies the patterns of several \
well-known examples \[Dash] clear, compact and well-founded.However, \
excessive generalization itself turns into a challenge that leads in the \
opposite direction and increases complexity instead of reducing it.The desire \
for abstract generalization often leads to solutions that are not tied to the \
realities of actual development.Such generalizations are based on assumptions \
that later turn out to be false, suggest options that later become unwanted, \
and create a ballast that is then difficult or impossible to remove.In the \
end, this only increases the secondary complexity that future developers and \
architects will face.\n\nMany architects value universality, but this \
attitude should not be unconditional.As a rule, people are unwilling to pay \
for universal fattening (or do not need it): they are usually faced with a \
very specific challenge, and they value a specific solution to that \
challenge.Versatility and flexibility can appear in the creation of concrete \
solutions, but if at the same time we get off the anchor too quickly and \
forget about the concrete, then we begin to drift into a sea of unlimited \
possibilities \[Dash] a sea full of cunning settings, bulky (not just \
extensive) lists of parameters, infinite interfaces and irregular \
abstractions.In the pursuit of abstract flexibility, often (accidentally or \
deliberately) the valuable properties of alternative, simpler solutions are \
lost."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490718803793*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"89d695e0-87c4-48b0-8750-67a0bdf18aba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"A typical problem with many frameworks, class \
libraries, basic services, and other infrastructure code is that they are \
designed for universal use without attachment to specific applications. As a \
result, we get a staggering set of features and settings that are often not \
used at all, used for the wrong purpose, or even simply turned out to be \
useless. Most developers work on specific systems, and the pursuit of \
unlimited versatility rarely serves them well. The best way to achieve \
universality lies through an in-depth understanding of known concrete \
examples and an analysis of their essence in order to find a fundamental \
common solution: simplicity as a result of practical experience rather than \
universality based on conjecture.\\n\\nThe priority of simplicity over \
versatility helps to make a choice between two architectural alternatives \
that are equal in other respects. When two solutions are possible, prefer a \
simpler and more needs-oriented one rather than a more sophisticated and \
versatile one. Of course, it is quite possible (and not so rarely) that a \
simpler solution in practice will be more versatile. But, even if that doesn\
\[CloseCurlyQuote]t happen, it\[CloseCurlyQuote]s easier to change a simple \
solution when you have a good idea of what you need than to adapt a \
\[OpenCurlyDoubleQuote]universal\[CloseCurlyDoubleQuote] solution, which has \
proved to be not universal enough.\\n\\nDespite the architect's good \
intentions, many solutions designed for universal application end up \
inadequate for anything specific.Software components must first be designed \
for a specific task, and they must cope well with that task.Effective \
universality is born of understanding, and understanding leads to \
simplification.\\n\\nGeneralization sometimes allows to bring the problem to \
a more fundamental look; the created solution embodies the patterns of \
several well-known examples: clear, compact, and well-founded. However, \
excessive generalization itself turns into a challenge that leads in the \
opposite direction and increases complexity instead of reducing it.The desire \
for abstract generalization often leads to solutions that are not tied to the \
realities of actual development.Such generalizations are based on assumptions \
that later turn out to be false, suggest options that later become unwanted, \
and create a ballast that is then difficult or impossible to remove. In the \
end, this only increases the secondary complexity that future developers and \
architects will face.\\n\\nMany architects value universality, but this \
attitude should not be unconditional. As a rule, people are unwilling to pay \
for universal fattening (or do not need it); they are usually faced with a \
very specific challenge, and they value a specific solution to that \
challenge. Versatility and flexibility can appear in the creation of concrete \
solutions, but if at the same time we get off the anchor too quickly and \
forget about the concrete, then we begin to drift into a sea of unlimited \
possibilities\[LongDash]a sea full of cunning settings, bulky (not just \
extensive) lists of parameters, infinite interfaces, and irregular \
abstractions. In the pursuit of abstract flexibility, often (accidentally or \
deliberately) the valuable properties of alternative, simpler solutions are \
lost.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "A typical problem with many frameworks, class libraries, basic services, \
and other infrastructure code is that they are designed for universal use \
without attachment to specific applications. As a result, we get a staggering \
set of features and settings that are often not used at all, used for the \
wrong purpose, or even simply turned out to be useless. Most developers work \
on specific systems, and the pursuit of unlimited versatility rarely serves \
them well. The best way to achieve universality lies through an in-depth \
understanding of known concrete examples and an analysis of their essence in \
order to find a fundamental common solution: simplicity as a result of \
practical experience rather than universality based on conjecture.\n\nThe \
priority of simplicity over versatility helps to make a choice between two \
architectural alternatives that are equal in other respects. When two \
solutions are possible, prefer a simpler and more needs-oriented one rather \
than a more sophisticated and versatile one. Of course, it is quite possible \
(and not so rarely) that a simpler solution in practice will be more \
versatile. But, even if that doesn\[CloseCurlyQuote]t happen, it\
\[CloseCurlyQuote]s easier to change a simple solution when you have a good \
idea of what you need than to adapt a \[OpenCurlyDoubleQuote]universal\
\[CloseCurlyDoubleQuote] solution, which has proved to be not universal \
enough.\n\nDespite the architect's good intentions, many solutions designed \
for universal application end up inadequate for anything specific.Software \
components must first be designed for a specific task, and they must cope \
well with that task.Effective universality is born of understanding, and \
understanding leads to simplification.\n\nGeneralization sometimes allows to \
bring the problem to a more fundamental look; the created solution embodies \
the patterns of several well-known examples: clear, compact, and \
well-founded. However, excessive generalization itself turns into a challenge \
that leads in the opposite direction and increases complexity instead of \
reducing it.The desire for abstract generalization often leads to solutions \
that are not tied to the realities of actual development.Such generalizations \
are based on assumptions that later turn out to be false, suggest options \
that later become unwanted, and create a ballast that is then difficult or \
impossible to remove. In the end, this only increases the secondary \
complexity that future developers and architects will face.\n\nMany \
architects value universality, but this attitude should not be unconditional. \
As a rule, people are unwilling to pay for universal fattening (or do not \
need it); they are usually faced with a very specific challenge, and they \
value a specific solution to that challenge. Versatility and flexibility can \
appear in the creation of concrete solutions, but if at the same time we get \
off the anchor too quickly and forget about the concrete, then we begin to \
drift into a sea of unlimited possibilities\[LongDash]a sea full of cunning \
settings, bulky (not just extensive) lists of parameters, infinite \
interfaces, and irregular abstractions. In the pursuit of abstract \
flexibility, often (accidentally or deliberately) the valuable properties of \
alternative, simpler solutions are lost."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490840795163*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"2ef2eb50-88f1-4a31-b40c-a17ec08bb7a7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"A typical problem with many frameworks, class \
libraries, basic services, and other infrastructure code is that they are \
designed for universal use without attachment to specific applications. As a \
result, we get a staggering set of features and settings that are often not \
used at all, used for the wrong purpose, or even simply turned out to be \
useless. Most developers work on specific systems, and the pursuit of \
unlimited versatility rarely serves them well. The best way to achieve \
universality lies through an in-depth understanding of known concrete \
examples and an analysis of their essence in order to find a fundamental \
common solution: simplicity as a result of practical experience rather than \
universality based on conjecture.\\n\\nThe priority of simplicity over \
versatility helps to make a choice between two architectural alternatives \
that are equal in other respects. When two solutions are possible, prefer a \
simpler and more needs-oriented one rather than a more sophisticated and \
versatile one. Of course, it is quite possible (and not so rarely) that a \
simpler solution in practice will be more versatile. But, even if that doesn\
\[CloseCurlyQuote]t happen, it\[CloseCurlyQuote]s easier to change a simple \
solution when you have a good idea of what you need than to adapt a \
\[OpenCurlyDoubleQuote]universal\[CloseCurlyDoubleQuote] solution, which has \
proved to be not universal enough.\\n\\nDespite the architect's good \
intentions, many solutions designed for universal application end up \
inadequate for anything specific.Software components must first be designed \
for a specific task, and they must cope well with that task.Effective \
universality is born of understanding, and understanding leads to \
simplification.\\n\\nGeneralization sometimes allows to bring the problem to \
a more fundamental look; the created solution embodies the patterns of \
several well-known examples: clear, compact, and well-founded. However, \
excessive generalization itself turns into a challenge that leads in the \
opposite direction and increases complexity instead of reducing it.The desire \
for abstract generalization often leads to solutions that are not tied to the \
realities of actual development.Such generalizations are based on assumptions \
that later turn out to be false, suggest options that later become unwanted, \
and create a ballast that is then difficult or impossible to remove. In the \
end, this only increases the secondary complexity that future developers and \
architects will face.\\n\\nMany architects value universality, but this \
attitude should not be unconditional. As a rule, people are unwilling to pay \
for universal fattening (or do not need it); they are usually faced with a \
very specific challenge, and they value a specific solution to that \
challenge. Versatility and flexibility can appear in the creation of concrete \
solutions, but if at the same time we get off the anchor too quickly and \
forget about the concrete, then we begin to drift into a sea of unlimited \
possibilities\[LongDash]a sea full of cunning settings, bulky (not just \
extensive) lists of parameters, infinite interfaces, and irregular \
abstractions. In the pursuit of abstract flexibility, often (accidentally or \
deliberately) the valuable properties of alternative, simpler solutions are \
lost.\"\>"}],
  SequenceForm[
  "newText: ", 
   "A typical problem with many frameworks, class libraries, basic services, \
and other infrastructure code is that they are designed for universal use \
without attachment to specific applications. As a result, we get a staggering \
set of features and settings that are often not used at all, used for the \
wrong purpose, or even simply turned out to be useless. Most developers work \
on specific systems, and the pursuit of unlimited versatility rarely serves \
them well. The best way to achieve universality lies through an in-depth \
understanding of known concrete examples and an analysis of their essence in \
order to find a fundamental common solution: simplicity as a result of \
practical experience rather than universality based on conjecture.\n\nThe \
priority of simplicity over versatility helps to make a choice between two \
architectural alternatives that are equal in other respects. When two \
solutions are possible, prefer a simpler and more needs-oriented one rather \
than a more sophisticated and versatile one. Of course, it is quite possible \
(and not so rarely) that a simpler solution in practice will be more \
versatile. But, even if that doesn\[CloseCurlyQuote]t happen, it\
\[CloseCurlyQuote]s easier to change a simple solution when you have a good \
idea of what you need than to adapt a \[OpenCurlyDoubleQuote]universal\
\[CloseCurlyDoubleQuote] solution, which has proved to be not universal \
enough.\n\nDespite the architect's good intentions, many solutions designed \
for universal application end up inadequate for anything specific.Software \
components must first be designed for a specific task, and they must cope \
well with that task.Effective universality is born of understanding, and \
understanding leads to simplification.\n\nGeneralization sometimes allows to \
bring the problem to a more fundamental look; the created solution embodies \
the patterns of several well-known examples: clear, compact, and \
well-founded. However, excessive generalization itself turns into a challenge \
that leads in the opposite direction and increases complexity instead of \
reducing it.The desire for abstract generalization often leads to solutions \
that are not tied to the realities of actual development.Such generalizations \
are based on assumptions that later turn out to be false, suggest options \
that later become unwanted, and create a ballast that is then difficult or \
impossible to remove. In the end, this only increases the secondary \
complexity that future developers and architects will face.\n\nMany \
architects value universality, but this attitude should not be unconditional. \
As a rule, people are unwilling to pay for universal fattening (or do not \
need it); they are usually faced with a very specific challenge, and they \
value a specific solution to that challenge. Versatility and flexibility can \
appear in the creation of concrete solutions, but if at the same time we get \
off the anchor too quickly and forget about the concrete, then we begin to \
drift into a sea of unlimited possibilities\[LongDash]a sea full of cunning \
settings, bulky (not just extensive) lists of parameters, infinite \
interfaces, and irregular abstractions. In the pursuit of abstract \
flexibility, often (accidentally or deliberately) the valuable properties of \
alternative, simpler solutions are lost."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324908409377813`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"0fe24690-cb2d-4dab-a7cc-490a760c036c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Simplicity is better than \
versatility'\\ndate = 2024-05-20T00:00:00-07:00\\ndraft = false\\ncategories \
= []\\ntags = [\\\"software\\\", \\\"solution\\\", \\\"solutions\\\", \
\\\"universality\\\", \\\"generalization\\\", \
\\\"leads\\\"]\\ncover_image='/images/cover/knoxwelle__2021-04-11T052322.000Z.\
jpg'\\n+++\\nA typical problem with many frameworks, class libraries, basic \
services, and other infrastructure code is that they are designed for \
universal use without attachment to specific applications. As a result, we \
get a staggering set of features and settings that are often not used at all, \
used for the wrong purpose, or even simply turned out to be useless. Most \
developers work on specific systems, and the pursuit of unlimited versatility \
rarely serves them well. The best way to achieve universality lies through an \
in-depth understanding of known concrete examples and an analysis of their \
essence in order to find a fundamental common solution: simplicity as a \
result of practical experience rather than universality based on \
conjecture.\\n\\nThe priority of simplicity over versatility helps to make a \
choice between two architectural alternatives that are equal in other \
respects. When two solutions are possible, prefer a simpler and more \
needs-oriented one rather than a more sophisticated and versatile one. Of \
course, it is quite possible (and not so rarely) that a simpler solution in \
practice will be more versatile. But, even if that doesn\[CloseCurlyQuote]t \
happen, it\[CloseCurlyQuote]s easier to change a simple solution when you \
have a good idea of what you need than to adapt a \
\[OpenCurlyDoubleQuote]universal\[CloseCurlyDoubleQuote] solution, which has \
proved to be not universal enough.\\n\\nDespite the architect's good \
intentions, many solutions designed for universal application end up \
inadequate for anything specific.Software components must first be designed \
for a specific task, and they must cope well with that task.Effective \
universality is born of understanding, and understanding leads to \
simplification.\\n\\nGeneralization sometimes allows to bring the problem to \
a more fundamental look; the created solution embodies the patterns of \
several well-known examples: clear, compact, and well-founded. However, \
excessive generalization itself turns into a challenge that leads in the \
opposite direction and increases complexity instead of reducing it.The desire \
for abstract generalization often leads to solutions that are not tied to the \
realities of actual development.Such generalizations are based on assumptions \
that later turn out to be false, suggest options that later become unwanted, \
and create a ballast that is then difficult or impossible to remove. In the \
end, this only increases the secondary complexity that future developers and \
architects will face.\\n\\nMany architects value universality, but this \
attitude should not be unconditional. As a rule, people are unwilling to pay \
for universal fattening (or do not need it); they are usually faced with a \
very specific challenge, and they value a specific solution to that \
challenge. Versatility and flexibility can appear in the creation of concrete \
solutions, but if at the same time we get off the anchor too quickly and \
forget about the concrete, then we begin to drift into a sea of unlimited \
possibilities\[LongDash]a sea full of cunning settings, bulky (not just \
extensive) lists of parameters, infinite interfaces, and irregular \
abstractions. In the pursuit of abstract flexibility, often (accidentally or \
deliberately) the valuable properties of alternative, simpler solutions are \
lost.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Simplicity is better than versatility'\ndate = \
2024-05-20T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"software\
\", \"solution\", \"solutions\", \"universality\", \"generalization\", \
\"leads\"]\ncover_image='/images/cover/knoxwelle__2021-04-11T052322.000Z.jpg'\
\n+++\nA typical problem with many frameworks, class libraries, basic \
services, and other infrastructure code is that they are designed for \
universal use without attachment to specific applications. As a result, we \
get a staggering set of features and settings that are often not used at all, \
used for the wrong purpose, or even simply turned out to be useless. Most \
developers work on specific systems, and the pursuit of unlimited versatility \
rarely serves them well. The best way to achieve universality lies through an \
in-depth understanding of known concrete examples and an analysis of their \
essence in order to find a fundamental common solution: simplicity as a \
result of practical experience rather than universality based on conjecture.\n\
\nThe priority of simplicity over versatility helps to make a choice between \
two architectural alternatives that are equal in other respects. When two \
solutions are possible, prefer a simpler and more needs-oriented one rather \
than a more sophisticated and versatile one. Of course, it is quite possible \
(and not so rarely) that a simpler solution in practice will be more \
versatile. But, even if that doesn\[CloseCurlyQuote]t happen, it\
\[CloseCurlyQuote]s easier to change a simple solution when you have a good \
idea of what you need than to adapt a \[OpenCurlyDoubleQuote]universal\
\[CloseCurlyDoubleQuote] solution, which has proved to be not universal \
enough.\n\nDespite the architect's good intentions, many solutions designed \
for universal application end up inadequate for anything specific.Software \
components must first be designed for a specific task, and they must cope \
well with that task.Effective universality is born of understanding, and \
understanding leads to simplification.\n\nGeneralization sometimes allows to \
bring the problem to a more fundamental look; the created solution embodies \
the patterns of several well-known examples: clear, compact, and \
well-founded. However, excessive generalization itself turns into a challenge \
that leads in the opposite direction and increases complexity instead of \
reducing it.The desire for abstract generalization often leads to solutions \
that are not tied to the realities of actual development.Such generalizations \
are based on assumptions that later turn out to be false, suggest options \
that later become unwanted, and create a ballast that is then difficult or \
impossible to remove. In the end, this only increases the secondary \
complexity that future developers and architects will face.\n\nMany \
architects value universality, but this attitude should not be unconditional. \
As a rule, people are unwilling to pay for universal fattening (or do not \
need it); they are usually faced with a very specific challenge, and they \
value a specific solution to that challenge. Versatility and flexibility can \
appear in the creation of concrete solutions, but if at the same time we get \
off the anchor too quickly and forget about the concrete, then we begin to \
drift into a sea of unlimited possibilities\[LongDash]a sea full of cunning \
settings, bulky (not just extensive) lists of parameters, infinite \
interfaces, and irregular abstractions. In the pursuit of abstract \
flexibility, often (accidentally or deliberately) the valuable properties of \
alternative, simpler solutions are lost."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490840957143*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c49ab61b-4242-469b-b35a-ecfe67c186ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "25", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\System Design.md\"\>"}],
  SequenceForm[
  25, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
System Design.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490840971138*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f276c0b7-9ba8-45a7-a1cb-537879a0f038"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about system design \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## System Design\\n\\nIn senior grades, another type of \
interview appears\[LongDash]system design. In one hour you have to design \
systems, thinking about the architecture of which in a real project you would \
spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN\[LongDash]forget these \
scary words; there's no time for them. Figac-figac and Proudakshen. \
Requirements collection -> usage options -> system requirements -> processing \
-> presentation of the solution, time has passed. The main thing here is more \
basic words: to build a smart face and somewhere to put kafka. Then they'll \
be behind you in 40 minutes.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about system design enterprise companies and \
how the recruitment process should be constructed.\n\n## System Design\n\nIn \
senior grades, another type of interview appears\[LongDash]system design. In \
one hour you have to design systems, thinking about the architecture of which \
in a real project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, \
BPMN\[LongDash]forget these scary words; there's no time for them. \
Figac-figac and Proudakshen. Requirements collection -> usage options -> \
system requirements -> processing -> presentation of the solution, time has \
passed. The main thing here is more basic words: to build a smart face and \
somewhere to put kafka. Then they'll be behind you in 40 minutes."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324908508518977`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"6672f42d-4047-4fca-925e-f9576dadd07e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about system design \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## System Design\\n\\nIn senior grades, another type of \
interview appears\[LongDash]system design. In one hour you have to design \
systems, thinking about the architecture of which in a real project you would \
spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN\[LongDash]forget these \
scary words; there's no time for them. Figac-figac and Proudakshen. \
Requirements collection -> usage options -> system requirements -> processing \
-> presentation of the solution, time has passed. The main thing here is more \
basic words: to build a smart face and somewhere to put kafka. Then they'll \
be behind you in 40 minutes.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about system design enterprise companies and \
how the recruitment process should be constructed.\n\n## System Design\n\nIn \
senior grades, another type of interview appears\[LongDash]system design. In \
one hour you have to design systems, thinking about the architecture of which \
in a real project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, \
BPMN\[LongDash]forget these scary words; there's no time for them. \
Figac-figac and Proudakshen. Requirements collection -> usage options -> \
system requirements -> processing -> presentation of the solution, time has \
passed. The main thing here is more basic words: to build a smart face and \
somewhere to put kafka. Then they'll be behind you in 40 minutes."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324909029900155`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"89453b00-2670-4c57-bd5e-f11a0361490b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"I've been going to interviews again, and I'd \
like to share some observations. This time we talk about system design \
enterprise companies and how the recruitment process should be \
constructed.\\n\\n## System Design\\n\\nIn senior grades, another type of \
interview appears\[LongDash]system design. In one hour you have to design \
systems, thinking about the architecture of which in a real project you would \
spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN\[LongDash]forget these \
scary words; there's no time for them. Figac-figac and Proudakshen. \
Requirements collection -> usage options -> system requirements -> processing \
-> presentation of the solution, time has passed. The main thing here is more \
basic words: to build a smart face and somewhere to put kafka. Then they'll \
be behind you in 40 minutes.\"\>"}],
  SequenceForm[
  "newText: ", 
   "I've been going to interviews again, and I'd like to share some \
observations. This time we talk about system design enterprise companies and \
how the recruitment process should be constructed.\n\n## System Design\n\nIn \
senior grades, another type of interview appears\[LongDash]system design. In \
one hour you have to design systems, thinking about the architecture of which \
in a real project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, \
BPMN\[LongDash]forget these scary words; there's no time for them. \
Figac-figac and Proudakshen. Requirements collection -> usage options -> \
system requirements -> processing -> presentation of the solution, time has \
passed. The main thing here is more basic words: to build a smart face and \
somewhere to put kafka. Then they'll be behind you in 40 minutes."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324909032182302`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"d193ffcc-924e-491a-86d6-406ad0461751"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'System Design'\\ndate = \
2024-07-16T00:00:00-07:00\\ndraft = false\\ncategories = [\\\"recruiting\\\", \
\\\"idef0\\\", \\\"usecase\\\", \\\"bpmn\\\"]\\ntags = [\\\"system \
design\\\", \\\"bpmn\\\", \\\"design\\\", \\\"system\\\", \\\"time\\\", \
\\\"requirements\\\", \
\\\"words\\\"]\\ncover_image='/images/cover/knoxwelle__2019-12-03T095346.000Z.\
jpg'\\n+++\\nI've been going to interviews again, and I'd like to share some \
observations. This time we talk about system design enterprise companies and \
how the recruitment process should be constructed.\\n\\n## System \
Design\\n\\nIn senior grades, another type of interview \
appears\[LongDash]system design. In one hour you have to design systems, \
thinking about the architecture of which in a real project you would spend \
several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN\[LongDash]forget these scary \
words; there's no time for them. Figac-figac and Proudakshen. Requirements \
collection -> usage options -> system requirements -> processing -> \
presentation of the solution, time has passed. The main thing here is more \
basic words: to build a smart face and somewhere to put kafka. Then they'll \
be behind you in 40 minutes.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'System Design'\ndate = 2024-07-16T00:00:00-07:00\ndraft = \
false\ncategories = [\"recruiting\", \"idef0\", \"usecase\", \"bpmn\"]\ntags \
= [\"system design\", \"bpmn\", \"design\", \"system\", \"time\", \
\"requirements\", \"words\"]\n\
cover_image='/images/cover/knoxwelle__2019-12-03T095346.000Z.jpg'\n+++\nI've \
been going to interviews again, and I'd like to share some observations. This \
time we talk about system design enterprise companies and how the recruitment \
process should be constructed.\n\n## System Design\n\nIn senior grades, \
another type of interview appears\[LongDash]system design. In one hour you \
have to design systems, thinking about the architecture of which in a real \
project you would spend several weeks. IDEF0, UseCase, ER, C4, DFD, BPMN\
\[LongDash]forget these scary words; there's no time for them. Figac-figac \
and Proudakshen. Requirements collection -> usage options -> system \
requirements -> processing -> presentation of the solution, time has passed. \
The main thing here is more basic words: to build a smart face and somewhere \
to put kafka. Then they'll be behind you in 40 minutes."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324909032397823`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ca103e05-8bc6-4885-8f7f-0f7555f34911"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "26", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\The architect must be a practitioner.md\"\>"}],
  SequenceForm[
  26, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\The \
architect must be a practitioner.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324909032647824`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"6eedcd60-6f98-4c5f-879b-0aa863362ff2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"A good architect should set an example to \
others. He should be able to replace any member of his team and do anything \
from networking and configuring the assembly process to writing modular tests \
and performing performance tests. Without a good understanding of the entire \
range of technologies, an architect is little different from an ordinary \
project manager.Team members may have deeper knowledge in their narrow fields \
\[Dash] this is perfectly normal \[Dash] but they are unlikely to be able to \
trust their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\\n\\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\\n\\nThe best way to learn is to observe others; \
that's how we learn in childhood.A good architect should be able to identify \
a problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\\n\\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \\\"in the field\\\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\\n\\nA good architect must have at the expert level at least one of \
the tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\\n\\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "A good architect should set an example to others. He should be able to \
replace any member of his team and do anything from networking and \
configuring the assembly process to writing modular tests and performing \
performance tests. Without a good understanding of the entire range of \
technologies, an architect is little different from an ordinary project \
manager.Team members may have deeper knowledge in their narrow fields \[Dash] \
this is perfectly normal \[Dash] but they are unlikely to be able to trust \
their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\n\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\n\nThe best way to learn is to observe others; that's \
how we learn in childhood.A good architect should be able to identify a \
problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\n\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \"in the field\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\n\nA good architect must have at the expert level at least one of the \
tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\n\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932490916438545*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"27174e6a-d385-4b49-a742-5b0d1f99919a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"A good architect should set an example to \
others. He should be able to replace any member of his team and do anything \
from networking and configuring the assembly process to writing modular tests \
and performing performance tests. Without a good understanding of the entire \
range of technologies, an architect is little different from an ordinary \
project manager.Team members may have deeper knowledge in their narrow fields \
\[Dash] this is perfectly normal \[Dash] but they are unlikely to be able to \
trust their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\\n\\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\\n\\nThe best way to learn is to observe others; \
that's how we learn in childhood.A good architect should be able to identify \
a problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\\n\\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \\\"in the field\\\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\\n\\nA good architect must have at the expert level at least one of \
the tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\\n\\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "A good architect should set an example to others. He should be able to \
replace any member of his team and do anything from networking and \
configuring the assembly process to writing modular tests and performing \
performance tests. Without a good understanding of the entire range of \
technologies, an architect is little different from an ordinary project \
manager.Team members may have deeper knowledge in their narrow fields \[Dash] \
this is perfectly normal \[Dash] but they are unlikely to be able to trust \
their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\n\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\n\nThe best way to learn is to observe others; that's \
how we learn in childhood.A good architect should be able to identify a \
problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\n\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \"in the field\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\n\nA good architect must have at the expert level at least one of the \
tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\n\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324910485021863`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ccd5465d-4b0e-4ff5-a2ef-c93fda73ec7d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"A good architect should set an example to \
others. He should be able to replace any member of his team and do anything \
from networking and configuring the assembly process to writing modular tests \
and performing performance tests. Without a good understanding of the entire \
range of technologies, an architect is little different from an ordinary \
project manager.Team members may have deeper knowledge in their narrow fields \
\[Dash] this is perfectly normal \[Dash] but they are unlikely to be able to \
trust their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\\n\\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\\n\\nThe best way to learn is to observe others; \
that's how we learn in childhood.A good architect should be able to identify \
a problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\\n\\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \\\"in the field\\\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\\n\\nA good architect must have at the expert level at least one of \
the tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\\n\\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired.\"\>"}],
  SequenceForm[
  "newText: ", 
   "A good architect should set an example to others. He should be able to \
replace any member of his team and do anything from networking and \
configuring the assembly process to writing modular tests and performing \
performance tests. Without a good understanding of the entire range of \
technologies, an architect is little different from an ordinary project \
manager.Team members may have deeper knowledge in their narrow fields \[Dash] \
this is perfectly normal \[Dash] but they are unlikely to be able to trust \
their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\n\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\n\nThe best way to learn is to observe others; that's \
how we learn in childhood.A good architect should be able to identify a \
problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\n\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \"in the field\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\n\nA good architect must have at the expert level at least one of the \
tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\n\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491048668778*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ac0df663-e25d-4af4-b357-cdb27081a7ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'The architect must be a \
practitioner'\\ndate = 2024-06-28T00:00:00-07:00\\ndraft = false\\ncategories \
= []\\ntags = [\\\"team\\\", \\\"wireshark\\\", \\\"architect\\\", \
\\\"project\\\", \\\"problem\\\", \
\\\"way\\\"]\\ncover_image='/images/cover/knoxwelle__2017-05-25T130552.000Z.\
jpg'\\n+++\\nA good architect should set an example to others. He should be \
able to replace any member of his team and do anything from networking and \
configuring the assembly process to writing modular tests and performing \
performance tests. Without a good understanding of the entire range of \
technologies, an architect is little different from an ordinary project \
manager.Team members may have deeper knowledge in their narrow fields \[Dash] \
this is perfectly normal \[Dash] but they are unlikely to be able to trust \
their architect unless he is familiar with the technologies used.As has \
already been said, an architect is an interface between the technical team \
and the business, which means that he must understand all the technical \
aspects in order to play the role of the team representative before the \
business management, without constantly seeking help.For the same reasons, \
the architect must understand the business aspects of the organization in \
order to successfully lead the developers to the goal of satisfying the \
commercial interests of the company.\\n\\nThe work of an architect is similar \
to that of an airplane pilot: he may not look busy, but in reality uses \
decades of experience to keep an eye on the situation and intervene \
immediately in the event of an emergency.The project manager (second pilot) \
provides daily management, relieving the architect of routine and staff \
management.Ultimately, the architect must be responsible for the quality of \
the product and its timely delivery.These challenges are difficult to solve \
without personal authority, which plays an extremely important role in the \
success of any project.\\n\\nThe best way to learn is to observe others; \
that's how we learn in childhood.A good architect should be able to identify \
a problem, put together a team and, without looking for the culprits, explain \
the essence of the problem, and then propose an elegant solution or a way \
around.At the same time, the architect can ask the team for help without \
losing any authority.Developers should feel their contribution to the \
problem, but the architect guides the discussion and determines the right \
approach.\\n\\nArchitects should join the team at the very earliest stages of \
the project; they should not sit in an ivory tower, pointing the way forward \
from there, but work \\\"in the field\\\" with everyone else.The issues of \
choosing a strategic direction or technology should not be transformed into \
independent research or new projects \[Dash] they should be approached \
pragmatically, searching for answers in the course of practical work or \
seeking advice from colleagues-architects (all good architects know each \
other).\\n\\nA good architect must have at the expert level at least one of \
the tools of his profession, such as an integrated design environment (IDE); \
remember that the architect should be a practitioner.It is logical that the \
software architect should know the IDE, the database architect \[Dash] the \
toolkit for building substance-relation charts (ER-charts), and the \
information architect - the XML modeling tools.However, the lead architect \
must be able to apply tools at all levels, from monitoring network traffic \
using Wireshark to simulating complex financial messages in XMLSpy \[Dash] \
there are no levels too low or too high for him.\\n\\nAs a rule, an architect \
comes up with a good summary and an impressive past.This is usually easy to \
impress the management and technical staff, but without demonstrating his \
skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'The architect must be a practitioner'\ndate = \
2024-06-28T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"team\", \
\"wireshark\", \"architect\", \"project\", \"problem\", \"way\"]\n\
cover_image='/images/cover/knoxwelle__2017-05-25T130552.000Z.jpg'\n+++\nA \
good architect should set an example to others. He should be able to replace \
any member of his team and do anything from networking and configuring the \
assembly process to writing modular tests and performing performance tests. \
Without a good understanding of the entire range of technologies, an \
architect is little different from an ordinary project manager.Team members \
may have deeper knowledge in their narrow fields \[Dash] this is perfectly \
normal \[Dash] but they are unlikely to be able to trust their architect \
unless he is familiar with the technologies used.As has already been said, an \
architect is an interface between the technical team and the business, which \
means that he must understand all the technical aspects in order to play the \
role of the team representative before the business management, without \
constantly seeking help.For the same reasons, the architect must understand \
the business aspects of the organization in order to successfully lead the \
developers to the goal of satisfying the commercial interests of the company.\
\n\nThe work of an architect is similar to that of an airplane pilot: he may \
not look busy, but in reality uses decades of experience to keep an eye on \
the situation and intervene immediately in the event of an emergency.The \
project manager (second pilot) provides daily management, relieving the \
architect of routine and staff management.Ultimately, the architect must be \
responsible for the quality of the product and its timely delivery.These \
challenges are difficult to solve without personal authority, which plays an \
extremely important role in the success of any project.\n\nThe best way to \
learn is to observe others; that's how we learn in childhood.A good architect \
should be able to identify a problem, put together a team and, without \
looking for the culprits, explain the essence of the problem, and then \
propose an elegant solution or a way around.At the same time, the architect \
can ask the team for help without losing any authority.Developers should feel \
their contribution to the problem, but the architect guides the discussion \
and determines the right approach.\n\nArchitects should join the team at the \
very earliest stages of the project; they should not sit in an ivory tower, \
pointing the way forward from there, but work \"in the field\" with everyone \
else.The issues of choosing a strategic direction or technology should not be \
transformed into independent research or new projects \[Dash] they should be \
approached pragmatically, searching for answers in the course of practical \
work or seeking advice from colleagues-architects (all good architects know \
each other).\n\nA good architect must have at the expert level at least one \
of the tools of his profession, such as an integrated design environment \
(IDE); remember that the architect should be a practitioner.It is logical \
that the software architect should know the IDE, the database architect \
\[Dash] the toolkit for building substance-relation charts (ER-charts), and \
the information architect - the XML modeling tools.However, the lead \
architect must be able to apply tools at all levels, from monitoring network \
traffic using Wireshark to simulating complex financial messages in XMLSpy \
\[Dash] there are no levels too low or too high for him.\n\nAs a rule, an \
architect comes up with a good summary and an impressive past.This is usually \
easy to impress the management and technical staff, but without demonstrating \
his skills in practice he is unlikely to be able to win the respect of the \
team.In such a situation, the team will experience training difficulties and \
its members are unlikely to be able to cope with the task for which they were \
hired."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324910486897783`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7a16cb89-f479-4abc-85c0-7dc2493dc943"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "27", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\There are no solutions for all cases of life.md\"\>"}],
  SequenceForm[
  27, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
There are no solutions for all cases of life.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324910487047772`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"d10ad07f-df4b-483c-9148-8a9195e4c2fb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"The architect must continuously refine and \
improve his \\\"context noe poche\\\", since there is no single universal \
solution for a wide range of diverse problems.Eberhardt Rechtin, in his book \
\\\"Systems Architecting: Creating & Building Complex Systems\\\" (Prentice \
Hall, 1991):\\n\\n\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \\\"I'm just using common \
sense.\\\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \\n\\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\\n\\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\\n\\nThe most important thing to know about \
program templates is when they should be used and when not.The same applies \
to the hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "The architect must continuously refine and improve his \"context noe \
poche\", since there is no single universal solution for a wide range of \
diverse problems.Eberhardt Rechtin, in his book \"Systems Architecting: \
Creating & Building Complex Systems\" (Prentice Hall, 1991):\n\n\
\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \"I'm just using common \
sense.\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \n\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\n\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\n\nThe most important thing to know about program \
templates is when they should be used and when not.The same applies to the \
hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324910585386076`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ee940078-edeb-41d3-ab11-7410b7b3f134"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"The architect must continuously refine and \
improve his \\\"context noe poche\\\", since there is no single universal \
solution for a wide range of diverse problems.Eberhardt Rechtin, in his book \
\\\"Systems Architecting: Creating & Building Complex Systems\\\" (Prentice \
Hall, 1991):\\n\\n\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \\\"I'm just using common \
sense.\\\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \\n\\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\\n\\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\\n\\nThe most important thing to know about \
program templates is when they should be used and when not.The same applies \
to the hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "The architect must continuously refine and improve his \"context noe \
poche\", since there is no single universal solution for a wide range of \
diverse problems.Eberhardt Rechtin, in his book \"Systems Architecting: \
Creating & Building Complex Systems\" (Prentice Hall, 1991):\n\n\
\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \"I'm just using common \
sense.\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \n\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\n\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\n\nThe most important thing to know about program \
templates is when they should be used and when not.The same applies to the \
hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491149830126*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b5274c21-fc84-4aeb-b3df-40a7d3b25b55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"The architect must continuously refine and \
improve his \\\"context noe poche\\\", since there is no single universal \
solution for a wide range of diverse problems.Eberhardt Rechtin, in his book \
\\\"Systems Architecting: Creating & Building Complex Systems\\\" (Prentice \
Hall, 1991):\\n\\n\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \\\"I'm just using common \
sense.\\\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \\n\\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\\n\\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\\n\\nThe most important thing to know about \
program templates is when they should be used and when not.The same applies \
to the hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings.\"\>"}],
  SequenceForm[
  "newText: ", 
   "The architect must continuously refine and improve his \"context noe \
poche\", since there is no single universal solution for a wide range of \
diverse problems.Eberhardt Rechtin, in his book \"Systems Architecting: \
Creating & Building Complex Systems\" (Prentice Hall, 1991):\n\n\
\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \"I'm just using common \
sense.\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \n\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\n\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\n\nThe most important thing to know about program \
templates is when they should be used and when not.The same applies to the \
hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.93249114998682*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"1a4a97f9-0fbd-419c-8bd8-aae306ea97ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'There are no solutions for all \
cases of life'\\ndate = 2024-05-28T00:00:00-07:00\\ndraft = \
false\\ncategories = [\\\"rechtin\\\", \\\"building\\\", \\\"systems\\\", \
\\\"prentice hall\\\"]\\ntags = [\\\"eberhardt rechtin\\\", \\\"systems \
architecting\\\", \\\"systems\\\", \\\"prentice hall\\\", \\\"education\\\", \
\\\"problem\\\", \\\"sense\\\", \\\"solution\\\", \
\\\"architect\\\"]\\ncover_image='/images/cover/knoxwelle__2017-06-03T162311.\
000Z.jpg'\\n+++\\nThe architect must continuously refine and improve his \
\\\"context noe poche\\\", since there is no single universal solution for a \
wide range of diverse problems.Eberhardt Rechtin, in his book \\\"Systems \
Architecting: Creating & Building Complex Systems\\\" (Prentice Hall, \
1991):\\n\\n\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \\\"I'm just using common \
sense.\\\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \\n\\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\\n\\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\\n\\nThe most important thing to know about \
program templates is when they should be used and when not.The same applies \
to the hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'There are no solutions for all cases of life'\ndate = \
2024-05-28T00:00:00-07:00\ndraft = false\ncategories = [\"rechtin\", \
\"building\", \"systems\", \"prentice hall\"]\ntags = [\"eberhardt rechtin\", \
\"systems architecting\", \"systems\", \"prentice hall\", \"education\", \
\"problem\", \"sense\", \"solution\", \"architect\"]\n\
cover_image='/images/cover/knoxwelle__2017-06-03T162311.000Z.jpg'\n+++\nThe \
architect must continuously refine and improve his \"context noe poche\", \
since there is no single universal solution for a wide range of diverse \
problems.Eberhardt Rechtin, in his book \"Systems Architecting: Creating & \
Building Complex Systems\" (Prentice Hall, 1991):\n\n\
\[OpenCurlyDoubleQuote]To learn the basic principles of the \
\[OpenCurlyDoubleQuote]eristic approach\[CloseCurlyDoubleQuote] to the design \
of complex systems, ask an experienced architect what he does when faced with \
a difficult task.His answer would most likely be, \"I'm just using common \
sense.\"<...>Instead of the term \[OpenCurlyDoubleQuote]sensual\
\[CloseCurlyDoubleQuote] it would be better to use the expression \
\[OpenCurlyDoubleQuote]context sensation\[CloseCurlyDoubleQuote]1 \[Dash] \
knowledge of what is ra zoom in a given context.Education, experience and \
study of examples allow the architect-practitioner to acquire a considerable \
power of contextual sense by the moment when it is entrusted to solve a \
system-level problem \[Dash] usually it takes \
decades.\[CloseCurlyDoubleQuote] \n\nOne of the major problems in the \
software industry, I think, is that tasks are often handed over to people who \
have not developed enough contextual sense.This may be due to the fact that \
the industry is only two generations old and is now experiencing a phase of \
explosive growth; it is possible that the disappearance of this problem could \
be considered a sign of the industry's maturity.\n\nI often encounter \
manifestations of this problem in my consulting work.Here are typical \
examples:rejection of domain-driven design1 where it would be appropriate; \
loss of a pragmatic view of things and excessive enthusiasm for the design of \
a software solution when it comes to a non-delayed task; unreasonable or \
irrelevant proposals at a time when the work on optimizing the speed of the \
system is at a standstill.\n\nThe most important thing to know about program \
templates is when they should be used and when not.The same applies to the \
hypotheses about the root causes of the problem and the corresponding \
corrective action.In both situations \[Dash] in the creation of the \
architecture of the system and in the analysis of the problem \[Dash] a \
universal solution \[OpenCurlyDoubleQuote]for all cases of life\
\[CloseCurlyDoubleQuote] does not exist by definition; the architect must \
develop and train his contextual sense, formulating architectural solutions, \
as well as identifying and eliminating their shortcomings."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324911500108213`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3394acc3-16a6-4daf-9657-ef9d43be156d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "28", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\There may be several solutions.md\"\>"}],
  SequenceForm[
  28, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\\
There may be several solutions.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491150024824*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"ac6d337a-730a-444e-a71d-cf3907826a53"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"One data model, one message format, one \
transport mechanism (and generally exactly one basic architectural component, \
policy, principle, etc.) cannot serve all aspects of a business organization \
equally well.It seems that this fact is an endless source of surprise and \
sadness for the developers of the systems.At the same time, it is quite \
natural: since the organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\\n\\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \\n\\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\\n\\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\\n\\n\\n\\nOf course, \
you should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "One data model, one message format, one transport mechanism (and \
generally exactly one basic architectural component, policy, principle, etc.) \
cannot serve all aspects of a business organization equally well.It seems \
that this fact is an endless source of surprise and sadness for the \
developers of the systems.At the same time, it is quite natural: since the \
organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\n\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \n\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\n\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\n\n\n\nOf course, you \
should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324911591618853`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"612a2cf6-4cc5-42df-9dd8-0b7152bfd40b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"One data model, one message format, one \
transport mechanism (and generally exactly one basic architectural component, \
policy, principle, etc.) cannot serve all aspects of a business organization \
equally well.It seems that this fact is an endless source of surprise and \
sadness for the developers of the systems.At the same time, it is quite \
natural: since the organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\\n\\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \\n\\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\\n\\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\\n\\n\\n\\nOf course, \
you should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "One data model, one message format, one transport mechanism (and \
generally exactly one basic architectural component, policy, principle, etc.) \
cannot serve all aspects of a business organization equally well.It seems \
that this fact is an endless source of surprise and sadness for the \
developers of the systems.At the same time, it is quite natural: since the \
organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\n\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \n\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\n\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\n\n\n\nOf course, you \
should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324912800742335`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"6c55686a-a1ce-4fc1-aed2-c9527f9f2174"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"One data model, one message format, one \
transport mechanism (and generally exactly one basic architectural component, \
policy, principle, etc.) cannot serve all aspects of a business organization \
equally well.It seems that this fact is an endless source of surprise and \
sadness for the developers of the systems.At the same time, it is quite \
natural: since the organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\\n\\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \\n\\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\\n\\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\\n\\n\\n\\nOf course, \
you should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers.\"\>"}],
  SequenceForm[
  "newText: ", 
   "One data model, one message format, one transport mechanism (and \
generally exactly one basic architectural component, policy, principle, etc.) \
cannot serve all aspects of a business organization equally well.It seems \
that this fact is an endless source of surprise and sadness for the \
developers of the systems.At the same time, it is quite natural: since the \
organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\n\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \n\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\n\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\n\n\n\nOf course, you \
should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491280216206*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"5f233f96-e3f6-4617-ae8e-3201560e6b91"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'There may be several \
solutions'\\ndate = 2024-05-25T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"philip k. dick\\\", \\\"data\\\", \\\"world\\\", \
\\\"time\\\", \\\"system\\\", \
\\\"organization\\\"]\\ncover_image='/images/cover/knoxwelle__2023-01-\
10T110354.000Z.jpg'\\n+++\\nOne data model, one message format, one transport \
mechanism (and generally exactly one basic architectural component, policy, \
principle, etc.) cannot serve all aspects of a business organization equally \
well.It seems that this fact is an endless source of surprise and sadness for \
the developers of the systems.At the same time, it is quite natural: since \
the organization (the word \[OpenCurlyDoubleQuote]organization\
\[CloseCurlyDoubleQuote] is highlighted here with the fat red line) is large \
enough to worry about how several different tables of accounts will affect \
the system in the next decade, it must be too large and heterogeneous to be \
able to handle a single table.\\n\\nIn the technical field, uniformity can be \
enforced.And it's very convenient for us.However, in the field of business, a \
controversial, multifaceted, informal, troubling real world comes into \
play.Worse still, have to deal not even with the real world, but with \
people's opinions about certain aspects of situations in certain parts of the \
world.You can, of course, try to treat this area as technical and introduce a \
single solution in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \\n\\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\\n\\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\\n\\n\\n\\nOf course, \
you should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'There may be several solutions'\ndate = \
2024-05-25T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"philip \
k. dick\", \"data\", \"world\", \"time\", \"system\", \"organization\"]\n\
cover_image='/images/cover/knoxwelle__2023-01-10T110354.000Z.jpg'\n+++\nOne \
data model, one message format, one transport mechanism (and generally \
exactly one basic architectural component, policy, principle, etc.) cannot \
serve all aspects of a business organization equally well.It seems that this \
fact is an endless source of surprise and sadness for the developers of the \
systems.At the same time, it is quite natural: since the organization (the \
word \[OpenCurlyDoubleQuote]organization\[CloseCurlyDoubleQuote] is \
highlighted here with the fat red line) is large enough to worry about how \
several different tables of accounts will affect the system in the next \
decade, it must be too large and heterogeneous to be able to handle a single \
table.\n\nIn the technical field, uniformity can be enforced.And it's very \
convenient for us.However, in the field of business, a controversial, \
multifaceted, informal, troubling real world comes into play.Worse still, \
have to deal not even with the real world, but with people's opinions about \
certain aspects of situations in certain parts of the world.You can, of \
course, try to treat this area as technical and introduce a single solution \
in order of order.However, reality is informally defined as \
\[OpenCurlyDoubleQuote]what doesn\[CloseCurlyQuote]t disappear when you stop \
believing in it\[CloseCurlyDoubleQuote] (Philip K. Dick), and as business \
develops, problems always return.So there are corporate data teams that spend \
all their (very expensive) time curbing existential horror through DTD1 \
juggling. \n\nThe response time of such systems is usually unsatisfactory \
from the customer's point of view.\n\nWhy not accept the reality of an \
inconsistent world and prevent the existence of several inconsisting, \
overlapping ideas, services, solutions?Yes, the technical expert in each of \
us, when he hears that sentence, shrinks with horror.We immediately imagine \
nightmarish scenarios: uncoordinated updates, unnecessary maintenance costs, \
clumps of addictions that have to be managed...But let's borrow some useful \
experience from the world of data storage.Data fairs (data marts) are often \
denormalized (in a relational sense), they arbitrarily mix imported and \
calculated values, and the data representations are very different from the \
data presentations in the source databases.And at the same time, there is no \
disaster from the presence of the data disfunctional properties.At the border \
of two completely different worlds \[Dash] usually data operations and \
analytical processing with their characteristic differences in update and \
sampling frequencies, in bandwidth, in the frequency of changes in structure \
and, possibly, even in volume \[Dash] is E L-process1.This is the key to the \
challenge: sufficiently strong differences in the non-functional properties \
of the system form the boundary through which it is possible to organize the \
practical management of disharmonized representations.\n\n\n\nOf course, you \
should not duplicate the presentations or create alternative transport \
mechanisms just for the sake of entertainment.But you should always bear in \
mind that the decomposition of the system by non-functional parameters can \
open up favourable opportunities for creating varied solutions for the \
benefit of your customers."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491280236203*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e68c24ab-d6b9-4e6e-8705-a54e7b65c39d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "29", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Try not to break the schedule.md\"\>"}],
  SequenceForm[
  29, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\Try \
not to break the schedule.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324912802502375`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"934cbce8-6416-47ba-ba36-3f77a99950db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"A software project can fail for many reasons.One \
of the most common sources of project failure is changing the schedule of \
work during the project execution without proper planning.Such failures can \
be avoided, but it requires considerable effort on the part of many \
people.Adjusting the timescale or adding resources to a project usually does \
not create any problems.Problems start when you are required to do more work \
in the same timeframe or shorten the schedule without reducing the \
load.\\n\\nThe idea that by shortening the schedule you can reduce costs or \
speed up the delivery of a product is a very common misconception.Typically, \
overtime is used or \\\"less important tasks\\\" (such as modular testing) \
are sacrificed for faster delivery of the product or for enhanced \
functionality without changing the delivery time.Avoid such a scenario at all \
costs.Remind those who require such measures of you of the following \
facts:\\n\\n- Reducing design times leads to poor design quality and poor \
documentation, and also increases the likelihood of quality control problems \
and the risk that the system will not be accepted by the user.\\n\\n- The \
reduction in coding or delivery times is directly related to the number of \
errors in the final product.\\n\\n- Reducing test times leads to poorly \
tested code and is directly related to the number of tests problems. \\n\\n - \
All of this entails problems at the stage of operation, and the elimination \
of such problems is much more expensive.\\n\\nIn the end, expenditure not \
only does not decrease, but increases.Usually this is the reason for failure.\
\\n\\nAs an architect, sooner or later you will find yourself in a situation \
where your chances of success are determined by how fast you act.Express your \
opinion as soon as possible.First try to ensure quality by keeping the \
scheduled schedule.If you can't do without shrinking the graphics, try to \
move non-critical functionality to future versions.Of course, this will \
require good training, negotiation skills and the ability to persuade \
themselves to be right.Start refining your skills in these areas \
today.Believe me, you won't regret it.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "A software project can fail for many reasons.One of the most common \
sources of project failure is changing the schedule of work during the \
project execution without proper planning.Such failures can be avoided, but \
it requires considerable effort on the part of many people.Adjusting the \
timescale or adding resources to a project usually does not create any \
problems.Problems start when you are required to do more work in the same \
timeframe or shorten the schedule without reducing the load.\n\nThe idea that \
by shortening the schedule you can reduce costs or speed up the delivery of a \
product is a very common misconception.Typically, overtime is used or \"less \
important tasks\" (such as modular testing) are sacrificed for faster \
delivery of the product or for enhanced functionality without changing the \
delivery time.Avoid such a scenario at all costs.Remind those who require \
such measures of you of the following facts:\n\n- Reducing design times leads \
to poor design quality and poor documentation, and also increases the \
likelihood of quality control problems and the risk that the system will not \
be accepted by the user.\n\n- The reduction in coding or delivery times is \
directly related to the number of errors in the final product.\n\n- Reducing \
test times leads to poorly tested code and is directly related to the number \
of tests problems. \n\n - All of this entails problems at the stage of \
operation, and the elimination of such problems is much more expensive.\n\nIn \
the end, expenditure not only does not decrease, but increases.Usually this \
is the reason for failure.\n\nAs an architect, sooner or later you will find \
yourself in a situation where your chances of success are determined by how \
fast you act.Express your opinion as soon as possible.First try to ensure \
quality by keeping the scheduled schedule.If you can't do without shrinking \
the graphics, try to move non-critical functionality to future versions.Of \
course, this will require good training, negotiation skills and the ability \
to persuade themselves to be right.Start refining your skills in these areas \
today.Believe me, you won't regret it."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324912893721633`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"00a256cb-abb7-47a5-ade3-885e6b6614cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"A software project can fail for many reasons. \
One of the most common sources of project failure is changing the schedule of \
work during project execution without proper planning. Such failures can be \
avoided, but they require considerable effort on the part of many people. \
Adjusting the timescale or adding resources to a project usually does not \
create any problems. Problems start when you are required to do more work in \
the same timeframe or shorten the schedule without reducing the \
load.\\n\\nThe idea that by shortening the schedule, you can reduce costs or \
speed up the delivery of a product is a very common misconception. Typically, \
overtime is used or \\\"less important tasks\\\" (such as modular testing) \
are sacrificed for faster delivery of the product or for enhanced \
functionality without changing the delivery time.Avoid such a scenario at all \
costs. Remind those who require such measures of you of the following \
facts:\\n\\nReducing design times leads to poor design quality and poor \
documentation, and it also increases the likelihood of quality control \
problems and the risk that the system will not be accepted by the \
user.\\n\\nThe reduction in coding or delivery times is directly related to \
the number of errors in the final product.\\n\\nReducing test times leads to \
poorly tested code and is directly related to the number of test problems. \
\\n\\n All of this entails problems at the stage of operation, and the \
elimination of such problems is much more expensive.\\n\\nIn the end, \
expenditure not only does not decrease but also increases. Usually, this is \
the reason for failure.\\n\\nAs an architect, sooner or later, you will find \
yourself in a situation where your chances of success are determined by how \
fast you act. Express your opinion as soon as possible. First, try to ensure \
quality by keeping the scheduled schedule. If you can't do without shrinking \
the graphics, try to move non-critical functionality to future versions. Of \
course, this will require good training, negotiation skills, and the ability \
to persuade themselves to be right. Start refining your skills in these areas \
today. Believe me, you won't regret it.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "A software project can fail for many reasons. One of the most common \
sources of project failure is changing the schedule of work during project \
execution without proper planning. Such failures can be avoided, but they \
require considerable effort on the part of many people. Adjusting the \
timescale or adding resources to a project usually does not create any \
problems. Problems start when you are required to do more work in the same \
timeframe or shorten the schedule without reducing the load.\n\nThe idea that \
by shortening the schedule, you can reduce costs or speed up the delivery of \
a product is a very common misconception. Typically, overtime is used or \
\"less important tasks\" (such as modular testing) are sacrificed for faster \
delivery of the product or for enhanced functionality without changing the \
delivery time.Avoid such a scenario at all costs. Remind those who require \
such measures of you of the following facts:\n\nReducing design times leads \
to poor design quality and poor documentation, and it also increases the \
likelihood of quality control problems and the risk that the system will not \
be accepted by the user.\n\nThe reduction in coding or delivery times is \
directly related to the number of errors in the final product.\n\nReducing \
test times leads to poorly tested code and is directly related to the number \
of test problems. \n\n All of this entails problems at the stage of \
operation, and the elimination of such problems is much more expensive.\n\nIn \
the end, expenditure not only does not decrease but also increases. Usually, \
this is the reason for failure.\n\nAs an architect, sooner or later, you will \
find yourself in a situation where your chances of success are determined by \
how fast you act. Express your opinion as soon as possible. First, try to \
ensure quality by keeping the scheduled schedule. If you can't do without \
shrinking the graphics, try to move non-critical functionality to future \
versions. Of course, this will require good training, negotiation skills, and \
the ability to persuade themselves to be right. Start refining your skills in \
these areas today. Believe me, you won't regret it."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324913765039635`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"c6a49e58-58b4-4a6c-9c1f-cda9a9bef658"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"A software project can fail for many reasons. \
One of the most common sources of project failure is changing the schedule of \
work during project execution without proper planning. Such failures can be \
avoided, but they require considerable effort on the part of many people. \
Adjusting the timescale or adding resources to a project usually does not \
create any problems. Problems start when you are required to do more work in \
the same timeframe or shorten the schedule without reducing the \
load.\\n\\nThe idea that by shortening the schedule, you can reduce costs or \
speed up the delivery of a product is a very common misconception. Typically, \
overtime is used or \\\"less important tasks\\\" (such as modular testing) \
are sacrificed for faster delivery of the product or for enhanced \
functionality without changing the delivery time.Avoid such a scenario at all \
costs. Remind those who require such measures of you of the following \
facts:\\n\\nReducing design times leads to poor design quality and poor \
documentation, and it also increases the likelihood of quality control \
problems and the risk that the system will not be accepted by the \
user.\\n\\nThe reduction in coding or delivery times is directly related to \
the number of errors in the final product.\\n\\nReducing test times leads to \
poorly tested code and is directly related to the number of test problems. \
\\n\\n All of this entails problems at the stage of operation, and the \
elimination of such problems is much more expensive.\\n\\nIn the end, \
expenditure not only does not decrease but also increases. Usually, this is \
the reason for failure.\\n\\nAs an architect, sooner or later, you will find \
yourself in a situation where your chances of success are determined by how \
fast you act. Express your opinion as soon as possible. First, try to ensure \
quality by keeping the scheduled schedule. If you can't do without shrinking \
the graphics, try to move non-critical functionality to future versions. Of \
course, this will require good training, negotiation skills, and the ability \
to persuade themselves to be right. Start refining your skills in these areas \
today. Believe me, you won't regret it.\"\>"}],
  SequenceForm[
  "newText: ", 
   "A software project can fail for many reasons. One of the most common \
sources of project failure is changing the schedule of work during project \
execution without proper planning. Such failures can be avoided, but they \
require considerable effort on the part of many people. Adjusting the \
timescale or adding resources to a project usually does not create any \
problems. Problems start when you are required to do more work in the same \
timeframe or shorten the schedule without reducing the load.\n\nThe idea that \
by shortening the schedule, you can reduce costs or speed up the delivery of \
a product is a very common misconception. Typically, overtime is used or \
\"less important tasks\" (such as modular testing) are sacrificed for faster \
delivery of the product or for enhanced functionality without changing the \
delivery time.Avoid such a scenario at all costs. Remind those who require \
such measures of you of the following facts:\n\nReducing design times leads \
to poor design quality and poor documentation, and it also increases the \
likelihood of quality control problems and the risk that the system will not \
be accepted by the user.\n\nThe reduction in coding or delivery times is \
directly related to the number of errors in the final product.\n\nReducing \
test times leads to poorly tested code and is directly related to the number \
of test problems. \n\n All of this entails problems at the stage of \
operation, and the elimination of such problems is much more expensive.\n\nIn \
the end, expenditure not only does not decrease but also increases. Usually, \
this is the reason for failure.\n\nAs an architect, sooner or later, you will \
find yourself in a situation where your chances of success are determined by \
how fast you act. Express your opinion as soon as possible. First, try to \
ensure quality by keeping the scheduled schedule. If you can't do without \
shrinking the graphics, try to move non-critical functionality to future \
versions. Of course, this will require good training, negotiation skills, and \
the ability to persuade themselves to be right. Start refining your skills in \
these areas today. Believe me, you won't regret it."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324913766463623`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"070b2cb8-fc1c-411b-95e6-04a571583d01"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Try not to break the \
schedule'\\ndate = 2024-05-31T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"express\\\", \\\"start\\\", \\\"problems\\\", \\\"delivery\\\
\", \\\"project\\\", \\\"quality\\\", \
\\\"times\\\"]\\ncover_image='/images/cover/knoxwelle__2017-06-01T184503.000Z.\
jpg'\\n+++\\nA software project can fail for many reasons. One of the most \
common sources of project failure is changing the schedule of work during \
project execution without proper planning. Such failures can be avoided, but \
they require considerable effort on the part of many people. Adjusting the \
timescale or adding resources to a project usually does not create any \
problems. Problems start when you are required to do more work in the same \
timeframe or shorten the schedule without reducing the load.\\n\\nThe idea \
that by shortening the schedule, you can reduce costs or speed up the \
delivery of a product is a very common misconception. Typically, overtime is \
used or \\\"less important tasks\\\" (such as modular testing) are sacrificed \
for faster delivery of the product or for enhanced functionality without \
changing the delivery time.Avoid such a scenario at all costs. Remind those \
who require such measures of you of the following facts:\\n\\nReducing design \
times leads to poor design quality and poor documentation, and it also \
increases the likelihood of quality control problems and the risk that the \
system will not be accepted by the user.\\n\\nThe reduction in coding or \
delivery times is directly related to the number of errors in the final \
product.\\n\\nReducing test times leads to poorly tested code and is directly \
related to the number of test problems. \\n\\n All of this entails problems \
at the stage of operation, and the elimination of such problems is much more \
expensive.\\n\\nIn the end, expenditure not only does not decrease but also \
increases. Usually, this is the reason for failure.\\n\\nAs an architect, \
sooner or later, you will find yourself in a situation where your chances of \
success are determined by how fast you act. Express your opinion as soon as \
possible. First, try to ensure quality by keeping the scheduled schedule. If \
you can't do without shrinking the graphics, try to move non-critical \
functionality to future versions. Of course, this will require good training, \
negotiation skills, and the ability to persuade themselves to be right. Start \
refining your skills in these areas today. Believe me, you won't regret it.\"\
\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Try not to break the schedule'\ndate = \
2024-05-31T00:00:00-07:00\ndraft = false\ncategories = []\ntags = \
[\"express\", \"start\", \"problems\", \"delivery\", \"project\", \
\"quality\", \"times\"]\n\
cover_image='/images/cover/knoxwelle__2017-06-01T184503.000Z.jpg'\n+++\nA \
software project can fail for many reasons. One of the most common sources of \
project failure is changing the schedule of work during project execution \
without proper planning. Such failures can be avoided, but they require \
considerable effort on the part of many people. Adjusting the timescale or \
adding resources to a project usually does not create any problems. Problems \
start when you are required to do more work in the same timeframe or shorten \
the schedule without reducing the load.\n\nThe idea that by shortening the \
schedule, you can reduce costs or speed up the delivery of a product is a \
very common misconception. Typically, overtime is used or \"less important \
tasks\" (such as modular testing) are sacrificed for faster delivery of the \
product or for enhanced functionality without changing the delivery \
time.Avoid such a scenario at all costs. Remind those who require such \
measures of you of the following facts:\n\nReducing design times leads to \
poor design quality and poor documentation, and it also increases the \
likelihood of quality control problems and the risk that the system will not \
be accepted by the user.\n\nThe reduction in coding or delivery times is \
directly related to the number of errors in the final product.\n\nReducing \
test times leads to poorly tested code and is directly related to the number \
of test problems. \n\n All of this entails problems at the stage of \
operation, and the elimination of such problems is much more expensive.\n\nIn \
the end, expenditure not only does not decrease but also increases. Usually, \
this is the reason for failure.\n\nAs an architect, sooner or later, you will \
find yourself in a situation where your chances of success are determined by \
how fast you act. Express your opinion as soon as possible. First, try to \
ensure quality by keeping the scheduled schedule. If you can't do without \
shrinking the graphics, try to move non-critical functionality to future \
versions. Of course, this will require good training, negotiation skills, and \
the ability to persuade themselves to be right. Start refining your skills in \
these areas today. Believe me, you won't regret it."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491376667395*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"46a72e09-8f88-4edd-9586-4817cdef3969"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "30", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\Use quantitative criteria.md\"\>"}],
  SequenceForm[
  30, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\Use \
quantitative criteria.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324913766794357`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f63a9a62-ca1a-4393-978c-14999ea99d93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"\\\"Fast\\\" can't be a requirement.As well as \
having a good response time.Or, say, \\\"expandable.\\\"The main reason is \
the lack of objective criteria for meeting such requirements.But users still \
need these features. The task of the architect is to ensure that the system \
has the necessary qualities, as well as to balance the inevitable \
contradictions that arise between them.Without objective criteria, the \
architect depends on the customer\[CloseCurlyQuote]s caprices (\
\[OpenCurlyDoubleQuote]No, I can\[CloseCurlyQuote]t accept the program \
\[Dash] it doesn\[CloseCurlyQuote]t work fast enough\[CloseCurlyDoubleQuote]) \
and on the developers obsessed with obsessive ideas \
(\[OpenCurlyDoubleQuote]no, the program is not ready \[Dash] it isn\
\[CloseCurlyQuote]t working fast \
enough\[CloseCurlyDoubleQuote]).\\n\\nUsually we try to write down all such \
wishes, as well as any other requirements. But this entry very often looks \
like a set of foggy epithetics: \[OpenCurlyDoubleQuote]flexible\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]friendly to accompany\
\[CloseCurlyDoubleQuote] and so on. However, all such criteria (even \\\"ease \
of use\\\" with sufficient diligence) can be measured in numerical values for \
which thresholds can be set.If this is not done, users will lose objective \
grounds for adopting the system, developers will lose useful guidelines that \
they can guide while working, and the architects' idea of the system will \
lose clarity.\\n\\nAsk simple questions: how much? for how long? how often? \
how quickly? increases or decreases? at what rate?If you have no answers, you \
do not understand what the customer needs.The answers must be in the economic \
model of the system, and if they don't exist, you'll have to think \
carefully.If you are working on a system architecture and the customer has \
not given you (or does not give) these numbers, ask yourself why.And then \
you'll get them.The next time someone tells you that the system should be \
scalable, ask them where the new users are coming from and why.Ask how many \
there will be and when it will happen.Don't be satisfied with the answers \
\\\"many\\\" and \\\"almost\\\".\\n\\nVague quantitative criteria should be \
set in the form of a range: minimum, norm, maximum.If it is not possible to \
specify such an interval, it is unclear what behavior is required from the \
system.While working on the architecture, you can test the system for \
compliance with these criteria to see if it is (still) within permissible \
deviations.Discrepancies in compliance with certain criteria occurring over \
time provide useful feedback.Determining these intervals and verifying the \
system for compliance is a time-consuming and expensive task.If no one is \
concerned about the performance of the system (neither the characteristics \
nor the meaning of the term) enough to pay for performance testing, it is \
likely that this indicator is not significant at all.When you create an \
architecture, focus on the aspects of the system that are worth the \
effort.\\n\\n\\\"The system must respond to user input not more than 1500 \
ms.At a standard load (defined as...) the average response time should be \
between 750 and 1250 ms.A response time of less than 500 ms is not perceived \
by users, so it will not be paid if it falls below this threshold.\
\[CloseCurlyDoubleQuote]But this can be called a requirement.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "\"Fast\" can't be a requirement.As well as having a good response \
time.Or, say, \"expandable.\"The main reason is the lack of objective \
criteria for meeting such requirements.But users still need these features. \
The task of the architect is to ensure that the system has the necessary \
qualities, as well as to balance the inevitable contradictions that arise \
between them.Without objective criteria, the architect depends on the \
customer\[CloseCurlyQuote]s caprices (\[OpenCurlyDoubleQuote]No, I can\
\[CloseCurlyQuote]t accept the program \[Dash] it doesn\[CloseCurlyQuote]t \
work fast enough\[CloseCurlyDoubleQuote]) and on the developers obsessed with \
obsessive ideas (\[OpenCurlyDoubleQuote]no, the program is not ready \[Dash] \
it isn\[CloseCurlyQuote]t working fast enough\[CloseCurlyDoubleQuote]).\n\n\
Usually we try to write down all such wishes, as well as any other \
requirements. But this entry very often looks like a set of foggy epithetics: \
\[OpenCurlyDoubleQuote]flexible\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]friendly to accompany\[CloseCurlyDoubleQuote] and so \
on. However, all such criteria (even \"ease of use\" with sufficient \
diligence) can be measured in numerical values for which thresholds can be \
set.If this is not done, users will lose objective grounds for adopting the \
system, developers will lose useful guidelines that they can guide while \
working, and the architects' idea of the system will lose clarity.\n\nAsk \
simple questions: how much? for how long? how often? how quickly? increases \
or decreases? at what rate?If you have no answers, you do not understand what \
the customer needs.The answers must be in the economic model of the system, \
and if they don't exist, you'll have to think carefully.If you are working on \
a system architecture and the customer has not given you (or does not give) \
these numbers, ask yourself why.And then you'll get them.The next time \
someone tells you that the system should be scalable, ask them where the new \
users are coming from and why.Ask how many there will be and when it will \
happen.Don't be satisfied with the answers \"many\" and \"almost\".\n\nVague \
quantitative criteria should be set in the form of a range: minimum, norm, \
maximum.If it is not possible to specify such an interval, it is unclear what \
behavior is required from the system.While working on the architecture, you \
can test the system for compliance with these criteria to see if it is \
(still) within permissible deviations.Discrepancies in compliance with \
certain criteria occurring over time provide useful feedback.Determining \
these intervals and verifying the system for compliance is a time-consuming \
and expensive task.If no one is concerned about the performance of the system \
(neither the characteristics nor the meaning of the term) enough to pay for \
performance testing, it is likely that this indicator is not significant at \
all.When you create an architecture, focus on the aspects of the system that \
are worth the effort.\n\n\"The system must respond to user input not more \
than 1500 ms.At a standard load (defined as...) the average response time \
should be between 750 and 1250 ms.A response time of less than 500 ms is not \
perceived by users, so it will not be paid if it falls below this threshold.\
\[CloseCurlyDoubleQuote]But this can be called a requirement."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324913867330503`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3f9bcb2a-f046-4a50-8040-62a4976d7d3b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"\\\"Fast\\\" can't be a requirement. As well as \
having a good response time.Or, say, \\\"expandable.\\\" The main reason is \
the lack of objective criteria for meeting such requirements.But users still \
need these features. The task of the architect is to ensure that the system \
has the necessary qualities as well as to balance the inevitable \
contradictions that arise between them. Without objective criteria, the \
architect depends on the customer\[CloseCurlyQuote]s caprices (\
\[OpenCurlyDoubleQuote]No, I can\[CloseCurlyQuote]t accept the program; it \
doesn\[CloseCurlyQuote]t work fast enough\[CloseCurlyDoubleQuote]) and on the \
developers obsession with obsessive ideas (\[OpenCurlyDoubleQuote]No, the \
program is not ready; it isn\[CloseCurlyQuote]t working fast enough\
\[CloseCurlyDoubleQuote]).\\n\\nUsually, we try to write down all such wishes \
as well as any other requirements. But this entry very often looks like a set \
of foggy epithetics: \\\"flexible,\\\"  \[OpenCurlyDoubleQuote]friendly to \
accompany,\[CloseCurlyDoubleQuote] and so on. However, all such criteria \
(even \\\"ease of use\\\" with sufficient diligence) can be measured in \
numerical values for which thresholds can be set.If this is not done, users \
will lose objective grounds for adopting the system, developers will lose \
useful guidelines that they can guide while working, and the architects' idea \
of the system will lose clarity.\\n\\nAsk simple questions: how much? for how \
long? how often?  how quickly?  increases or decreases? at what rate? If you \
have no answers, you do not understand what the customer needs. The answers \
must be in the economic model of the system, and if they don't exist, you'll \
have to think carefully.If you are working on system architecture and the \
customer has not given you (or does not give) these numbers, ask yourself \
why. And then you'll get them. The next time someone tells you that the \
system should be scalable, ask them where the new users are coming from and \
why.Ask how many there will be and when it will happen. Don't be satisfied \
with the answers \\\"many\\\" and \\\"almost.\\\".\\n\\nVague quantitative \
criteria should be set in the form of a range: minimum, norm, and maximum. If \
it is not possible to specify such an interval, it is unclear what behavior \
is required from the system.While working on the architecture, you can test \
the system for compliance with these criteria to see if it is still within \
permissible deviations. Discrepancies in compliance with certain criteria \
occurring over time provide useful feedback.Determining these intervals and \
verifying the system for compliance is a time-consuming and expensive task. \
If no one is concerned about the performance of the system (neither the \
characteristics nor the meaning of the term) enough to pay for performance \
testing, it is likely that this indicator is not significant at all.When you \
create an architecture, focus on the aspects of the system that are worth the \
effort.\\n\\n\\\"The system must respond to user input in no more than 1500 \
ms. At a standard load (defined as...), the average response time should be \
between 750 and 1250 ms. A response time of less than 500 ms is not perceived \
by users, so it will not be paid if it falls below this threshold.\
\[CloseCurlyDoubleQuote]But this can be called a requirement.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "\"Fast\" can't be a requirement. As well as having a good response \
time.Or, say, \"expandable.\" The main reason is the lack of objective \
criteria for meeting such requirements.But users still need these features. \
The task of the architect is to ensure that the system has the necessary \
qualities as well as to balance the inevitable contradictions that arise \
between them. Without objective criteria, the architect depends on the \
customer\[CloseCurlyQuote]s caprices (\[OpenCurlyDoubleQuote]No, I can\
\[CloseCurlyQuote]t accept the program; it doesn\[CloseCurlyQuote]t work fast \
enough\[CloseCurlyDoubleQuote]) and on the developers obsession with \
obsessive ideas (\[OpenCurlyDoubleQuote]No, the program is not ready; it isn\
\[CloseCurlyQuote]t working fast enough\[CloseCurlyDoubleQuote]).\n\nUsually, \
we try to write down all such wishes as well as any other requirements. But \
this entry very often looks like a set of foggy epithetics: \"flexible,\"  \
\[OpenCurlyDoubleQuote]friendly to accompany,\[CloseCurlyDoubleQuote] and so \
on. However, all such criteria (even \"ease of use\" with sufficient \
diligence) can be measured in numerical values for which thresholds can be \
set.If this is not done, users will lose objective grounds for adopting the \
system, developers will lose useful guidelines that they can guide while \
working, and the architects' idea of the system will lose clarity.\n\nAsk \
simple questions: how much? for how long? how often?  how quickly?  increases \
or decreases? at what rate? If you have no answers, you do not understand \
what the customer needs. The answers must be in the economic model of the \
system, and if they don't exist, you'll have to think carefully.If you are \
working on system architecture and the customer has not given you (or does \
not give) these numbers, ask yourself why. And then you'll get them. The next \
time someone tells you that the system should be scalable, ask them where the \
new users are coming from and why.Ask how many there will be and when it will \
happen. Don't be satisfied with the answers \"many\" and \"almost.\".\n\n\
Vague quantitative criteria should be set in the form of a range: minimum, \
norm, and maximum. If it is not possible to specify such an interval, it is \
unclear what behavior is required from the system.While working on the \
architecture, you can test the system for compliance with these criteria to \
see if it is still within permissible deviations. Discrepancies in compliance \
with certain criteria occurring over time provide useful feedback.Determining \
these intervals and verifying the system for compliance is a time-consuming \
and expensive task. If no one is concerned about the performance of the \
system (neither the characteristics nor the meaning of the term) enough to \
pay for performance testing, it is likely that this indicator is not \
significant at all.When you create an architecture, focus on the aspects of \
the system that are worth the effort.\n\n\"The system must respond to user \
input in no more than 1500 ms. At a standard load (defined as...), the \
average response time should be between 750 and 1250 ms. A response time of \
less than 500 ms is not perceived by users, so it will not be paid if it \
falls below this threshold.\[CloseCurlyDoubleQuote]But this can be called a \
requirement."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491499394594*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"356ecfe7-79a7-4b3c-82bb-352b84fdf8f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"\\\"Fast\\\" can't be a requirement. As well as \
having a good response time.Or, say, \\\"expandable.\\\" The main reason is \
the lack of objective criteria for meeting such requirements.But users still \
need these features. The task of the architect is to ensure that the system \
has the necessary qualities as well as to balance the inevitable \
contradictions that arise between them. Without objective criteria, the \
architect depends on the customer\[CloseCurlyQuote]s caprices (\
\[OpenCurlyDoubleQuote]No, I can\[CloseCurlyQuote]t accept the program; it \
doesn\[CloseCurlyQuote]t work fast enough\[CloseCurlyDoubleQuote]) and on the \
developers obsession with obsessive ideas (\[OpenCurlyDoubleQuote]No, the \
program is not ready; it isn\[CloseCurlyQuote]t working fast enough\
\[CloseCurlyDoubleQuote]).\\n\\nUsually, we try to write down all such wishes \
as well as any other requirements. But this entry very often looks like a set \
of foggy epithetics: \\\"flexible,\\\"  \[OpenCurlyDoubleQuote]friendly to \
accompany,\[CloseCurlyDoubleQuote] and so on. However, all such criteria \
(even \\\"ease of use\\\" with sufficient diligence) can be measured in \
numerical values for which thresholds can be set.If this is not done, users \
will lose objective grounds for adopting the system, developers will lose \
useful guidelines that they can guide while working, and the architects' idea \
of the system will lose clarity.\\n\\nAsk simple questions: how much? for how \
long? how often?  how quickly?  increases or decreases? at what rate? If you \
have no answers, you do not understand what the customer needs. The answers \
must be in the economic model of the system, and if they don't exist, you'll \
have to think carefully.If you are working on system architecture and the \
customer has not given you (or does not give) these numbers, ask yourself \
why. And then you'll get them. The next time someone tells you that the \
system should be scalable, ask them where the new users are coming from and \
why.Ask how many there will be and when it will happen. Don't be satisfied \
with the answers \\\"many\\\" and \\\"almost.\\\".\\n\\nVague quantitative \
criteria should be set in the form of a range: minimum, norm, and maximum. If \
it is not possible to specify such an interval, it is unclear what behavior \
is required from the system.While working on the architecture, you can test \
the system for compliance with these criteria to see if it is still within \
permissible deviations. Discrepancies in compliance with certain criteria \
occurring over time provide useful feedback.Determining these intervals and \
verifying the system for compliance is a time-consuming and expensive task. \
If no one is concerned about the performance of the system (neither the \
characteristics nor the meaning of the term) enough to pay for performance \
testing, it is likely that this indicator is not significant at all.When you \
create an architecture, focus on the aspects of the system that are worth the \
effort.\\n\\n\\\"The system must respond to user input in no more than 1500 \
ms. At a standard load (defined as...), the average response time should be \
between 750 and 1250 ms. A response time of less than 500 ms is not perceived \
by users, so it will not be paid if it falls below this threshold.\
\[CloseCurlyDoubleQuote]But this can be called a requirement.\"\>"}],
  SequenceForm[
  "newText: ", 
   "\"Fast\" can't be a requirement. As well as having a good response \
time.Or, say, \"expandable.\" The main reason is the lack of objective \
criteria for meeting such requirements.But users still need these features. \
The task of the architect is to ensure that the system has the necessary \
qualities as well as to balance the inevitable contradictions that arise \
between them. Without objective criteria, the architect depends on the \
customer\[CloseCurlyQuote]s caprices (\[OpenCurlyDoubleQuote]No, I can\
\[CloseCurlyQuote]t accept the program; it doesn\[CloseCurlyQuote]t work fast \
enough\[CloseCurlyDoubleQuote]) and on the developers obsession with \
obsessive ideas (\[OpenCurlyDoubleQuote]No, the program is not ready; it isn\
\[CloseCurlyQuote]t working fast enough\[CloseCurlyDoubleQuote]).\n\nUsually, \
we try to write down all such wishes as well as any other requirements. But \
this entry very often looks like a set of foggy epithetics: \"flexible,\"  \
\[OpenCurlyDoubleQuote]friendly to accompany,\[CloseCurlyDoubleQuote] and so \
on. However, all such criteria (even \"ease of use\" with sufficient \
diligence) can be measured in numerical values for which thresholds can be \
set.If this is not done, users will lose objective grounds for adopting the \
system, developers will lose useful guidelines that they can guide while \
working, and the architects' idea of the system will lose clarity.\n\nAsk \
simple questions: how much? for how long? how often?  how quickly?  increases \
or decreases? at what rate? If you have no answers, you do not understand \
what the customer needs. The answers must be in the economic model of the \
system, and if they don't exist, you'll have to think carefully.If you are \
working on system architecture and the customer has not given you (or does \
not give) these numbers, ask yourself why. And then you'll get them. The next \
time someone tells you that the system should be scalable, ask them where the \
new users are coming from and why.Ask how many there will be and when it will \
happen. Don't be satisfied with the answers \"many\" and \"almost.\".\n\n\
Vague quantitative criteria should be set in the form of a range: minimum, \
norm, and maximum. If it is not possible to specify such an interval, it is \
unclear what behavior is required from the system.While working on the \
architecture, you can test the system for compliance with these criteria to \
see if it is still within permissible deviations. Discrepancies in compliance \
with certain criteria occurring over time provide useful feedback.Determining \
these intervals and verifying the system for compliance is a time-consuming \
and expensive task. If no one is concerned about the performance of the \
system (neither the characteristics nor the meaning of the term) enough to \
pay for performance testing, it is likely that this indicator is not \
significant at all.When you create an architecture, focus on the aspects of \
the system that are worth the effort.\n\n\"The system must respond to user \
input in no more than 1500 ms. At a standard load (defined as...), the \
average response time should be between 750 and 1250 ms. A response time of \
less than 500 ms is not perceived by users, so it will not be paid if it \
falls below this threshold.\[CloseCurlyDoubleQuote]But this can be called a \
requirement."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491499552663*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"3db506ca-8171-49d6-9cc0-cc4ff16e314e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'Use quantitative criteria'\\ndate \
= 2024-06-21T00:00:00-07:00\\ndraft = false\\ncategories = []\\ntags = \
[\\\"ms.\\\", \\\"system\\\", \\\"criteria\\\", \\\"time\\\", \\\"users\\\", \
\\\"compliance\\\"]\\ncover_image='/images/cover/knoxwelle__2020-02-16T030054.\
000Z.jpg'\\n+++\\n\\\"Fast\\\" can't be a requirement. As well as having a \
good response time.Or, say, \\\"expandable.\\\" The main reason is the lack \
of objective criteria for meeting such requirements.But users still need \
these features. The task of the architect is to ensure that the system has \
the necessary qualities as well as to balance the inevitable contradictions \
that arise between them. Without objective criteria, the architect depends on \
the customer\[CloseCurlyQuote]s caprices (\[OpenCurlyDoubleQuote]No, I can\
\[CloseCurlyQuote]t accept the program; it doesn\[CloseCurlyQuote]t work fast \
enough\[CloseCurlyDoubleQuote]) and on the developers obsession with \
obsessive ideas (\[OpenCurlyDoubleQuote]No, the program is not ready; it isn\
\[CloseCurlyQuote]t working fast \
enough\[CloseCurlyDoubleQuote]).\\n\\nUsually, we try to write down all such \
wishes as well as any other requirements. But this entry very often looks \
like a set of foggy epithetics: \\\"flexible,\\\"  \
\[OpenCurlyDoubleQuote]friendly to accompany,\[CloseCurlyDoubleQuote] and so \
on. However, all such criteria (even \\\"ease of use\\\" with sufficient \
diligence) can be measured in numerical values for which thresholds can be \
set.If this is not done, users will lose objective grounds for adopting the \
system, developers will lose useful guidelines that they can guide while \
working, and the architects' idea of the system will lose clarity.\\n\\nAsk \
simple questions: how much? for how long? how often?  how quickly?  increases \
or decreases? at what rate? If you have no answers, you do not understand \
what the customer needs. The answers must be in the economic model of the \
system, and if they don't exist, you'll have to think carefully.If you are \
working on system architecture and the customer has not given you (or does \
not give) these numbers, ask yourself why. And then you'll get them. The next \
time someone tells you that the system should be scalable, ask them where the \
new users are coming from and why.Ask how many there will be and when it will \
happen. Don't be satisfied with the answers \\\"many\\\" and \\\"almost.\\\".\
\\n\\nVague quantitative criteria should be set in the form of a range: \
minimum, norm, and maximum. If it is not possible to specify such an \
interval, it is unclear what behavior is required from the system.While \
working on the architecture, you can test the system for compliance with \
these criteria to see if it is still within permissible deviations. \
Discrepancies in compliance with certain criteria occurring over time provide \
useful feedback.Determining these intervals and verifying the system for \
compliance is a time-consuming and expensive task. If no one is concerned \
about the performance of the system (neither the characteristics nor the \
meaning of the term) enough to pay for performance testing, it is likely that \
this indicator is not significant at all.When you create an architecture, \
focus on the aspects of the system that are worth the effort.\\n\\n\\\"The \
system must respond to user input in no more than 1500 ms. At a standard load \
(defined as...), the average response time should be between 750 and 1250 ms. \
A response time of less than 500 ms is not perceived by users, so it will not \
be paid if it falls below this threshold.\[CloseCurlyDoubleQuote]But this can \
be called a requirement.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'Use quantitative criteria'\ndate = \
2024-06-21T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"ms.\", \
\"system\", \"criteria\", \"time\", \"users\", \"compliance\"]\n\
cover_image='/images/cover/knoxwelle__2020-02-16T030054.000Z.jpg'\n+++\n\
\"Fast\" can't be a requirement. As well as having a good response time.Or, \
say, \"expandable.\" The main reason is the lack of objective criteria for \
meeting such requirements.But users still need these features. The task of \
the architect is to ensure that the system has the necessary qualities as \
well as to balance the inevitable contradictions that arise between them. \
Without objective criteria, the architect depends on the customer\
\[CloseCurlyQuote]s caprices (\[OpenCurlyDoubleQuote]No, I can\
\[CloseCurlyQuote]t accept the program; it doesn\[CloseCurlyQuote]t work fast \
enough\[CloseCurlyDoubleQuote]) and on the developers obsession with \
obsessive ideas (\[OpenCurlyDoubleQuote]No, the program is not ready; it isn\
\[CloseCurlyQuote]t working fast enough\[CloseCurlyDoubleQuote]).\n\nUsually, \
we try to write down all such wishes as well as any other requirements. But \
this entry very often looks like a set of foggy epithetics: \"flexible,\"  \
\[OpenCurlyDoubleQuote]friendly to accompany,\[CloseCurlyDoubleQuote] and so \
on. However, all such criteria (even \"ease of use\" with sufficient \
diligence) can be measured in numerical values for which thresholds can be \
set.If this is not done, users will lose objective grounds for adopting the \
system, developers will lose useful guidelines that they can guide while \
working, and the architects' idea of the system will lose clarity.\n\nAsk \
simple questions: how much? for how long? how often?  how quickly?  increases \
or decreases? at what rate? If you have no answers, you do not understand \
what the customer needs. The answers must be in the economic model of the \
system, and if they don't exist, you'll have to think carefully.If you are \
working on system architecture and the customer has not given you (or does \
not give) these numbers, ask yourself why. And then you'll get them. The next \
time someone tells you that the system should be scalable, ask them where the \
new users are coming from and why.Ask how many there will be and when it will \
happen. Don't be satisfied with the answers \"many\" and \"almost.\".\n\n\
Vague quantitative criteria should be set in the form of a range: minimum, \
norm, and maximum. If it is not possible to specify such an interval, it is \
unclear what behavior is required from the system.While working on the \
architecture, you can test the system for compliance with these criteria to \
see if it is still within permissible deviations. Discrepancies in compliance \
with certain criteria occurring over time provide useful feedback.Determining \
these intervals and verifying the system for compliance is a time-consuming \
and expensive task. If no one is concerned about the performance of the \
system (neither the characteristics nor the meaning of the term) enough to \
pay for performance testing, it is likely that this indicator is not \
significant at all.When you create an architecture, focus on the aspects of \
the system that are worth the effort.\n\n\"The system must respond to user \
input in no more than 1500 ms. At a standard load (defined as...), the \
average response time should be between 750 and 1250 ms. A response time of \
less than 500 ms is not perceived by users, so it will not be paid if it \
falls below this threshold.\[CloseCurlyDoubleQuote]But this can be called a \
requirement."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324914995726614`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"e79bd1fd-4cf3-4965-b9d7-849d5c029156"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "31", "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", \
"\<\"C:\\\\Users\\\\korol\\\\YandexDisk\\\\Hugo\\\\project\\\\tinydev\\\\\
content\\\\posts\\\\You negotiate more often than you think.md\"\>"}],
  SequenceForm[
  31, ". ", 
   "C:\\Users\\korol\\YandexDisk\\Hugo\\project\\tinydev\\content\\posts\\You \
negotiate more often than you think.md"],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324914995896606`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"985ba7ab-4d1e-4aa3-b486-e3fa6555d050"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"oldString: \"\>", 
   "\[InvisibleSpace]", "\<\"We have all fallen into \
\[OpenCurlyDoubleQuote]budget\[CloseCurlyDoubleQuote] refinements, when smart \
technological solutions are \[OpenCurlyDoubleQuote]buried\
\[CloseCurlyDoubleQuote] for savings.The conversation goes like this:\\n\\n\
\[OpenCurlyDoubleQuote]Do we really need X?\[CloseCurlyDoubleQuote] the \
project sponsor asks.\\n\\nIn place of X you can replace virtually everything \
vital to the system: software licenses, surplus servers, external backups or \
power sources. The question is always asked in a native tone, as if you are \
dropping all your pocket money on comics and chewing, while serious adults \
need to think about buying new shells, in which they will drag their future \
profits.\\n\\nThe correct answer to this question is, \\\"Yes. Absolutely \
necessary.\\\" But for some reason, almost no one answers.\\n\\nAfter all, we \
have technical education, and any technical discipline is the art of \
compromise.It is clear that no one will need exotic power sources if you put \
several white wheels in the data center and start interns in them.And instead \
of saying, \\\"Yes, absolutely necessary,\\\" we say something true: \\\"You \
can actually do without a second server, if you're willing to play with the \
gaps because of prevention and with each memory failure.Although if we buy a \
memory with automatic regularity control, then this problem can be \
bypassed.So there are only failures of the operating system on average every \
3.9 days, which means that at night the server will have to restart, but it \
is quite able to do the trainees when tired of turning the wheels\
\[CloseCurlyDoubleQuote]. \\n\\nAnd all this may be quite right, but you \
should not say that in any case. The sponsor stops listening to you after the \
words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \\n\\nThe \
problem is that you look at it from a technical point of view, and your \
sponsor clearly understands that he is negotiating. You're working together \
to find a solution, while he's conducting a \\\"go out/do not go out\\\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \\\"Do we really \
need X?\\\" is like this:\\n\\n\[OpenCurlyDoubleQuote]Without a second \
server, the entire system will \[OpenCurlyDoubleQuote]fall\
\[CloseCurlyDoubleQuote] about three times a day, especially during periods \
of maximum load and when demonstrated at board meetings. In fact, we need \
four servers to ensure that one independent pairins 100% performance, even if \
the other pair suddenly stops working.\[CloseCurlyDoubleQuote]\\n\\nOf \
course, you know perfectly well that the third and fourth servers are not \
really needed. This is a tactical gambit that will force your sponsor to \
switch the conversation to a different topic. You raise the bet and show that \
the system is still working on a minimal, risky configuration. Besides, if \
you miraculously manage to get additional servers, you can always pass one \
for testing (so that the testing environment is fully compatible with the \
working environment), and the other will be a great assembly machine.\"\>"}],
  SequenceForm[
  "oldString: ", 
   "We have all fallen into \[OpenCurlyDoubleQuote]budget\
\[CloseCurlyDoubleQuote] refinements, when smart technological solutions are \
\[OpenCurlyDoubleQuote]buried\[CloseCurlyDoubleQuote] for savings.The \
conversation goes like this:\n\n\[OpenCurlyDoubleQuote]Do we really need X?\
\[CloseCurlyDoubleQuote] the project sponsor asks.\n\nIn place of X you can \
replace virtually everything vital to the system: software licenses, surplus \
servers, external backups or power sources. The question is always asked in a \
native tone, as if you are dropping all your pocket money on comics and \
chewing, while serious adults need to think about buying new shells, in which \
they will drag their future profits.\n\nThe correct answer to this question \
is, \"Yes. Absolutely necessary.\" But for some reason, almost no one \
answers.\n\nAfter all, we have technical education, and any technical \
discipline is the art of compromise.It is clear that no one will need exotic \
power sources if you put several white wheels in the data center and start \
interns in them.And instead of saying, \"Yes, absolutely necessary,\" we say \
something true: \"You can actually do without a second server, if you're \
willing to play with the gaps because of prevention and with each memory \
failure.Although if we buy a memory with automatic regularity control, then \
this problem can be bypassed.So there are only failures of the operating \
system on average every 3.9 days, which means that at night the server will \
have to restart, but it is quite able to do the trainees when tired of \
turning the wheels\[CloseCurlyDoubleQuote]. \n\nAnd all this may be quite \
right, but you should not say that in any case. The sponsor stops listening \
to you after the words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \
\n\nThe problem is that you look at it from a technical point of view, and \
your sponsor clearly understands that he is negotiating. You're working \
together to find a solution, while he's conducting a \"go out/do not go out\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \"Do we really \
need X?\" is like this:\n\n\[OpenCurlyDoubleQuote]Without a second server, \
the entire system will \[OpenCurlyDoubleQuote]fall\[CloseCurlyDoubleQuote] \
about three times a day, especially during periods of maximum load and when \
demonstrated at board meetings. In fact, we need four servers to ensure that \
one independent pairins 100% performance, even if the other pair suddenly \
stops working.\[CloseCurlyDoubleQuote]\n\nOf course, you know perfectly well \
that the third and fourth servers are not really needed. This is a tactical \
gambit that will force your sponsor to switch the conversation to a different \
topic. You raise the bet and show that the system is still working on a \
minimal, risky configuration. Besides, if you miraculously manage to get \
additional servers, you can always pass one for testing (so that the testing \
environment is fully compatible with the working environment), and the other \
will be a great assembly machine."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.932491508940397*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"8b4c6b32-5331-4a68-b54b-b0a9ebf60e55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Translated: \"\>", 
   "\[InvisibleSpace]", "\<\"We have all fallen into \
\[OpenCurlyDoubleQuote]budget\[CloseCurlyDoubleQuote] refinements, when smart \
technological solutions are \[OpenCurlyDoubleQuote]buried\
\[CloseCurlyDoubleQuote] for savings.The conversation goes like this:\\n\\n\
\[OpenCurlyDoubleQuote]Do we really need X?\[CloseCurlyDoubleQuote] the \
project sponsor asks.\\n\\nIn place of X you can replace virtually everything \
vital to the system: software licenses, surplus servers, external backups or \
power sources. The question is always asked in a native tone, as if you are \
dropping all your pocket money on comics and chewing, while serious adults \
need to think about buying new shells, in which they will drag their future \
profits.\\n\\nThe correct answer to this question is, \\\"Yes. Absolutely \
necessary.\\\" But for some reason, almost no one answers.\\n\\nAfter all, we \
have technical education, and any technical discipline is the art of \
compromise.It is clear that no one will need exotic power sources if you put \
several white wheels in the data center and start interns in them.And instead \
of saying, \\\"Yes, absolutely necessary,\\\" we say something true: \\\"You \
can actually do without a second server, if you're willing to play with the \
gaps because of prevention and with each memory failure.Although if we buy a \
memory with automatic regularity control, then this problem can be \
bypassed.So there are only failures of the operating system on average every \
3.9 days, which means that at night the server will have to restart, but it \
is quite able to do the trainees when tired of turning the wheels\
\[CloseCurlyDoubleQuote]. \\n\\nAnd all this may be quite right, but you \
should not say that in any case. The sponsor stops listening to you after the \
words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \\n\\nThe \
problem is that you look at it from a technical point of view, and your \
sponsor clearly understands that he is negotiating. You're working together \
to find a solution, while he's conducting a \\\"go out/do not go out\\\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \\\"Do we really \
need X?\\\" is like this:\\n\\n\[OpenCurlyDoubleQuote]Without a second \
server, the entire system will \[OpenCurlyDoubleQuote]fall\
\[CloseCurlyDoubleQuote] about three times a day, especially during periods \
of maximum load and when demonstrated at board meetings. In fact, we need \
four servers to ensure that one independent pairins 100% performance, even if \
the other pair suddenly stops working.\[CloseCurlyDoubleQuote]\\n\\nOf \
course, you know perfectly well that the third and fourth servers are not \
really needed. This is a tactical gambit that will force your sponsor to \
switch the conversation to a different topic. You raise the bet and show that \
the system is still working on a minimal, risky configuration. Besides, if \
you miraculously manage to get additional servers, you can always pass one \
for testing (so that the testing environment is fully compatible with the \
working environment), and the other will be a great assembly machine.\"\>"}],
  SequenceForm[
  "Translated: ", 
   "We have all fallen into \[OpenCurlyDoubleQuote]budget\
\[CloseCurlyDoubleQuote] refinements, when smart technological solutions are \
\[OpenCurlyDoubleQuote]buried\[CloseCurlyDoubleQuote] for savings.The \
conversation goes like this:\n\n\[OpenCurlyDoubleQuote]Do we really need X?\
\[CloseCurlyDoubleQuote] the project sponsor asks.\n\nIn place of X you can \
replace virtually everything vital to the system: software licenses, surplus \
servers, external backups or power sources. The question is always asked in a \
native tone, as if you are dropping all your pocket money on comics and \
chewing, while serious adults need to think about buying new shells, in which \
they will drag their future profits.\n\nThe correct answer to this question \
is, \"Yes. Absolutely necessary.\" But for some reason, almost no one \
answers.\n\nAfter all, we have technical education, and any technical \
discipline is the art of compromise.It is clear that no one will need exotic \
power sources if you put several white wheels in the data center and start \
interns in them.And instead of saying, \"Yes, absolutely necessary,\" we say \
something true: \"You can actually do without a second server, if you're \
willing to play with the gaps because of prevention and with each memory \
failure.Although if we buy a memory with automatic regularity control, then \
this problem can be bypassed.So there are only failures of the operating \
system on average every 3.9 days, which means that at night the server will \
have to restart, but it is quite able to do the trainees when tired of \
turning the wheels\[CloseCurlyDoubleQuote]. \n\nAnd all this may be quite \
right, but you should not say that in any case. The sponsor stops listening \
to you after the words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \
\n\nThe problem is that you look at it from a technical point of view, and \
your sponsor clearly understands that he is negotiating. You're working \
together to find a solution, while he's conducting a \"go out/do not go out\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \"Do we really \
need X?\" is like this:\n\n\[OpenCurlyDoubleQuote]Without a second server, \
the entire system will \[OpenCurlyDoubleQuote]fall\[CloseCurlyDoubleQuote] \
about three times a day, especially during periods of maximum load and when \
demonstrated at board meetings. In fact, we need four servers to ensure that \
one independent pairins 100% performance, even if the other pair suddenly \
stops working.\[CloseCurlyDoubleQuote]\n\nOf course, you know perfectly well \
that the third and fourth servers are not really needed. This is a tactical \
gambit that will force your sponsor to switch the conversation to a different \
topic. You raise the bet and show that the system is still working on a \
minimal, risky configuration. Besides, if you miraculously manage to get \
additional servers, you can always pass one for testing (so that the testing \
environment is fully compatible with the working environment), and the other \
will be a great assembly machine."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324916170260572`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"b7520f04-a31a-44d0-bfb5-53fb3a81960a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newText: \"\>", 
   "\[InvisibleSpace]", "\<\"We have all fallen into \
\[OpenCurlyDoubleQuote]budget\[CloseCurlyDoubleQuote] refinements, when smart \
technological solutions are \[OpenCurlyDoubleQuote]buried\
\[CloseCurlyDoubleQuote] for savings.The conversation goes like this:\\n\\n\
\[OpenCurlyDoubleQuote]Do we really need X?\[CloseCurlyDoubleQuote] the \
project sponsor asks.\\n\\nIn place of X you can replace virtually everything \
vital to the system: software licenses, surplus servers, external backups or \
power sources. The question is always asked in a native tone, as if you are \
dropping all your pocket money on comics and chewing, while serious adults \
need to think about buying new shells, in which they will drag their future \
profits.\\n\\nThe correct answer to this question is, \\\"Yes. Absolutely \
necessary.\\\" But for some reason, almost no one answers.\\n\\nAfter all, we \
have technical education, and any technical discipline is the art of \
compromise.It is clear that no one will need exotic power sources if you put \
several white wheels in the data center and start interns in them.And instead \
of saying, \\\"Yes, absolutely necessary,\\\" we say something true: \\\"You \
can actually do without a second server, if you're willing to play with the \
gaps because of prevention and with each memory failure.Although if we buy a \
memory with automatic regularity control, then this problem can be \
bypassed.So there are only failures of the operating system on average every \
3.9 days, which means that at night the server will have to restart, but it \
is quite able to do the trainees when tired of turning the wheels\
\[CloseCurlyDoubleQuote]. \\n\\nAnd all this may be quite right, but you \
should not say that in any case. The sponsor stops listening to you after the \
words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \\n\\nThe \
problem is that you look at it from a technical point of view, and your \
sponsor clearly understands that he is negotiating. You're working together \
to find a solution, while he's conducting a \\\"go out/do not go out\\\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \\\"Do we really \
need X?\\\" is like this:\\n\\n\[OpenCurlyDoubleQuote]Without a second \
server, the entire system will \[OpenCurlyDoubleQuote]fall\
\[CloseCurlyDoubleQuote] about three times a day, especially during periods \
of maximum load and when demonstrated at board meetings. In fact, we need \
four servers to ensure that one independent pairins 100% performance, even if \
the other pair suddenly stops working.\[CloseCurlyDoubleQuote]\\n\\nOf \
course, you know perfectly well that the third and fourth servers are not \
really needed. This is a tactical gambit that will force your sponsor to \
switch the conversation to a different topic. You raise the bet and show that \
the system is still working on a minimal, risky configuration. Besides, if \
you miraculously manage to get additional servers, you can always pass one \
for testing (so that the testing environment is fully compatible with the \
working environment), and the other will be a great assembly machine.\"\>"}],
  SequenceForm[
  "newText: ", 
   "We have all fallen into \[OpenCurlyDoubleQuote]budget\
\[CloseCurlyDoubleQuote] refinements, when smart technological solutions are \
\[OpenCurlyDoubleQuote]buried\[CloseCurlyDoubleQuote] for savings.The \
conversation goes like this:\n\n\[OpenCurlyDoubleQuote]Do we really need X?\
\[CloseCurlyDoubleQuote] the project sponsor asks.\n\nIn place of X you can \
replace virtually everything vital to the system: software licenses, surplus \
servers, external backups or power sources. The question is always asked in a \
native tone, as if you are dropping all your pocket money on comics and \
chewing, while serious adults need to think about buying new shells, in which \
they will drag their future profits.\n\nThe correct answer to this question \
is, \"Yes. Absolutely necessary.\" But for some reason, almost no one \
answers.\n\nAfter all, we have technical education, and any technical \
discipline is the art of compromise.It is clear that no one will need exotic \
power sources if you put several white wheels in the data center and start \
interns in them.And instead of saying, \"Yes, absolutely necessary,\" we say \
something true: \"You can actually do without a second server, if you're \
willing to play with the gaps because of prevention and with each memory \
failure.Although if we buy a memory with automatic regularity control, then \
this problem can be bypassed.So there are only failures of the operating \
system on average every 3.9 days, which means that at night the server will \
have to restart, but it is quite able to do the trainees when tired of \
turning the wheels\[CloseCurlyDoubleQuote]. \n\nAnd all this may be quite \
right, but you should not say that in any case. The sponsor stops listening \
to you after the words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \
\n\nThe problem is that you look at it from a technical point of view, and \
your sponsor clearly understands that he is negotiating. You're working \
together to find a solution, while he's conducting a \"go out/do not go out\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \"Do we really \
need X?\" is like this:\n\n\[OpenCurlyDoubleQuote]Without a second server, \
the entire system will \[OpenCurlyDoubleQuote]fall\[CloseCurlyDoubleQuote] \
about three times a day, especially during periods of maximum load and when \
demonstrated at board meetings. In fact, we need four servers to ensure that \
one independent pairins 100% performance, even if the other pair suddenly \
stops working.\[CloseCurlyDoubleQuote]\n\nOf course, you know perfectly well \
that the third and fourth servers are not really needed. This is a tactical \
gambit that will force your sponsor to switch the conversation to a different \
topic. You raise the bet and show that the system is still working on a \
minimal, risky configuration. Besides, if you miraculously manage to get \
additional servers, you can always pass one for testing (so that the testing \
environment is fully compatible with the working environment), and the other \
will be a great assembly machine."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324916171882997`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9ce1cf80-7d6e-4d67-9dd3-c1d3911d2530"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"newContent: \"\>", 
   "\[InvisibleSpace]", "\<\"+++\\ntitle = 'You negotiate more often than you \
think'\\ndate = 2024-07-30T00:00:00-07:00\\ndraft = false\\ncategories = \
[]\\ntags = [\\\"need\\\", \\\"servers\\\", \\\"system\\\", \\\"sponsor\\\", \
\\\"server\\\"]\\ncover_image='/images/cover/knoxwelle__2017-07-25T114411.\
000Z.jpg'\\n+++\\nWe have all fallen into \[OpenCurlyDoubleQuote]budget\
\[CloseCurlyDoubleQuote] refinements, when smart technological solutions are \
\[OpenCurlyDoubleQuote]buried\[CloseCurlyDoubleQuote] for savings.The \
conversation goes like this:\\n\\n\[OpenCurlyDoubleQuote]Do we really need X?\
\[CloseCurlyDoubleQuote] the project sponsor asks.\\n\\nIn place of X you can \
replace virtually everything vital to the system: software licenses, surplus \
servers, external backups or power sources. The question is always asked in a \
native tone, as if you are dropping all your pocket money on comics and \
chewing, while serious adults need to think about buying new shells, in which \
they will drag their future profits.\\n\\nThe correct answer to this question \
is, \\\"Yes. Absolutely necessary.\\\" But for some reason, almost no one \
answers.\\n\\nAfter all, we have technical education, and any technical \
discipline is the art of compromise.It is clear that no one will need exotic \
power sources if you put several white wheels in the data center and start \
interns in them.And instead of saying, \\\"Yes, absolutely necessary,\\\" we \
say something true: \\\"You can actually do without a second server, if \
you're willing to play with the gaps because of prevention and with each \
memory failure.Although if we buy a memory with automatic regularity control, \
then this problem can be bypassed.So there are only failures of the operating \
system on average every 3.9 days, which means that at night the server will \
have to restart, but it is quite able to do the trainees when tired of \
turning the wheels\[CloseCurlyDoubleQuote]. \\n\\nAnd all this may be quite \
right, but you should not say that in any case. The sponsor stops listening \
to you after the words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \
\\n\\nThe problem is that you look at it from a technical point of view, and \
your sponsor clearly understands that he is negotiating. You're working \
together to find a solution, while he's conducting a \\\"go out/do not go out\
\\\" tactical manoeuvre. And in any negotiation, you should never make \
concessions on the first requirement. The correct answer to the question \
\\\"Do we really need X?\\\" is like \
this:\\n\\n\[OpenCurlyDoubleQuote]Without a second server, the entire system \
will \[OpenCurlyDoubleQuote]fall\[CloseCurlyDoubleQuote] about three times a \
day, especially during periods of maximum load and when demonstrated at board \
meetings. In fact, we need four servers to ensure that one independent \
pairins 100% performance, even if the other pair suddenly stops working.\
\[CloseCurlyDoubleQuote]\\n\\nOf course, you know perfectly well that the \
third and fourth servers are not really needed. This is a tactical gambit \
that will force your sponsor to switch the conversation to a different topic. \
You raise the bet and show that the system is still working on a minimal, \
risky configuration. Besides, if you miraculously manage to get additional \
servers, you can always pass one for testing (so that the testing environment \
is fully compatible with the working environment), and the other will be a \
great assembly machine.\"\>"}],
  SequenceForm[
  "newContent: ", 
   "+++\ntitle = 'You negotiate more often than you think'\ndate = \
2024-07-30T00:00:00-07:00\ndraft = false\ncategories = []\ntags = [\"need\", \
\"servers\", \"system\", \"sponsor\", \"server\"]\n\
cover_image='/images/cover/knoxwelle__2017-07-25T114411.000Z.jpg'\n+++\nWe \
have all fallen into \[OpenCurlyDoubleQuote]budget\[CloseCurlyDoubleQuote] \
refinements, when smart technological solutions are \
\[OpenCurlyDoubleQuote]buried\[CloseCurlyDoubleQuote] for savings.The \
conversation goes like this:\n\n\[OpenCurlyDoubleQuote]Do we really need X?\
\[CloseCurlyDoubleQuote] the project sponsor asks.\n\nIn place of X you can \
replace virtually everything vital to the system: software licenses, surplus \
servers, external backups or power sources. The question is always asked in a \
native tone, as if you are dropping all your pocket money on comics and \
chewing, while serious adults need to think about buying new shells, in which \
they will drag their future profits.\n\nThe correct answer to this question \
is, \"Yes. Absolutely necessary.\" But for some reason, almost no one \
answers.\n\nAfter all, we have technical education, and any technical \
discipline is the art of compromise.It is clear that no one will need exotic \
power sources if you put several white wheels in the data center and start \
interns in them.And instead of saying, \"Yes, absolutely necessary,\" we say \
something true: \"You can actually do without a second server, if you're \
willing to play with the gaps because of prevention and with each memory \
failure.Although if we buy a memory with automatic regularity control, then \
this problem can be bypassed.So there are only failures of the operating \
system on average every 3.9 days, which means that at night the server will \
have to restart, but it is quite able to do the trainees when tired of \
turning the wheels\[CloseCurlyDoubleQuote]. \n\nAnd all this may be quite \
right, but you should not say that in any case. The sponsor stops listening \
to you after the words \[OpenCurlyDoubleQuote]really\[CloseCurlyDoubleQuote]. \
\n\nThe problem is that you look at it from a technical point of view, and \
your sponsor clearly understands that he is negotiating. You're working \
together to find a solution, while he's conducting a \"go out/do not go out\" \
tactical manoeuvre. And in any negotiation, you should never make concessions \
on the first requirement. The correct answer to the question \"Do we really \
need X?\" is like this:\n\n\[OpenCurlyDoubleQuote]Without a second server, \
the entire system will \[OpenCurlyDoubleQuote]fall\[CloseCurlyDoubleQuote] \
about three times a day, especially during periods of maximum load and when \
demonstrated at board meetings. In fact, we need four servers to ensure that \
one independent pairins 100% performance, even if the other pair suddenly \
stops working.\[CloseCurlyDoubleQuote]\n\nOf course, you know perfectly well \
that the third and fourth servers are not really needed. This is a tactical \
gambit that will force your sponsor to switch the conversation to a different \
topic. You raise the bet and show that the system is still working on a \
minimal, risky configuration. Besides, if you miraculously manage to get \
additional servers, you can always pass one for testing (so that the testing \
environment is fully compatible with the working environment), and the other \
will be a great assembly machine."],
  Editable->False]], "Print",
 CellChangeTimes->{3.9323213286976385`*^9, 3.9323214445544233`*^9, 
  3.9323219938573494`*^9, 3.932322179054088*^9, 3.9323271767119417`*^9, 
  3.9323278258849325`*^9, 3.9324299103694243`*^9, 3.932431367396615*^9, 
  3.932431462740416*^9, 3.932432225373289*^9, 3.9324323273031597`*^9, 
  3.93244357677946*^9, 3.9324916172068295`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"f9206a22-f9c4-44ae-9c51-04da4641b34a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{586.5, 687.75},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5d9110b2-a3f6-4125-94cf-c6c2fd93d6aa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 635, 14, 32, "Input",ExpressionUUID->"4cdf9430-8758-4fb8-98ce-1e0ce6a72436"],
Cell[1218, 38, 7056, 105, 706, "Output",ExpressionUUID->"e1779637-4a99-475d-b179-2483e86cab8c"]
}, Open  ]],
Cell[8289, 146, 1167, 27, 50, "Input",ExpressionUUID->"306eb6e4-3f50-4117-8a22-98b0c8e8e9da"],
Cell[CellGroupData[{
Cell[9481, 177, 14338, 288, 1308, "Input",ExpressionUUID->"c8075ac6-894d-436e-b634-55ef40986281"],
Cell[CellGroupData[{
Cell[23844, 469, 896, 19, 30, "Print",ExpressionUUID->"8e9164e4-e729-4bbe-91ce-8df75d7e3cac"],
Cell[24743, 490, 5294, 76, 386, "Print",ExpressionUUID->"265cc501-0496-4ffa-bf88-f7b4f902f4f5"],
Cell[30040, 568, 5296, 76, 386, "Print",ExpressionUUID->"a3eb1165-8815-4f0b-aca4-ee1342197f36"],
Cell[35339, 646, 5290, 76, 386, "Print",ExpressionUUID->"ebe93381-acaf-404e-a3cd-ead4181be437"],
Cell[40632, 724, 5942, 86, 478, "Print",ExpressionUUID->"c39809c6-ff9c-4d6f-93d4-25c951a23232"],
Cell[46577, 812, 846, 18, 18, "Print",ExpressionUUID->"5f81c5dd-27ea-45f6-a7a5-5969f1dfc9d7"],
Cell[47426, 832, 6026, 86, 452, "Print",ExpressionUUID->"910aaf6c-faed-4874-a9fc-baca418ec44d"],
Cell[53455, 920, 6070, 86, 452, "Print",ExpressionUUID->"ca747c06-aa37-4267-a941-757eca834682"],
Cell[59528, 1008, 6066, 86, 452, "Print",ExpressionUUID->"6094f2c9-491d-434e-b10a-88c97f2a088d"],
Cell[65597, 1096, 7240, 102, 583, "Print",ExpressionUUID->"85f4f2ab-e649-4d14-a010-c04c7e958f50"],
Cell[72840, 1200, 842, 18, 18, "Print",ExpressionUUID->"47ad0914-a669-44e2-9bc5-7503b6d9c27f"],
Cell[73685, 1220, 7736, 108, 570, "Print",ExpressionUUID->"af155ed6-3e3f-49bb-b2ee-97136d753a5e"],
Cell[81424, 1330, 7740, 108, 570, "Print",ExpressionUUID->"ced08829-9b3b-4cfd-ab5d-d647b870fa70"],
Cell[89167, 1440, 7734, 108, 570, "Print",ExpressionUUID->"dda253b7-119c-4bf1-9590-b8312b0db940"],
Cell[96904, 1550, 8386, 118, 676, "Print",ExpressionUUID->"148aa613-f5d3-4675-9a7d-59a71f5ec2a6"],
Cell[105293, 1670, 844, 18, 18, "Print",ExpressionUUID->"fe654680-53e0-4bb0-aeb0-85c8370f3176"],
Cell[106140, 1690, 7326, 102, 583, "Print",ExpressionUUID->"afec7023-db7b-4d2a-a8ae-11b15779dc06"],
Cell[113469, 1794, 7344, 102, 583, "Print",ExpressionUUID->"186c9fc4-4fc1-424c-a179-039ff1e53e0c"],
Cell[120816, 1898, 7338, 102, 583, "Print",ExpressionUUID->"15c499f4-2a2f-44c4-b4bb-a1c71a198a14"],
Cell[128157, 2002, 7984, 111, 689, "Print",ExpressionUUID->"98f85429-6b85-4949-8564-340fab731b6b"],
Cell[136144, 2115, 946, 20, 30, "Print",ExpressionUUID->"1129623b-bbd8-4855-b472-7a265b9bb544"],
Cell[137093, 2137, 6336, 89, 491, "Print",ExpressionUUID->"59a5eeae-c3b9-41e8-846b-58caf7f055f8"],
Cell[143432, 2228, 6340, 89, 491, "Print",ExpressionUUID->"f5f56afe-8761-44c9-af5d-108f0825ca14"],
Cell[149775, 2319, 6334, 89, 491, "Print",ExpressionUUID->"da722be0-64f1-45c4-8327-cd2b049144f8"],
Cell[156112, 2410, 7046, 100, 583, "Print",ExpressionUUID->"94c7f080-754a-447b-afe9-05849efbd365"],
Cell[163161, 2512, 882, 18, 30, "Print",ExpressionUUID->"43433cca-1974-4410-ba06-246a63ca70d2"],
Cell[164046, 2532, 6718, 95, 531, "Print",ExpressionUUID->"cc77d741-ec6a-4ca3-b5ac-f11c4a729568"],
Cell[170767, 2629, 6718, 95, 531, "Print",ExpressionUUID->"8237017a-1b5d-4723-9bb3-1ef669d35de1"],
Cell[177488, 2726, 6712, 95, 531, "Print",ExpressionUUID->"9e02daa4-e714-4c7a-a907-9e064222e326"],
Cell[184203, 2823, 7338, 105, 623, "Print",ExpressionUUID->"39ed008c-e9f1-4956-8bbf-43ad7d29d009"],
Cell[191544, 2930, 826, 18, 18, "Print",ExpressionUUID->"f8ba7741-f96a-4aed-a44a-16b946dc8249"],
Cell[192373, 2950, 7138, 100, 557, "Print",ExpressionUUID->"7e1e36e9-ed67-4934-b1e2-709cad920048"],
Cell[199514, 3052, 7190, 101, 557, "Print",ExpressionUUID->"c8693107-3852-48cb-badc-c032e3d59409"],
Cell[206707, 3155, 7182, 101, 557, "Print",ExpressionUUID->"577de3b7-fa6e-44fc-af44-a5a98a90f57c"],
Cell[213892, 3258, 7782, 110, 649, "Print",ExpressionUUID->"e04ea656-b006-4a55-b407-1a0139097061"],
Cell[221677, 3370, 818, 18, 18, "Print",ExpressionUUID->"b885f35e-bfa2-4f76-a439-8a7e83ca8f0d"],
Cell[222498, 3390, 3722, 56, 320, "Print",ExpressionUUID->"3e37d546-d1ae-445e-a6dc-057f80023e04"],
Cell[226223, 3448, 3722, 56, 320, "Print",ExpressionUUID->"857f43d0-821b-461d-8656-4c0f638a608b"],
Cell[229948, 3506, 3716, 56, 320, "Print",ExpressionUUID->"8049b95b-3e5f-4d71-8889-dcf64d31eccf"],
Cell[233667, 3564, 4304, 64, 412, "Print",ExpressionUUID->"773f0286-4cec-4587-a94f-21bc658ac4b5"],
Cell[237974, 3630, 870, 18, 30, "Print",ExpressionUUID->"41214fde-8344-480d-9a38-8173e0803788"],
Cell[238847, 3650, 6968, 98, 518, "Print",ExpressionUUID->"3678c9cf-743d-4f04-9215-4036ebfebb6c"],
Cell[245818, 3750, 6960, 97, 518, "Print",ExpressionUUID->"bb08c420-97ba-4e6b-a305-96fc5c05c28b"],
Cell[252781, 3849, 6954, 97, 518, "Print",ExpressionUUID->"caaa8f55-2579-4868-b4a7-5ba44a443106"],
Cell[259738, 3948, 7538, 105, 610, "Print",ExpressionUUID->"89e8e4da-844b-4b24-baaa-54f0450fc7f5"],
Cell[267279, 4055, 860, 19, 18, "Print",ExpressionUUID->"08a9b914-72af-4936-80d4-2331a3974960"],
Cell[268142, 4076, 5218, 74, 412, "Print",ExpressionUUID->"58c6a6ce-b29b-4e05-a076-4d17dc652c90"],
Cell[273363, 4152, 5228, 74, 412, "Print",ExpressionUUID->"5160a543-0908-473b-a941-283a9a15ff16"],
Cell[278594, 4228, 5224, 74, 412, "Print",ExpressionUUID->"7886bd36-aec3-48cd-895f-ae8b31862f73"],
Cell[283821, 4304, 5918, 84, 518, "Print",ExpressionUUID->"83e32111-6b0d-4274-9f40-fe8b37131ab3"],
Cell[289742, 4390, 848, 19, 18, "Print",ExpressionUUID->"b3215215-8498-46d9-8133-66b995bf3a69"],
Cell[290593, 4411, 5698, 80, 531, "Print",ExpressionUUID->"097bc3da-54c8-4c39-a018-959447c7dd50"],
Cell[296294, 4493, 5700, 80, 531, "Print",ExpressionUUID->"eefad0c9-3008-4579-84b2-6f93f9c7dd83"],
Cell[301997, 4575, 5694, 80, 531, "Print",ExpressionUUID->"1686ce7d-63d4-49be-baf5-91426497147e"],
Cell[307694, 4657, 6332, 89, 623, "Print",ExpressionUUID->"042f50af-03fa-41f2-a7ca-f10c3e1e81e2"],
Cell[314029, 4748, 868, 19, 30, "Print",ExpressionUUID->"7b845114-46d2-4002-a3ab-de7b260a992d"],
Cell[314900, 4769, 5286, 77, 399, "Print",ExpressionUUID->"303bdbd4-7c04-434c-b7a7-43351c71df0a"],
Cell[320189, 4848, 5290, 77, 399, "Print",ExpressionUUID->"90fe5b20-08ac-4d2c-bfe1-b3a17d8a3e8c"],
Cell[325482, 4927, 5282, 77, 399, "Print",ExpressionUUID->"eeb5b3b8-ac28-4f52-8a7d-1a2a439a0e6d"],
Cell[330767, 5006, 5986, 87, 504, "Print",ExpressionUUID->"7288dd30-65ae-4c8c-a634-206da4635e27"],
Cell[336756, 5095, 814, 19, 18, "Print",ExpressionUUID->"fb527e9f-50f6-4dec-b2a4-458883bcfc89"],
Cell[337573, 5116, 5874, 84, 478, "Print",ExpressionUUID->"9265d763-54af-41ab-8bef-036795d856de"],
Cell[343450, 5202, 5871, 83, 465, "Print",ExpressionUUID->"4783c9c3-298f-4b2d-bdb4-e8b6a0c29797"],
Cell[349324, 5287, 5863, 83, 465, "Print",ExpressionUUID->"885ba86c-b869-49c4-b060-132f82c06494"],
Cell[355190, 5372, 6437, 92, 557, "Print",ExpressionUUID->"5b7a3c49-1855-4419-bde8-d7d73ef2f3c1"],
Cell[361630, 5466, 828, 19, 18, "Print",ExpressionUUID->"e1066d0e-d731-4f19-b3c9-9206592aebfa"],
Cell[362461, 5487, 6257, 88, 597, "Print",ExpressionUUID->"068144b3-544f-4b77-b10a-a25b171b8ebc"],
Cell[368721, 5577, 6259, 88, 597, "Print",ExpressionUUID->"9c27e9bf-be90-456e-8f6d-9ac9bd78c332"],
Cell[374983, 5667, 6253, 88, 597, "Print",ExpressionUUID->"d28b2f8e-c86e-45ec-bc37-66eb438bf5b6"],
Cell[381239, 5757, 6897, 97, 689, "Print",ExpressionUUID->"cb274ab8-1bd6-45c0-8a05-4a143277cfdf"],
Cell[388139, 5856, 902, 20, 30, "Print",ExpressionUUID->"e4218be1-5665-4f34-8168-9d565c1fd253"],
Cell[389044, 5878, 6276, 90, 518, "Print",ExpressionUUID->"4951fa0e-2035-4819-925c-8ab0d5d78be4"],
Cell[395323, 5970, 6276, 90, 518, "Print",ExpressionUUID->"54471430-d272-41cf-82ed-a0a68e1e464d"],
Cell[401602, 6062, 6272, 90, 518, "Print",ExpressionUUID->"752462fc-a54f-406c-ab1d-460ed0938ca4"],
Cell[407877, 6154, 6924, 99, 610, "Print",ExpressionUUID->"9c0c7504-b66b-42b8-b189-845ba2773caa"],
Cell[414804, 6255, 827, 19, 18, "Print",ExpressionUUID->"e86244fa-9bb1-4b5c-bab7-7876bbd2f257"],
Cell[415634, 6276, 4090, 60, 346, "Print",ExpressionUUID->"25345bba-861a-41ca-8e53-b4787c05f126"],
Cell[419727, 6338, 4092, 60, 346, "Print",ExpressionUUID->"4094f69d-4d8d-412b-a6e6-1e5fd69f1c87"],
Cell[423822, 6400, 4086, 60, 346, "Print",ExpressionUUID->"b7342139-0be7-4dff-ab0f-948b702c8857"],
Cell[427911, 6462, 4940, 73, 452, "Print",ExpressionUUID->"b35953fb-7690-4d4e-924b-3ca66207f6fa"],
Cell[432854, 6537, 824, 19, 18, "Print",ExpressionUUID->"6e6b5500-8677-42ba-a322-fbce65e31fa5"],
Cell[433681, 6558, 8266, 114, 676, "Print",ExpressionUUID->"7b74f879-6b79-4c33-a5a6-ca56f6891c45"],
Cell[441950, 6674, 8268, 114, 676, "Print",ExpressionUUID->"b12893b9-752b-4715-8509-dd8351af210a"],
Cell[450221, 6790, 8262, 114, 676, "Print",ExpressionUUID->"69e5f884-9a6d-4dc5-b589-8882d3c0bf08"],
Cell[458486, 6906, 8944, 124, 768, "Print",ExpressionUUID->"059747be-2f08-49e7-b5e0-af128ae35431"],
Cell[467433, 7032, 918, 20, 30, "Print",ExpressionUUID->"9f1266fd-b000-4bd2-a6f6-e062e5f0b8d4"],
Cell[468354, 7054, 5048, 72, 412, "Print",ExpressionUUID->"f36feaed-ee8b-4de9-ae0e-53d8884e8e28"],
Cell[473405, 7128, 5050, 72, 412, "Print",ExpressionUUID->"daf8d80e-7f36-4ce2-8372-00c7906fa927"],
Cell[478458, 7202, 5044, 72, 412, "Print",ExpressionUUID->"b246bf4e-03ed-4831-9939-a60fae30db62"],
Cell[483505, 7276, 5690, 81, 504, "Print",ExpressionUUID->"1f560519-b616-4132-a632-e422e025122c"],
Cell[489198, 7359, 916, 20, 30, "Print",ExpressionUUID->"9c9cab94-1621-4028-995a-7af4a90d4c20"],
Cell[490117, 7381, 4572, 66, 346, "Print",ExpressionUUID->"68ee9d88-cd4a-449a-9416-ccb74c8c990d"],
Cell[494692, 7449, 4572, 66, 346, "Print",ExpressionUUID->"a689298e-51e1-4549-9b5c-40d3abd7555a"],
Cell[499267, 7517, 4568, 66, 346, "Print",ExpressionUUID->"5a6f2646-2125-4536-aad3-0645aea8440e"],
Cell[503838, 7585, 5204, 75, 439, "Print",ExpressionUUID->"a273d07a-e014-4b80-b5f9-3eba56b11a71"],
Cell[509045, 7662, 886, 19, 30, "Print",ExpressionUUID->"22702625-f603-4438-ae3c-298658f40a8f"],
Cell[509934, 7683, 6441, 90, 531, "Print",ExpressionUUID->"9777a78e-1b0f-466a-8231-4651b41e48da"],
Cell[516378, 7775, 6187, 87, 531, "Print",ExpressionUUID->"5cad619a-fe31-4c48-84c0-4096486841ab"],
Cell[522568, 7864, 6181, 87, 531, "Print",ExpressionUUID->"3590f239-50bb-406e-b4bc-f3fab1cc0d3a"],
Cell[528752, 7953, 7229, 102, 662, "Print",ExpressionUUID->"5a4d4ab3-1eac-4801-9bd7-982d085cb152"],
Cell[535984, 8057, 916, 20, 30, "Print",ExpressionUUID->"8d15dcfc-36ce-4635-9268-974b548d823b"],
Cell[536903, 8079, 7062, 98, 689, "Print",ExpressionUUID->"961e869b-b1ad-4136-ac25-51ed8292fea0"],
Cell[543968, 8179, 7064, 98, 689, "Print",ExpressionUUID->"85763dd0-17ee-4561-be15-5426d82502c2"],
Cell[551035, 8279, 7055, 98, 689, "Print",ExpressionUUID->"a33889be-11e8-44c5-9049-122223ce736a"],
Cell[558093, 8379, 7661, 107, 781, "Print",ExpressionUUID->"963501bf-be8a-47e0-83ca-0183e4891afc"],
Cell[565757, 8488, 946, 20, 30, "Print",ExpressionUUID->"b50cf8c2-4dcc-49d1-b289-c327cd10d912"],
Cell[566706, 8510, 5652, 81, 452, "Print",ExpressionUUID->"bc6334b6-45bd-4c60-8502-1e7a7e2f231c"],
Cell[572361, 8593, 5654, 81, 452, "Print",ExpressionUUID->"c15211c0-63d8-4080-a959-c8f5d2bc6e29"],
Cell[578018, 8676, 5646, 81, 452, "Print",ExpressionUUID->"115fdcbe-782a-4d9d-8ce0-9b27910a9bfd"],
Cell[583667, 8759, 6380, 92, 544, "Print",ExpressionUUID->"519dc5d2-1134-4db8-b36c-e95b308af6c9"],
Cell[590050, 8853, 820, 19, 18, "Print",ExpressionUUID->"388d96f2-0fe3-45d0-8862-ae33c8e00bc5"],
Cell[590873, 8874, 5055, 72, 557, "Print",ExpressionUUID->"01daa410-eecc-436e-958b-86a0c8c3d3ca"],
Cell[595931, 8948, 5052, 72, 544, "Print",ExpressionUUID->"b9710736-a5dc-4215-896a-624f77b98b0f"],
Cell[600986, 9022, 5046, 72, 544, "Print",ExpressionUUID->"56e31300-51a9-47d5-b472-750d92392eaf"],
Cell[606035, 9096, 5850, 83, 649, "Print",ExpressionUUID->"3d39071c-dc0a-4fd6-a9eb-0c0e4c21676e"],
Cell[611888, 9181, 876, 19, 30, "Print",ExpressionUUID->"c58fbbe7-0786-4bde-8296-2bf9bde7056f"],
Cell[612767, 9202, 7326, 104, 557, "Print",ExpressionUUID->"89d695e0-87c4-48b0-8750-67a0bdf18aba"],
Cell[620096, 9308, 7370, 104, 557, "Print",ExpressionUUID->"2ef2eb50-88f1-4a31-b40c-a17ec08bb7a7"],
Cell[627469, 9414, 7366, 104, 557, "Print",ExpressionUUID->"0fe24690-cb2d-4dab-a7cc-490a760c036c"],
Cell[634838, 9520, 8006, 113, 649, "Print",ExpressionUUID->"c49ab61b-4242-469b-b35a-ecfe67c186ce"],
Cell[642847, 9635, 826, 19, 18, "Print",ExpressionUUID->"f276c0b7-9ba8-45a7-a1cb-537879a0f038"],
Cell[643676, 9656, 2276, 36, 188, "Print",ExpressionUUID->"6672f42d-4047-4fca-925e-f9576dadd07e"],
Cell[645955, 9694, 2278, 36, 188, "Print",ExpressionUUID->"89453b00-2670-4c57-bd5e-f11a0361490b"],
Cell[648236, 9732, 2272, 36, 188, "Print",ExpressionUUID->"d193ffcc-924e-491a-86d6-406ad0461751"],
Cell[650511, 9770, 2986, 47, 280, "Print",ExpressionUUID->"ca103e05-8bc6-4885-8f7f-0f7555f34911"],
Cell[653500, 9819, 874, 19, 30, "Print",ExpressionUUID->"6eedcd60-6f98-4c5f-879b-0aa863362ff2"],
Cell[654377, 9840, 8220, 115, 649, "Print",ExpressionUUID->"27174e6a-d385-4b49-a742-5b0d1f99919a"],
Cell[662600, 9957, 8224, 115, 649, "Print",ExpressionUUID->"ccd5465d-4b0e-4ff5-a2ef-c93fda73ec7d"],
Cell[670827, 10074, 8216, 115, 649, "Print",ExpressionUUID->"ac0df663-e25d-4af4-b357-cdb27081a7ca"],
Cell[679046, 10191, 8822, 123, 742, "Print",ExpressionUUID->"7a16cb89-f479-4abc-85c0-7dc2493dc943"],
Cell[687871, 10316, 890, 19, 30, "Print",ExpressionUUID->"d10ad07f-df4b-483c-9148-8a9195e4c2fb"],
Cell[688764, 10337, 5760, 83, 412, "Print",ExpressionUUID->"ee940078-edeb-41d3-ab11-7410b7b3f134"],
Cell[694527, 10422, 5760, 83, 412, "Print",ExpressionUUID->"b5274c21-fc84-4aeb-b3df-40a7d3b25b55"],
Cell[700290, 10507, 5753, 83, 412, "Print",ExpressionUUID->"1a4a97f9-0fbd-419c-8bd8-aae306ea97ea"],
Cell[706046, 10592, 6676, 96, 518, "Print",ExpressionUUID->"3394acc3-16a6-4daf-9657-ef9d43be156d"],
Cell[712725, 10690, 860, 19, 18, "Print",ExpressionUUID->"ac6d337a-730a-444e-a71d-cf3907826a53"],
Cell[713588, 10711, 7240, 101, 557, "Print",ExpressionUUID->"612a2cf6-4cc5-42df-9dd8-0b7152bfd40b"],
Cell[720831, 10814, 7242, 101, 557, "Print",ExpressionUUID->"6c55686a-a1ce-4fc1-aed2-c9527f9f2174"],
Cell[728076, 10917, 7234, 101, 557, "Print",ExpressionUUID->"5f233f96-e3f6-4617-ae8e-3201560e6b91"],
Cell[735313, 11020, 7840, 110, 649, "Print",ExpressionUUID->"e68c24ab-d6b9-4e6e-8705-a54e7b65c39d"],
Cell[743156, 11132, 860, 19, 18, "Print",ExpressionUUID->"934cbce8-6416-47ba-ba36-3f77a99950db"],
Cell[744019, 11153, 5014, 72, 478, "Print",ExpressionUUID->"00a256cb-abb7-47a5-ade3-885e6b6614cc"],
Cell[749036, 11227, 5042, 72, 478, "Print",ExpressionUUID->"c6a49e58-58b4-4a6c-9c1f-cda9a9bef658"],
Cell[754081, 11301, 5036, 72, 478, "Print",ExpressionUUID->"070b2cb8-fc1c-411b-95e6-04a571583d01"],
Cell[759120, 11375, 5660, 82, 570, "Print",ExpressionUUID->"46a72e09-8f88-4edd-9586-4817cdef3969"],
Cell[764783, 11459, 852, 19, 18, "Print",ExpressionUUID->"f63a9a62-ca1a-4393-978c-14999ea99d93"],
Cell[765638, 11480, 7468, 105, 531, "Print",ExpressionUUID->"3f9bcb2a-f046-4a50-8040-62a4976d7d3b"],
Cell[773109, 11587, 7396, 103, 531, "Print",ExpressionUUID->"356ecfe7-79a7-4b3c-82bb-352b84fdf8f4"],
Cell[780508, 11692, 7390, 103, 531, "Print",ExpressionUUID->"3db506ca-8171-49d6-9cc0-cc4ff16e314e"],
Cell[787901, 11797, 7970, 112, 623, "Print",ExpressionUUID->"e79bd1fd-4cf3-4965-b9d7-849d5c029156"],
Cell[795874, 11911, 880, 19, 30, "Print",ExpressionUUID->"985ba7ab-4d1e-4aa3-b486-e3fa6555d050"],
Cell[796757, 11932, 6994, 98, 570, "Print",ExpressionUUID->"8b4c6b32-5331-4a68-b54b-b0a9ebf60e55"],
Cell[803754, 12032, 6998, 98, 570, "Print",ExpressionUUID->"b7520f04-a31a-44d0-bfb5-53fb3a81960a"],
Cell[810755, 12132, 6992, 98, 570, "Print",ExpressionUUID->"9ce1cf80-7d6e-4d67-9dd3-c1d3911d2530"],
Cell[817750, 12232, 7568, 106, 676, "Print",ExpressionUUID->"f9206a22-f9c4-44ae-9c51-04da4641b34a"]
}, Open  ]]
}, Open  ]]
}
]
*)

